openapi: 3.0.0
info:
  contact:
    email: developer@gusto.com
    name: Developer Relations
  description: Welcome to Gusto's Embedded Payroll API documentation!
  termsOfService: https://gusto.com/about/terms/developer-terms-of-service
  title: Gusto API
  version: 2024-03-01
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
  x-konfig-has-globally-required-security: true
servers:
- description: Demo
  url: https://api.gusto-demo.com
- description: Production
  url: https://api.gusto.com
security:
- Authorization: []
tags:
- name: Payrolls
- name: Companies
- name: Pay Schedules
- name: Employees
- name: Employee Addresses
- name: Jobs and Compensations
- name: Employee Employments
- name: Contractors
- name: Company Benefits
- name: External Payrolls
- name: Time Off Policies
- name: Contractor Payments
- name: Holiday Pay Policies
- name: Departments
- name: Webhooks
- name: Employee Benefits
- name: Locations
- name: Employee Payment Method
- name: Employee Forms
- name: Signatories
- name: Bank Accounts
- name: Employee Tax Setup
- name: Earning Types
- name: Contractor Payment Method
- name: Company Forms
- name: Garnishments
- name: Contractor Forms
- name: Tax Requirements
- name: Introspection
- name: Payment Configs
- name: Federal Tax Details
- name: Industry Selection
- name: Recovery Cases
- name: Flows
- name: Generated Documents
- name: Notifications
- name: Events
- name: Invoices
- name: ACH Transactions
paths:
  /v1/token_info:
    get:
      description: Returns scope and resource information associated with the current
        access token.
      operationId: Introspection_getCurrentAccessTokenInfo
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    scope: companies:read companies:write employees:read
                    resource:
                      type: Company
                      uuid: 5eca5127-6048-43ad-91ee-b56a0c34bc85
              schema:
                $ref: '#/components/schemas/IntrospectionGetCurrentAccessTokenInfoResponse'
          description: Example response
      summary: Get info about the current access token
      tags:
      - Introspection
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-token_info
      x-accepts: application/json
  /oauth/token:
    post:
      description: |-
        Exchange a refresh token for a new access token.

        The previous `refresh_token` will be revoked on the first usage of the new `access_token`.

        The `expires_in` value is provided in seconds from when the `access_token` was generated.
      operationId: Introspection_exchangeRefreshToken
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntrospectionExchangeRefreshTokenRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    access_token: 737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc
                    token_type: bearer
                    expires_in: 7200
                    refresh_token: iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E
                    scope: ach_transactions:read benefits:read companies:read
                    created_at: 2023-09-12T16:42:25.000-07:00
              schema:
                $ref: '#/components/schemas/Authentication'
          description: Example response
      security:
      - ApiKeyAuth: []
      summary: Refresh access token
      tags:
      - Introspection
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--oauth-token
      x-content-type: application/json
      x-accepts: application/json
  /v1/partner_managed_companies:
    post:
      description: |-
        Create a partner managed company. When you successfully call the API, it does the following:
        * Creates a new company in Gusto
        * Creates a new user using the provided email if the user does not already exist.
        * Makes the user the primary payroll administrator of the new company.

        In response, you will receive oauth access tokens for the created company.

        IMPORTANT: the returned access and refresh tokens are reserved for this company only. They cannot be used to access other companies AND previously granted tokens cannot be used to access this company.

        > 📘 Token Authentication
        >
        > this endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#retrieving-access-tokens)
      operationId: Companies_createPartnerManagedCompany
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  user:
                    first_name: Frank
                    last_name: Ocean
                    email: frank@example.com
                    phone: "2345558899"
                  company:
                    name: "Frank's Ocean, LLC"
                    trade_name: Frank’s Ocean
                    ein: "123456789"
            schema:
              $ref: '#/components/schemas/CompaniesCreatePartnerManagedCompanyRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    access_token: de6780bc506a0446309bd9362820ba8aed28aa506c71eedbe1c5c4f9dd350e54
                    refresh_token: 8257e65c97202ed1726cf9571600918f3bffb2544b26e00a61df9897668c33a1
                    company_uuid: d525dd21-ba6e-482c-be15-c2c7237f1364
                    expires_in: 7200
              schema:
                $ref: '#/components/schemas/CompaniesCreatePartnerManagedCompanyResponse'
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Create a partner managed company
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}:
    get:
      description: "Get a company.         \nThe employees:read scope is required\
        \ to return home_address and non-work locations.         \nThe company_admin:read\
        \ scope is required to return primary_payroll_admin.         \nThe signatories:read\
        \ scope is required to return primary_signatory.         \n\nscope: `companies:read`"
      operationId: Companies_getCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    ein: 00-0000001
                    entity_type: C-Corporation
                    tier: core
                    is_suspended: false
                    company_status: Approved
                    uuid: c7a07c73-a703-4462-9343-1b181182b6e0
                    name: Shoppe Studios LLC
                    trade_name: Record Shoppe
                    is_partner_managed: false
                    pay_schedule_type: by_department
                    join_date: 2023-03-01
                    funding_type: ach
                    locations:
                    - street_1: 412 Kiera Stravenue
                      street_2: Suite 391
                      city: San Francisco
                      state: CA
                      zip: "94107"
                      country: USA
                      active: true
                    - street_1: 644 Fay Vista
                      street_2: Suite 842
                      city: Richmond
                      state: VA
                      zip: "23218"
                      country: USA
                      active: true
                    compensations:
                      hourly:
                      - name: Overtime
                        multiple: 1.5
                      - name: Double overtime
                        multiple: 2
                      - name: Regular
                        multiple: 1
                      - name: Outstanding vacation
                        multiple: 1
                      - name: Holiday
                        multiple: 1
                      - name: Emergency sick - self care
                        multiple: 1
                      - name: Emergency sick - caring for others
                        multiple: 1
                      - name: FMLA Public Health Emergency Leave
                        multiple: 1
                      - name: Regular Hours
                        multiple: 1
                      fixed:
                      - name: Bonus
                      - name: Commission
                      - name: Paycheck Tips
                      - name: Cash Tips
                      - name: Correction Payment
                      - name: Severance
                      - name: Minimum Wage Adjustment
                      - name: Reimbursement
                      paid_time_off:
                      - name: Vacation Hours
                      - name: Sick Hours
                      - name: Holiday Hours
                    primary_signatory:
                      first_name: Alda
                      middle_initial: ""
                      last_name: Carter
                      phone: 1-565-710-7558
                      email: louie.hessel7757869450111547@zemlak.biz
                      home_address:
                        street_1: 524 Roob Divide
                        street_2: Suite 565
                        city: San Francisco
                        state: CA
                        zip: "94107"
                        country: USA
                    primary_payroll_admin:
                      first_name: Ian
                      last_name: Labadie
                      phone: 1-565-710-7559
                      email: louie.hessel7757869450111547@zemlak.biz
              schema:
                $ref: '#/components/schemas/Company'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id
      x-accepts: application/json
  /v1/partner_managed_companies/{company_uuid}/migrate:
    put:
      description: |-
        Migrate an existing Gusto customer to your embedded payroll product.

        To use this endpoint, the customer will need to connect their Gusto account to your application using [OAuth2](https://docs.gusto.com/embedded-payroll/docs/oauth2) then view and [accept the Embedded Payroll Terms of Service](https://docs.gusto.com/embedded-payroll/reference/post-partner-managed-companies-company_uuid-accept_terms_of_service).

        scope: `partner_managed_companies:write`
      operationId: Companies_migrateToEmbeddedPayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompaniesMigrateToEmbeddedPayrollRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    company_uuid: 39abf9b9-650b-4e67-89a0-389dc6ee8a71
                    migration_status: true
              schema:
                $ref: '#/components/schemas/CompaniesMigrateToEmbeddedPayrollResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Migrate company to embedded payroll
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-partner_managed_companies-company_uuid-migrate
      x-content-type: application/json
      x-accepts: application/json
  /v1/partner_managed_companies/{company_uuid}/accept_terms_of_service:
    post:
      description: |-
        Accept the Gusto Embedded Payroll's [Terms of Service](https://flows.gusto.com/terms).
        The user must have a role in the company in order to accept the Terms of Service.

        scope: `terms_of_services:write`
      operationId: Companies_acceptTermsOfService
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompaniesAcceptTermsOfServiceRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    latest_terms_accepted: true
              schema:
                $ref: '#/components/schemas/CompaniesAcceptTermsOfServiceResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Accept terms of service for a company user
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies-company_uuid-accept_terms_of_service
      x-content-type: application/json
      x-accepts: application/json
  /v1/partner_managed_companies/{company_uuid}/retrieve_terms_of_service:
    post:
      description: |-
        Retrieve the user acceptance status of the Gusto Embedded Payroll's [Terms of Service](https://flows.gusto.com/terms).

        scope: `terms_of_services:read`
      operationId: Companies_getTermsOfServiceStatus
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompaniesGetTermsOfServiceStatusRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    latest_terms_accepted: true
              schema:
                $ref: '#/components/schemas/CompaniesGetTermsOfServiceStatusResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Retrieve terms of service status for a company user
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies-company_uuid-retrieve_terms_of_service
      x-content-type: application/json
      x-accepts: application/json
  /v1/invoices/{invoice_period}:
    get:
      description: "Retrieve data for active companies used to calculate invoices\
        \ for Gusto Embedded Payroll. A company is considered active for an invoice\
        \ period if they are an active partner managed company, have run payroll or\
        \ created contractor payments since becoming a partner managed company, and\
        \ are not suspended at any point during the invoice period.  This endpoint\
        \ forces pagination, with 100 results returned at a time. You can learn more\
        \ about our pagination here: [pagination guide](https://docs.gusto.com/embedded-payroll/docs/pagination)\
        \ \n\n> \U0001f4d8 Token Authentication\n>\n> This endpoint uses the [organization\
        \ level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#retrieving-access-tokens)\n\
        \nscope: `invoices:read`"
      operationId: Invoices_getInvoicingDataForCompanies
      parameters:
      - description: The month we are calculating the invoice for. Must be in YYYY-MM
          format
        explode: false
        in: path
        name: invoice_period
        required: true
        schema:
          example: 2020-01
          type: string
          x-konfig-original-example: 2020-01
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-invoice_period-schema
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Filter companies returned in the active_companies response,\
          \ will return an error if company not active during provided invoice period.\
          \ i.e. `?company_uuids=781922d8-e780-4b6b-bf74-ee303166d022,bbbca930-7322-491c-ba7f-98707a52a9c5`"
        explode: true
        in: query
        name: company_uuids
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                    active_companies:
                    - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                      active_employees: 5
                      active_contractors: 3
                      initial_invoice_period: 2022-01
                    - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                      active_employees: 0
                      active_contractors: 1
                      initial_invoice_period: 2023-05
                x-konfig-original-example:
                  value:
                    active_companies:
                    - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                      active_employees: 5
                      active_contractors: 3
                      initial_invoice_period: 2022-01
                    - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                      active_employees: 0
                      active_contractors: 1
                      initial_invoice_period: 2023-05
              schema:
                $ref: '#/components/schemas/Invoice-Data'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Retrieve invoicing data for companies
      tags:
      - Invoices
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-invoices-invoice_period
      x-accepts: application/json
  /v1/companies/{company_id}/federal_tax_details:
    get:
      description: |-
        Fetches attributes relevant for a company's federal taxes.

        scope: `company_federal_taxes:read`
      operationId: FederalTaxDetails_getAttributes
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: string
                    tax_payer_type: string
                    taxable_as_scorp: false
                    filing_form: string
                    has_ein: true
                    ein_verified: true
                    legal_name: string
              schema:
                $ref: '#/components/schemas/Federal-Tax-Details'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get Federal Tax Details
      tags:
      - Federal Tax Details
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-federal_tax_details
      x-accepts: application/json
    put:
      description: |-
        Updates attributes relevant for a company's federal taxes.
        This information is required is to onboard a company for use with Gusto Embedded Payroll.

        scope: `company_federal_taxes:write`
      operationId: FederalTaxDetails_updateAttributes
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 6cb95e00540706ca48d4577b3c839fbe
                  tax_payer_type: LLP
                  taxable_as_scorp: false
                  filing_form: "944"
                  has_ein: true
                  ein_verified: false
                  legal_name: Acme Corp.
            schema:
              $ref: '#/components/schemas/FederalTaxDetailsUpdateAttributesRequest'
        description: 'Attributes related to federal tax details that can be updated
          via this endpoint include:'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: string
                    tax_payer_type: string
                    taxable_as_scorp: false
                    filing_form: string
                    has_ein: true
                    ein_verified: true
                    legal_name: string
              schema:
                $ref: '#/components/schemas/Federal-Tax-Details'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update Federal Tax Details
      tags:
      - Federal Tax Details
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-federal_tax_details
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/industry_selection:
    get:
      description: |-
        Get industry selection for the company.

        scope: `companies:read`
      operationId: IndustrySelection_getCompanyIndustrySelection
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Computer Training
                    company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                    naics_code: "611420"
                    sic_codes:
                    - "8243"
              schema:
                $ref: '#/components/schemas/Industry'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company industry selection
      tags:
      - Industry Selection
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-industry_selection
      x-accepts: application/json
    put:
      description: |-
        Update the company industry selection by passing in industry classification codes: [NAICS code](https://www.naics.com), [SICS code](https://siccode.com/) and industry title. Our UI is leveraging [Middesk API](https://docs.middesk.com/reference/introduction) to determine industry classification codes.

        scope: `companies:write`
      operationId: IndustrySelection_updateCompanyIndustrySelection
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  title: Computer Training
                  naics_code: "611420"
                  sic_codes:
                  - "8243"
            schema:
              $ref: '#/components/schemas/IndustrySelectionUpdateCompanyIndustrySelectionRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Computer Training
                    company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                    naics_code: "611420"
                    sic_codes:
                    - "8243"
              schema:
                $ref: '#/components/schemas/Industry'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a company industry selection
      tags:
      - Industry Selection
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-industry_selection
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/admins:
    get:
      description: |-
        Returns a list of all the admins at a company

        scope: `company_admin:read`
      operationId: Companies_getAllAdmins
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - first_name: Katherine
                    last_name: Johnson
                    email: Katherine@acmecorp.com
                    uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
                  - first_name: Anita
                    last_name: Borg
                    email: Anita@acmecorp.com
                    uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
              schema:
                $ref: '#/components/schemas/CompaniesGetAllAdminsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all the admins at a company
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-admins
      x-accepts: application/json
    post:
      description: |-
        Creates a new admin for a company.
        If the email matches an existing user, this will create an admin account for the current user. Otherwise, this will create a new user.

        scope: `company_admin:write`
      operationId: Companies_createAdmin
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  first_name: John
                  last_name: Smith
                  email: jsmith99@gmail.com
            schema:
              $ref: '#/components/schemas/CompaniesCreateAdminRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    first_name: John
                    last_name: Smith
                    email: jsmith99@gmail.com
                    uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
              schema:
                $ref: '#/components/schemas/Admin'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an admin for the company
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-admins
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/signatories:
    get:
      description: |-
        Returns company signatories. Currently we only support a single signatory per company.

        scope: `signatories:read`
      operationId: Signatories_getCompanySignatories
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: Owner
                    version: 49ea586f528411f5cfadfd54452b2423
                    uuid: f8c653dc-0094-41fb-8670-45d6399afade
                    first_name: Bob
                    last_name: Johnson
                    phone: "4239879876"
                    birthday: 2002-10-31
                    email: olin.okuneva@denesik.us
                    is_admin: false
                    has_ssn: true
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: "94107"
                      country: USA
                    identity_verification_status: Skipped
              schema:
                $ref: '#/components/schemas/SignatoriesGetCompanySignatoriesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all company signatories
      tags:
      - Signatories
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-signatories
      x-accepts: application/json
    post:
      description: |-
        Create a company signatory with complete information.
        A signatory can legally sign forms once the identity verification process is successful.

        scope: `signatories:manage`
      operationId: Signatories_createSignatoryWithCompleteInformation
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatoriesCreateSignatoryWithCompleteInformationRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Owner
                    version: 49ea586f528411f5cfadfd54452b2423
                    uuid: f8c653dc-0094-41fb-8670-45d6399afade
                    first_name: Bob
                    last_name: Johnson
                    phone: "4239879876"
                    birthday: 2002-10-31
                    email: olin.okuneva@denesik.us
                    is_admin: false
                    has_ssn: true
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: "94107"
                      country: USA
                    identity_verification_status: Skipped
              schema:
                $ref: '#/components/schemas/Signatory'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a signatory
      tags:
      - Signatories
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-signatories
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/signatories/invite:
    post:
      description: "Create a signatory with minimal information. This signatory can\
        \ be invited to provide more information through the `PUT /v1/companies/{company_uuid}/signatories/{signatory_uuid}`\
        \ endpoint. This will start the identity verification process and allow the\
        \ signatory to be verified to sign documents."
      operationId: Signatories_createInvite
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatoriesCreateInviteRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Owner
                    version: 49ea586f528411f5cfadfd54452b2423
                    uuid: f8c653dc-0094-41fb-8670-45d6399afade
                    first_name: Bob
                    last_name: Johnson
                    phone: "4239879876"
                    birthday: 2002-10-31
                    email: olin.okuneva@denesik.us
                    is_admin: false
                    has_ssn: true
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: "94107"
                      country: USA
                    identity_verification_status: Skipped
              schema:
                $ref: '#/components/schemas/Signatory'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Invite a signatory
      tags:
      - Signatories
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-signatories-invite
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/signatories/{signatory_uuid}:
    delete:
      description: |-
        Delete a company signatory.

        scope: `signatories:manage`
      operationId: Signatories_deleteSignatory
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the signatory
        explode: false
        in: path
        name: signatory_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete a signatory
      tags:
      - Signatories
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-signatories-signatory_uuid
      x-accepts: application/json
    put:
      description: |-
        Update a signatory that has been either invited or created. If the signatory has been created with minimal information through the `POST /v1/companies/{company_uuid}/signatories/invite` endpoint, then the first update must contain all attributes specified in the request body in order to start the identity verification process.

        scope: `signatories:write`
      operationId: Signatories_update
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the signatory
        explode: false
        in: path
        name: signatory_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatoriesUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Owner
                    version: 49ea586f528411f5cfadfd54452b2423
                    uuid: f8c653dc-0094-41fb-8670-45d6399afade
                    first_name: Bob
                    last_name: Johnson
                    phone: "4239879876"
                    birthday: 2002-10-31
                    email: olin.okuneva@denesik.us
                    is_admin: false
                    has_ssn: true
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: "94107"
                      country: USA
                    identity_verification_status: Skipped
              schema:
                $ref: '#/components/schemas/Signatory'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a signatory
      tags:
      - Signatories
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-signatories-signatory_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/onboarding_status:
    get:
      description: |-
        Get company's onboarding status.
        The data returned helps inform the required onboarding steps and respective completion status.

        scope: `company_onboarding_status:read`
      operationId: Companies_getOnboardingStatus
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_completed: false
                    onboarding_steps:
                    - title: Add Your Company's Addresses
                      id: add_addresses
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Enter Your Federal Tax Information
                      id: federal_tax_setup
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Select Industry
                      id: select_industry
                      required: true
                      completed: true
                      skippable: false
                      requirements:
                      - add_addresses
                      - add_employees
                    - title: Add Your Bank Account
                      id: add_bank_info
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Add Your Employees
                      id: add_employees
                      required: true
                      completed: true
                      skippable: true
                      requirements:
                      - add_addresses
                    - title: Enter Your State Tax Information
                      id: state_setup
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_addresses
                      - add_employees
                    - title: Select a Pay Schedule
                      id: payroll_schedule
                      required: true
                      completed: false
                      skippable: false
                      requirements: []
                    - title: Sign Documents
                      id: sign_all_forms
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_employees
                      - federal_tax_setup
                      - state_setup
                      - add_bank_info
                      - payroll_schedule
                    - title: Verify Your Bank Account
                      id: verify_bank_info
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_bank_info
              schema:
                $ref: '#/components/schemas/Company-Onboarding-Status'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the company's onboarding status
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-onboarding_status
      x-accepts: application/json
  /v1/companies/{company_uuid}/finish_onboarding:
    put:
      description: |-
        Finalize a given company's onboarding process.

        ### Approve a company in demo
        After a company is finished onboarding, Gusto requires an additional step to review and approve that company.
        In production environments, this step is required for risk-analysis purposes.

        We provide the endpoint `PUT '/v1/companies/{company_uuid}/approve'` to facilitate company approvals in the demo environment.

        ```shell
        PUT '/v1/companies/89771af8-b964-472e-8064-554dfbcb56d9/approve'

        # Response: Company object, with company_status: 'Approved'
        ```

        scope: `companies:write`
      operationId: Companies_finishOnboarding
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_completed: false
                    onboarding_steps:
                    - title: Add Your Company's Addresses
                      id: add_addresses
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Enter Your Federal Tax Information
                      id: federal_tax_setup
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Select Industry
                      id: select_industry
                      required: true
                      completed: true
                      skippable: false
                      requirements:
                      - add_addresses
                      - add_employees
                    - title: Add Your Bank Account
                      id: add_bank_info
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Add Your Employees
                      id: add_employees
                      required: true
                      completed: true
                      skippable: true
                      requirements:
                      - add_addresses
                    - title: Enter Your State Tax Information
                      id: state_setup
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_addresses
                      - add_employees
                    - title: Select a Pay Schedule
                      id: payroll_schedule
                      required: true
                      completed: false
                      skippable: false
                      requirements: []
                    - title: Sign Documents
                      id: sign_all_forms
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_employees
                      - federal_tax_setup
                      - state_setup
                      - add_bank_info
                      - payroll_schedule
                    - title: Verify Your Bank Account
                      id: verify_bank_info
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                      - add_bank_info
              schema:
                $ref: '#/components/schemas/Company-Onboarding-Status'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Finish company onboarding
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-finish_onboarding
      x-accepts: application/json
  /v1/companies/{company_id}/custom_fields:
    get:
      description: |-
        Returns a list of the custom fields of the company. Useful when you need to know the schema of custom fields for an entire company

        scope: `companies:read`
      operationId: Companies_getCustomFields
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    custom_fields:
                    - description: Employee Level
                      uuid: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      selection_options: null
                    - description: What is your t-shirt size?
                      uuid: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      selection_options: null
                    - description: Which is your favorite fruit?
                      uuid: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      selection_options:
                      - apple
                      - banana
                      - orange
              schema:
                $ref: '#/components/schemas/CompaniesGetCustomFieldsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the custom fields of a company
      tags:
      - Companies
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-custom_fields
      x-accepts: application/json
  /v1/companies/{company_uuid}/flows:
    post:
      description: |-
        Generate a link to access a pre-built workflow in Gusto white-label UI. For security, all generated flows will expire within 1 hour of inactivity or 24 hours from creation time, whichever comes first.

        scope: `flows:write`
      operationId: Flows_generateLink
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  flow_type: company_onboarding
            schema:
              $ref: '#/components/schemas/FlowsGenerateLinkRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    url: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
                    expires_at: 2021-12-28 04:25:48
              schema:
                $ref: '#/components/schemas/Flow'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a flow
      tags:
      - Flows
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-flows
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/locations:
    get:
      description: |-
        Company locations represent all addresses associated with a company. These can be filing addresses, mailing addresses, and/or work locations; one address may serve multiple, or all, purposes.

        Since all company locations are subsets of locations, retrieving or updating an individual record should be done via the locations endpoints.

        scope: `companies:read`
      operationId: Locations_getCompanyLocations
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 7d9753112507b9dda4fb97910f39b06e
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    phone_number: "5825710808"
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    street_1: 412 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: "94107"
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: 2023-09-12T16:42:25.000-07:00
                    updated_at: 2023-09-12T16:42:25.000-07:00
                  - version: 15e6b9680e00f3122729e64e3cef3224
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    phone_number: "2866070827"
                    uuid: fa94a2fd-11a8-4024-87ff-85c587d9d2b4
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: 2023-09-12T16:42:25.000-07:00
                    updated_at: 2023-09-12T16:42:25.000-07:00
              schema:
                $ref: '#/components/schemas/LocationsGetCompanyLocationsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get company locations
      tags:
      - Locations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-locations
      x-accepts: application/json
    post:
      description: |-
        Company locations represent all addresses associated with a company. These can be filing addresses, mailing addresses, and/or work locations; one address may serve multiple, or all, purposes.

        Since all company locations are subsets of locations, retrieving or updating an individual record should be done via the locations endpoints.

        scope: `companies.write`
      operationId: Locations_createCompanyLocation
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  phone_number: "8009360383"
                  street_1: 425 2nd Street
                  street_2: Suite 602
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
            schema:
              $ref: '#/components/schemas/LocationsCreateCompanyLocationRequest'
          application/xml:
            examples:
              Example:
                value:
                  phone_number: "8009360383"
                  street_1: 425 2nd Street
                  street_2: Suite 602
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
            schema:
              $ref: '#/components/schemas/LocationsCreateCompanyLocationRequest1'
        description: Create a company location.
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 7d9753112507b9dda4fb97910f39b06e
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    phone_number: "5825710808"
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    street_1: 412 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: "94107"
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: 2023-09-12T16:42:25.000-07:00
                    updated_at: 2023-09-12T16:42:25.000-07:00
              schema:
                $ref: '#/components/schemas/Location'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a company location
      tags:
      - Locations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-locations
      x-content-type: application/json
      x-accepts: application/json
  /v1/locations/{location_id}:
    get:
      description: |-
        Get a location.

        scope: `companies:read`
      operationId: Locations_getById
      parameters:
      - description: The UUID of the location
        explode: false
        in: path
        name: location_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 7d9753112507b9dda4fb97910f39b06e
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    phone_number: "5825710808"
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    street_1: 412 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: "94107"
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: 2023-09-12T16:42:25.000-07:00
                    updated_at: 2023-09-12T16:42:25.000-07:00
              schema:
                $ref: '#/components/schemas/Location'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a location
      tags:
      - Locations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-locations-location_id
      x-accepts: application/json
    put:
      description: |-
        Update a location.

        scope: `companies.write`
      operationId: Locations_updateLocation
      parameters:
      - description: The UUID of the location
        explode: false
        in: path
        name: location_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1928d0c378e519e9c03fb959bc959a6b
                  phone_number: "8009360383"
                  street_1: 425 2nd Street
                  street_2: Suite 602
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
            schema:
              $ref: '#/components/schemas/LocationsUpdateLocationRequest'
        description: Update a location
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 7d9753112507b9dda4fb97910f39b06e
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    phone_number: "5825710808"
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    street_1: 412 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: "94107"
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: 2023-09-12T16:42:25.000-07:00
                    updated_at: 2023-09-12T16:42:25.000-07:00
              schema:
                $ref: '#/components/schemas/Location'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a location
      tags:
      - Locations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-locations-location_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/locations/{location_uuid}/minimum_wages:
    get:
      description: |-
        Get minimum wages for a location

        scope: `companies:read`
      operationId: Locations_getMinimumWages
      parameters:
      - description: The UUID of the location
        explode: false
        in: path
        name: location_uuid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: effective_date
        required: false
        schema:
          example: 2020-01-31
          type: string
          x-konfig-original-example: 2020-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-effective_date-schema
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                    authority: State
                    wage: "13.0"
                    wage_type: Regular
                    effective_date: 2022-01-01
                    notes: Employers with 6 or more employees
              schema:
                $ref: '#/components/schemas/LocationsGetMinimumWagesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get minimum wages for a location
      tags:
      - Locations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-locations-location_uuid-minimum_wages
      x-accepts: application/json
  /v1/companies/{company_id}/bank_accounts:
    get:
      description: |-
        Returns company bank accounts. Currently, we only support a single default bank account per company.

        scope: `company_bank_accounts:read`
      operationId: BankAccounts_listCompanyBankAccounts
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                    company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                    account_type: Checking
                    routing_number: "851070439"
                    hidden_account_number: XXXX4087
                    verification_status: verified
                    verification_type: bank_deposits
                    name: Employer Funding Account
              schema:
                $ref: '#/components/schemas/BankAccountsListCompanyBankAccountsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all company bank accounts
      tags:
      - Bank Accounts
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-bank_accounts
      x-accepts: application/json
    post:
      description: "This endpoint creates a new company bank account.\n\nUpon being\
        \ created, two verification deposits are automatically sent to the bank account,\
        \ and the bank account's verification_status is 'awaiting_deposits'. \n\n\
        When the deposits are successfully transferred, the verification_status changes\
        \ to 'ready_for_verification', at which point the verify endpoint can be used\
        \ to verify the bank account.\nAfter successful verification, the bank account's\
        \ verification_status is 'verified'.\n\nscope: `company_bank_accounts:write`\n\
        \n> \U0001f6a7 Warning\n>\n> If a default bank account exists, it will be\
        \ disabled and the new bank account will replace it as the company's default\
        \ funding method."
      operationId: BankAccounts_createVerificationDeposits
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  routing_number: "115092013"
                  account_type: Checking
                  account_number: "9775014007"
            schema:
              $ref: '#/components/schemas/BankAccountsCreateVerificationDepositsRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                    company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                    account_type: Checking
                    routing_number: "851070439"
                    hidden_account_number: XXXX4087
                    verification_status: verified
                    verification_type: bank_deposits
                    name: Employer Funding Account
              schema:
                $ref: '#/components/schemas/Company-Bank-Account'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a company bank account
      tags:
      - Bank Accounts
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-bank_accounts
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/bank_accounts/{bank_account_uuid}/verify:
    put:
      description: |-
        Verify a company bank account by confirming the two micro-deposits sent to the bank account. Note that the order of the two deposits specified in request parameters does not matter. There's a maximum of 5 verification attempts, after which we will automatically initiate a new set of micro-deposits and require the bank account to be verified with the new micro-deposits.

        ### Bank account verification in demo

        We provide the endpoint `POST '/v1/companies/{company_id}/bank_accounts/{bank_account_uuid}/send_test_deposits'` to facilitate bank account verification in the demo environment. This endpoint simulates the micro-deposits transfer and returns them in the response. You can call this endpoint as many times as you wish to retrieve the values of the two micro deposits.

        ```
          POST '/v1/companies/89771af8-b964-472e-8064-554dfbcb56d9/bank_accounts/ade55e57-4800-4059-9ecd-fa29cfeb6dd2/send_test_deposits'

          {
            "deposit_1": 0.02,
            "deposit_2": 0.42
          }
        ```

        scope: `company_bank_accounts:write`
      operationId: BankAccounts_verifyMicroDeposits
      parameters:
      - description: The UUID of the bank account
        explode: false
        in: path
        name: bank_account_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  deposit_1: 0.02
                  deposit_2: 0.42
            schema:
              $ref: '#/components/schemas/BankAccountsVerifyMicroDepositsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                    company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                    account_type: Checking
                    routing_number: "851070439"
                    hidden_account_number: XXXX4087
                    verification_status: verified
                    verification_type: bank_deposits
                    name: Employer Funding Account
              schema:
                $ref: '#/components/schemas/Company-Bank-Account'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Verify a company bank account
      tags:
      - Bank Accounts
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-bank_accounts-bank_account_uuid-verify
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/external_payrolls:
    get:
      description: |-
        Get an external payroll for a given company.

        scope: `external_payrolls:read`
      operationId: ExternalPayrolls_listForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                    check_date: 2022-06-03
                    payment_period_start_date: 2022-05-15
                    payment_period_end_date: 2022-05-30
                    status: unprocessed
              schema:
                $ref: '#/components/schemas/ExternalPayrollsListForCompanyResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get external payrolls for a company
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls
      x-accepts: application/json
    post:
      description: |-
        Creates a new external payroll for the company.

        scope: `external_payrolls:write`
      operationId: ExternalPayrolls_createNewPayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  check_date: 2022-06-01
                  payment_period_start_date: 2022-05-15
                  payment_period_end_date: 2022-05-30
            schema:
              $ref: '#/components/schemas/ExternalPayrollsCreateNewPayrollRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                    check_date: 2022-06-03
                    payment_period_start_date: 2022-05-15
                    payment_period_end_date: 2022-05-30
                    status: unprocessed
                    external_payroll_items:
                    - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                      earnings:
                      - amount: 10000
                        hours: 0
                        earning_type: CompanyPayType
                        earning_id: 1
                      - amount: 500
                        hours: 0
                        earning_type: CompanyEarningType
                        earning_id: 4
                      benefits:
                      - benefit_id: 22
                        company_contribution_amount: 100
                        employee_deduction_amount: 50
                      - benefit_id: 25
                        company_contribution_amount: 0
                        employee_deduction_amount: 300
                      taxes:
                      - tax_id: 1
                        amount: 400
                      - tax_id: 2
                        amount: 60
                    applicable_earnings:
                    - earning_type: CompanyPayType
                      earning_id: 1
                      name: Regular Wages
                      input_type: amount
                      category: default
                    - earning_type: CompanyEarningType
                      earning_id: 4
                      name: Cash Tips
                      input_type: amount
                      category: default
                    applicable_benefits:
                    - description: Kaiser
                      id: 22
                      active: true
                    - description: HSA
                      id: 25
                      active: true
                    applicable_taxes:
                    - id: 1
                      name: Federal Income Tax
                      employer_tax: false
                      resident_tax: false
                    - id: 2
                      name: Social Security
                      employer_tax: false
                      resident_tax: false
                    metadata:
                      deletable: true
              schema:
                $ref: '#/components/schemas/External-Payroll'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a new external payroll for a company
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-external_payrolls
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/external_payrolls/{external_payroll_id}:
    delete:
      description: |-
        Delete an external payroll.

        scope: `external_payrolls:write`
      operationId: ExternalPayrolls_deletePayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the external payroll
        explode: false
        in: path
        name: external_payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete an external payroll
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-external_payrolls-external_payroll_id
      x-accepts: application/json
    get:
      description: |-
        Get an external payroll for a given company.

        scope: `external_payrolls:read`
      operationId: ExternalPayrolls_getById
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the external payroll
        explode: false
        in: path
        name: external_payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                    check_date: 2022-06-03
                    payment_period_start_date: 2022-05-15
                    payment_period_end_date: 2022-05-30
                    status: unprocessed
                    external_payroll_items:
                    - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                      earnings:
                      - amount: 10000
                        hours: 0
                        earning_type: CompanyPayType
                        earning_id: 1
                      - amount: 500
                        hours: 0
                        earning_type: CompanyEarningType
                        earning_id: 4
                      benefits:
                      - benefit_id: 22
                        company_contribution_amount: 100
                        employee_deduction_amount: 50
                      - benefit_id: 25
                        company_contribution_amount: 0
                        employee_deduction_amount: 300
                      taxes:
                      - tax_id: 1
                        amount: 400
                      - tax_id: 2
                        amount: 60
                    applicable_earnings:
                    - earning_type: CompanyPayType
                      earning_id: 1
                      name: Regular Wages
                      input_type: amount
                      category: default
                    - earning_type: CompanyEarningType
                      earning_id: 4
                      name: Cash Tips
                      input_type: amount
                      category: default
                    applicable_benefits:
                    - description: Kaiser
                      id: 22
                      active: true
                    - description: HSA
                      id: 25
                      active: true
                    applicable_taxes:
                    - id: 1
                      name: Federal Income Tax
                      employer_tax: false
                      resident_tax: false
                    - id: 2
                      name: Social Security
                      employer_tax: false
                      resident_tax: false
                    metadata:
                      deletable: true
              schema:
                $ref: '#/components/schemas/External-Payroll'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an external payroll
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-external_payroll_id
      x-accepts: application/json
    put:
      description: |-
        Update an external payroll with a list of external payroll items

        scope: `external_payrolls:write`
      operationId: ExternalPayrolls_updatePayrollItems
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the external payroll
        explode: false
        in: path
        name: external_payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  replace_fields: true
                  external_payroll_items:
                  - employee_uuid: 403c6ee3-5f58-40ef-a117-ff7175cd9ee3
                    earnings:
                    - hours: "0.0"
                      amount: "200.00"
                      earning_type: CompanyPayType
                      earning_id: 1
                    - hours: "0.0"
                      amount: "5000.00"
                      earning_type: CompanyEarningType
                      earning_id: 2
                    benefits:
                    - company_contribution_amount: "300.0"
                      employee_deduction_amount: "300.0"
                      benefit_id: 10
                    - company_contribution_amount: "50.0"
                      employee_deduction_amount: "100.0"
                      benefit_id: 21
                    taxes:
                    - amount: "20.0"
                      tax_id: 1
                    - amount: "100.0"
                      tax_id: 2
            schema:
              $ref: '#/components/schemas/ExternalPayrollsUpdatePayrollItemsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                    check_date: 2022-06-03
                    payment_period_start_date: 2022-05-15
                    payment_period_end_date: 2022-05-30
                    status: unprocessed
                    external_payroll_items:
                    - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                      earnings:
                      - amount: 10000
                        hours: 0
                        earning_type: CompanyPayType
                        earning_id: 1
                      - amount: 500
                        hours: 0
                        earning_type: CompanyEarningType
                        earning_id: 4
                      benefits:
                      - benefit_id: 22
                        company_contribution_amount: 100
                        employee_deduction_amount: 50
                      - benefit_id: 25
                        company_contribution_amount: 0
                        employee_deduction_amount: 300
                      taxes:
                      - tax_id: 1
                        amount: 400
                      - tax_id: 2
                        amount: 60
                    applicable_earnings:
                    - earning_type: CompanyPayType
                      earning_id: 1
                      name: Regular Wages
                      input_type: amount
                      category: default
                    - earning_type: CompanyEarningType
                      earning_id: 4
                      name: Cash Tips
                      input_type: amount
                      category: default
                    applicable_benefits:
                    - description: Kaiser
                      id: 22
                      active: true
                    - description: HSA
                      id: 25
                      active: true
                    applicable_taxes:
                    - id: 1
                      name: Federal Income Tax
                      employer_tax: false
                      resident_tax: false
                    - id: 2
                      name: Social Security
                      employer_tax: false
                      resident_tax: false
                    metadata:
                      deletable: true
              schema:
                $ref: '#/components/schemas/External-Payroll'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an external payroll
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-external_payroll_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/external_payrolls/{external_payroll_id}/calculate_taxes:
    get:
      description: |-
        Get tax suggestions for an external payroll. Earnings and/or benefits
        data must be saved prior to the calculation in order to retrieve accurate
        tax calculation.

        scope: `external_payrolls:read`
      operationId: ExternalPayrolls_getTaxSuggestions
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the external payroll
        explode: false
        in: path
        name: external_payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
                    tax_suggestions:
                    - tax_id: 1
                      amount: 500
                    - tax_id: 2
                      amount: 100
                    - tax_id: 4
                      amount: 30
              schema:
                $ref: '#/components/schemas/ExternalPayrollsGetTaxSuggestionsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get tax suggestions for an external payroll
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-external_payroll_id-calculate_taxes
      x-accepts: application/json
  /v1/companies/{company_uuid}/external_payrolls/tax_liabilities:
    get:
      description: |-
        Get tax liabilities from aggregate external payrolls for a company.

        scope: `external_payrolls:read`
      operationId: ExternalPayrolls_getTaxLiabilities
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - tax_id: 1
                    tax_name: Federal Income Tax
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                    - liability_amount: 0
                      payroll_check_date: null
                      external_payroll_uuid: null
                    - liability_amount: 3000
                      payroll_check_date: 2022-06-01
                      external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
                  - tax_id: 2
                    tax_name: Social Security
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                    - liability_amount: 0
                      payroll_check_date: null
                      external_payroll_uuid: null
                    - liability_amount: 50
                      payroll_check_date: 2022-06-01
                      external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
              schema:
                $ref: '#/components/schemas/ExternalPayrollsGetTaxLiabilitiesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get tax liabilities
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-tax_liabilities
      x-accepts: application/json
    put:
      description: |-
        Update tax liabilities for a company.

        scope: `external_payrolls:write`
      operationId: ExternalPayrolls_updateTaxLiabilities
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  liability_selections:
                  - tax_id: 1
                    last_unpaid_external_payroll_uuid: 7985032c-ee3a-4e98-af27-d56551eb5f1c
                    unpaid_liability_amount: 50
                  - tax_id: 2
                    last_unpaid_external_payroll_uuid: 5ed14dbb-958f-47c8-b16e-c4fed82dc486
                    unpaid_liability_amount: 400
                  - tax_id: 8
                    last_unpaid_external_payroll_uuid: null
                    unpaid_liability_amount: 0
            schema:
              $ref: '#/components/schemas/ExternalPayrollsUpdateTaxLiabilitiesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - tax_id: 1
                    tax_name: Federal Income Tax
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                    - liability_amount: 0
                      payroll_check_date: null
                      external_payroll_uuid: null
                    - liability_amount: 3000
                      payroll_check_date: 2022-06-01
                      external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
                  - tax_id: 2
                    tax_name: Social Security
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                    - liability_amount: 0
                      payroll_check_date: null
                      external_payroll_uuid: null
                    - liability_amount: 50
                      payroll_check_date: 2022-06-01
                      external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
              schema:
                $ref: '#/components/schemas/ExternalPayrollsGetTaxLiabilitiesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update tax liabilities
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-tax_liabilities
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/external_payrolls/tax_liabilities/finish:
    put:
      description: |-
        Finalizes tax liabilities for a company. All external payrolls edit action will be disabled.

        scope: `external_payrolls:write`
      operationId: ExternalPayrolls_finalizeTaxLiabilities
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Finalize tax liabilities options and convert into processed payrolls
      tags:
      - External Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-tax_liabilities-finish
      x-accepts: application/json
  /v1/companies/{company_uuid}/payment_configs:
    get:
      description: |-
        Get payment speed for the company and fast payment limit (1-day is only applicable to partners that opt in).

        scope: `company_payment_configs:read`
      operationId: PaymentConfigs_getCompanyPaymentConfigs
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                    partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
                    fast_payment_limit: "5000"
                    payment_speed: 2-day
              schema:
                $ref: '#/components/schemas/Payment-Configs'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company's payment configs
      tags:
      - Payment Configs
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-payment_configs
      x-accepts: application/json
    put:
      description: |-
        Update payment speed and fast payment limit for a company. At least one of `payment_speed` or `fast_payment_limit` parameters is required. 1-day option is only applicable to partners that opt in.

        scope: `company_payment_configs:write`
      operationId: PaymentConfigs_updateCompanyPaymentConfigs
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  fast_payment_limit: "5000"
                  payment_speed: 2-day
            schema:
              $ref: '#/components/schemas/PaymentConfigsUpdateCompanyPaymentConfigsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                    partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
                    fast_payment_limit: "5000"
                    payment_speed: 2-day
              schema:
                $ref: '#/components/schemas/Payment-Configs'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a company's payment configs
      tags:
      - Payment Configs
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-payment_configs
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules:
    get:
      description: |-
        The pay schedule object in Gusto captures the details of when employees work and when they should be paid. A company can have multiple pay schedules.

        scope: `pay_schedules:read`
      operationId: PaySchedules_listForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 2097fe08-407a-46d7-b35c-a32402a2355e
                    frequency: Twice per month
                    anchor_pay_date: 2020-05-15
                    anchor_end_of_pay_period: 2020-05-08
                    day_1: 15
                    day_2: 31
                    name: Engineering
                    custom_name: Engineering department pay schedule
                    auto_pilot: false
                    active: true
                  - uuid: 8fc9f556-74fa-4271-97f6-4bfbfc5a5352
                    frequency: Monthly
                    anchor_pay_date: 2020-05-31
                    day_1: 31
                    day_2: null
                    name: Sales
                    custom_name: Sales department monthly schedule
                    auto_pilot: false
                    active: false
                  - uuid: 0e07d35a-af11-4123-bfcb-4dd5f2f12ee1
                    frequency: Monthly
                    anchor_pay_date: 2020-05-31
                    day_1: 31
                    day_2: null
                    name: Staff
                    custom_name: Staff department pay schedule
                    auto_pilot: true
                    active: false
              schema:
                $ref: '#/components/schemas/PaySchedulesListForCompanyResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the pay schedules for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules
      x-accepts: application/json
    post:
      description: |-
        If a company does not have any pay schedules, this endpoint will create a single pay schedule and assign it to all employees. This is a common use case during company onboarding.

        If a company has an existing active pay schedule and want to support multiple pay schedules, this endpoint will create a pay schedule that is not assigned to any employee.

        Be sure to **[check state laws](https://www.dol.gov/agencies/whd/state/payday)** to know what schedule is right for your customers.
      operationId: PaySchedules_createNew
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 68934a3e9455fa72420237eb05902327
                  frequency: Twice per month
                  anchor_pay_date: 2021-10-15
                  anchor_end_of_pay_period: 2021-10-15
                  day_1: 15
                  day_2: 31
                  custom_name: demo pay schedule
                  auto_pilot: false
            schema:
              $ref: '#/components/schemas/PaySchedulesCreateNewRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
                    frequency: Twice per month
                    anchor_pay_date: 2020-05-15
                    anchor_end_of_pay_period: 2020-05-08
                    day_1: 15
                    day_2: 31
                    name: Engineering
                    custom_name: A new monthly pay schedule
                    auto_pilot: false
                    active: true
              schema:
                $ref: '#/components/schemas/Pay-Schedule'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a new pay schedule
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules/preview:
    get:
      description: |-
        Provides a preview of a pay schedule with the specified parameters

        scope: `pay_schedules:write`
      operationId: PaySchedules_previewPayScheduleDates
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The frequency that employees on this pay schedule are paid with
          Gusto.
        explode: true
        in: query
        name: frequency
        required: false
        schema:
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        style: form
      - description: The first date that employees on this pay schedule are paid with
          Gusto.
        explode: true
        in: query
        name: anchor_pay_date
        required: false
        schema:
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-2-schema
        style: form
      - description: The last date of the first pay period. This can be the same date
          as the anchor pay date.
        explode: true
        in: query
        name: anchor_end_of_pay_period
        required: false
        schema:
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-3-schema
        style: form
      - description: An integer between 1 and 31 indicating the first day of the month
          that employees are paid. This field is only relevant for pay schedules with
          the “Twice per month” and “Monthly” frequencies. It will be null for pay
          schedules with other frequencies.
        explode: true
        in: query
        name: day_1
        required: false
        schema:
          type: integer
        style: form
      - description: "An integer between 1 and 31 indicating the second day of the\
          \ month that employees are paid. This field is the second pay date for pay\
          \ schedules with the \"Twice per month\" frequency. For semi-monthly pay\
          \ schedules, set this field to 31. For months shorter than 31 days, we will\
          \ set the second pay date to the last day of the month. It will be null\
          \ for pay schedules with other frequencies."
        explode: true
        in: query
        name: day_2
        required: false
        schema:
          type: integer
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    pay_periods:
                    - check_date: 2023-12-15
                      end_date: 2023-12-31
                      start_date: 2023-10-01
                      run_payroll_by: 2023-12-13
                    - check_date: 2024-03-15
                      end_date: 2024-03-31
                      start_date: 2024-01-01
                      run_payroll_by: 2024-03-13
                    - check_date: 2024-06-14
                      end_date: 2024-06-30
                      start_date: 2024-04-01
                      run_payroll_by: 2024-06-12
                    - check_date: 2024-09-13
                      end_date: 2024-09-30
                      start_date: 2024-07-01
                      run_payroll_by: 2024-09-11
                    holidays:
                    - 2023-10-09
                    - 2023-11-11
                    - 2023-11-23
                    - 2023-12-25
                    - 2024-01-01
                    - 2024-01-15
                    - 2024-02-19
                    - 2024-05-27
                    - 2024-06-19
                    - 2024-07-04
                    - 2024-09-02
              schema:
                $ref: '#/components/schemas/PaySchedulesPreviewPayScheduleDatesResponse'
          description: OK
      summary: Preview pay schedule dates
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-preview
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules/{pay_schedule_id}:
    get:
      description: |-
        The pay schedule object in Gusto captures the details of when employees work and when they should be paid. A company can have multiple pay schedules.

        scope: `pay_schedules:read`
      operationId: PaySchedules_getDetails
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the pay schedule
        explode: false
        in: path
        name: pay_schedule_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
                    frequency: Twice per month
                    anchor_pay_date: 2020-05-15
                    anchor_end_of_pay_period: 2020-05-08
                    day_1: 15
                    day_2: 31
                    name: Engineering
                    custom_name: A new monthly pay schedule
                    auto_pilot: false
                    active: true
              schema:
                $ref: '#/components/schemas/Pay-Schedule'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a pay schedule
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-pay_schedule_id
      x-accepts: application/json
    put:
      description: |-
        Updates a pay schedule.

        scope: `pay_schedules:write`
      operationId: PaySchedules_updatePaySchedule
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the pay schedule
        explode: false
        in: path
        name: pay_schedule_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 68934a3e9455fa72420237eb05902327
                  frequency: Twice per month
                  anchor_pay_date: 2021-10-15
                  anchor_end_of_pay_period: 2021-10-15
                  day_1: 15
                  day_2: 31
                  custom_name: demo pay schedule
                  auto_pilot: true
            schema:
              $ref: '#/components/schemas/PaySchedulesUpdatePayScheduleRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
                    frequency: Twice per month
                    anchor_pay_date: 2020-05-15
                    anchor_end_of_pay_period: 2020-05-08
                    day_1: 15
                    day_2: 31
                    name: Engineering
                    custom_name: A new monthly pay schedule
                    auto_pilot: false
                    active: true
              schema:
                $ref: '#/components/schemas/Pay-Schedule'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a pay schedule
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-pay_schedules-pay_schedule_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/pay_periods:
    get:
      description: |-
        Pay periods are the foundation of payroll. Compensation, time & attendance, taxes, and expense reports all rely on when they happened. To begin submitting information for a given payroll, we need to agree on the time period.

        By default, this endpoint returns pay periods starting from 6 months ago to the date today.  Use the `start_date` and `end_date` parameters to change the scope of the response.  End dates can be up to 3 months in the future and there is no limit on start dates.

        Starting in version '2023-04-01', the eligible_employees attribute was removed from the response.  The eligible employees for a payroll are determined by the employee_compensations returned from the payrolls#prepare endpoint.

        scope: `payrolls:read`
      operationId: PaySchedules_getPayPeriods
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start_date
        required: false
        schema:
          example: 2020-01-01
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-start_date-schema
        style: form
      - explode: true
        in: query
        name: end_date
        required: false
        schema:
          example: 2020-01-31
          type: string
          x-konfig-original-example: 2020-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-end_date-schema
        style: form
      - description: regular and/or transition. Multiple options are comma separated.
          The default is regular pay periods if nothing is passed in.
        explode: true
        in: query
        name: payroll_types
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - start_date: 2020-01-11
                    end_date: 2020-01-24
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll:
                      payroll_uuid: bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f
                      check_date: 2020-01-30
                      processed: true
                      payroll_deadline: 2020-01-28
                      payroll_type: regular
                  - start_date: 2020-12-12
                    end_date: 2020-12-25
                    pay_schedule_uuid: cb53db72-612f-4eb1-9b85-389e79cfa510
                    payroll:
                      payroll_uuid: 7ed29b45-4bb1-4d38-bd94-4d607d49fd21
                      check_date: 2020-12-30
                      processed: true
                      payroll_deadline: 2020-12-28
                      payroll_type: regular
              schema:
                $ref: '#/components/schemas/PaySchedulesGetPayPeriodsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get pay periods for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_periods
      x-accepts: application/json
  /v1/companies/{company_id}/pay_periods/unprocessed_termination_pay_periods:
    get:
      description: |-
        When a payroll admin terminates an employee and selects "Dismissal Payroll" as the employee's final payroll, their last pay period will appear on the list.

        This endpoint returns the unprocessed pay periods for past and future terminated employees in a given company.

        scope: `payrolls:read`
      operationId: PaySchedules_getUnprocessedTerminationPayPeriods
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - start_date: 2023-01-11
                    end_date: 2023-01-24
                    check_date: 2023-01-28
                    debit_date: 2023-01-26
                    employee_name: Mary Warner
                    employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                  - start_date: 2023-01-25
                    end_date: 2023-02-07
                    check_date: 2023-02-10
                    debit_date: 2023-02-08
                    employee_name: Mary Warner
                    employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
              schema:
                $ref: '#/components/schemas/PaySchedulesGetUnprocessedTerminationPayPeriodsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get termination pay periods for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_periods-unprocessed_termination_pay_periods
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules/assignments:
    get:
      description: |-
        This endpoint returns the current pay schedule assignment for a company, with pay schedule and employee/department mappings depending on the pay schedule type.

        scope: `pay_schedules:read`
      operationId: PaySchedules_getAssignments
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    type: by_employee
                    employees:
                      employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                      pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
              schema:
                $ref: '#/components/schemas/Pay-Schedule-Assignment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get pay schedule assignments for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-assignments
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules/assignment_preview:
    post:
      description: |-
        This endpoints returns the employee changes, including pay period and transition pay periods, for changing the pay schedule.

        scope: `pay_schedules:write`
      operationId: PaySchedules_previewAssignmentsForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  type: by_employee
                  employees:
                    employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                    pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
            schema:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Body'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    type: hourly_salaried
                    employee_changes:
                      employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
                      first_name: Penny
                      last_name: Parker
                      pay_frequency: Twice per month — Salaried pay schedule
                      first_pay_period:
                        pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
                        start_date: 2023-07-01
                        end_date: 2023-08-01
                        check_date: 2023-08-02
                      transition_pay_period:
                        start_date: 2023-06-20
                        end_date: 2023-06-30
              schema:
                $ref: '#/components/schemas/Pay-Schedule-Assignment-Preview'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Preview pay schedule assignments for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules-assignment_preview
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/pay_schedules/assign:
    post:
      description: |-
        This endpoints assigns employees to specified pay schedules based on the pay schedule type.

        scope: `pay_schedules:write`
      operationId: PaySchedules_assignEmployeesToSchedules
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  type: by_employee
                  employees:
                    employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                    pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
            schema:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Body'
      responses:
        "200":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Assign pay schedules for a company
      tags:
      - Pay Schedules
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules-assign
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/employees:
    get:
      description: |-
        Get all of the employees, onboarding, active and terminated, for a given company.

        scope: `employees:read`
      operationId: Employees_listCompanyEmployees
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filters employees by the provided boolean
        explode: true
        in: query
        name: terminated
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Include the requested attribute(s) in each employee response, multiple options are comma separated. Available options:
          - all_compensations: Include all effective dated compensations for each job instead of only the current compensation
          - custom_fields: Include employees' custom fields
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - all_compensations
          - custom_fields
          type: string
        style: form
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeesListCompanyEmployeesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 414dedaca594b77135e0b8d2f398516d
                    uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                    first_name: Nicole
                    middle_initial: M
                    last_name: Boehm
                    email: kory7757869450111548@barton-hermiston.io
                    company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Stage Hand
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Client Support Manager
                      version: 91179081a7309c9fbd31bb3cf7b9893e
                      uuid: 5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5
                      employee_uuid: a987bce1-6d06-43f8-9978-9db886f479fb
                      current_compensation_uuid: 798a962f-0fcf-491e-9b71-cfa6a1db114f
                      payment_unit: Hour
                      primary: true
                      compensations:
                      - version: 233f0096a8015e62d9795fadf1fd300d
                        uuid: 94f17a77-cfe5-436a-af94-422bbf8248ff
                        payment_unit: Hour
                        flsa_status: Nonexempt
                        job_uuid: 64711ac0-83ff-4aaf-bec1-db72f5a44e56
                        effective_date: 2021-01-20
                        rate: "22.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "22.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "71.0"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "34.0"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    garnishments: []
                    date_of_birth: 1996-05-08
                    has_ssn: true
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Vanessa
                    work_email: vanessa.boehm@example.com
                  - version: e867459e1360fa71e78b88142923d341
                    uuid: d7cb289a-af62-4120-9cd5-acda324b5c04
                    first_name: Maci
                    middle_initial: M
                    last_name: Cassin
                    email: claud_reinger7757869450111549@gutkowski.net
                    company_uuid: 4522d043-5731-406d-a129-de1808042a32
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Band
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Account Director
                      version: d0e719137f89ca3dd334dd4cc248ffbb
                      uuid: 62a00cf7-342b-465e-a151-ecd295152be0
                      employee_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                      current_compensation_uuid: 93e5da92-173b-4faa-a0bd-d1a8dee68be0
                      payment_unit: Year
                      primary: true
                      compensations:
                      - version: 994b75511d1debac5d7e2ddeae13679f
                        uuid: 1bad5177-c4ed-432e-ab43-66055d40c3a5
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: 1214875b-f43d-4267-bf2f-a6d2c298ff3d
                        effective_date: 2021-01-20
                        rate: "78000.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "78000.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "74.0"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: 0d4c755e-50ac-4c54-b46e-81bdfa03da5b
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "16.0"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    garnishments: []
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9X
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
                    date_of_birth: 1995-09-21
                    has_ssn: true
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Denis
                    work_email: denis.cassin@example.com
              schema:
                $ref: '#/components/schemas/EmployeesListCompanyEmployeesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get employees of a company
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-employees
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: |-
        Create an employee.

        scope: `employees:manage`
      operationId: Employees_createEmployee
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  first_name: Soren
                  middle_initial: A
                  last_name: Kierkegaard
                  date_of_birth: 1995-05-05
                  email: knight0faith@example.com
                  ssn: "123456294"
            schema:
              $ref: '#/components/schemas/EmployeesCreateEmployeeRequest'
        description: Create an employee.
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1c7ba9d62c8bafbfff998ffccad5d296
                    uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                    first_name: Isom
                    middle_initial: null
                    last_name: Jaskolski
                    email: dane7757869450111550@botsford.net
                    company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Stage Hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Client Support Director
                      version: 6c0ed1521e8b86eb36bd4455a63a2dac
                      uuid: 428a653a-0745-4db4-9c80-558288d416fa
                      employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                      current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                      payment_unit: Year
                      primary: true
                      compensations:
                      - version: 2cd4b18662395eb53bcf80d5b5447f36
                        uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                        effective_date: 2021-01-20
                        rate: "70000.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "70000.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "31.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "77.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9X
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
                    garnishments: []
                    date_of_birth: 1986-06-25
                    has_ssn: false
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Angel
                    work_email: angel.jaskolski@example.com
              schema:
                $ref: '#/components/schemas/Employee'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-employees
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/departments:
    get:
      description: |-
        Get all of the departments for a given company with the employees and contractors assigned to that department.

        scope: `departments:read`
      operationId: Departments_getAllWithEmployees
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors: []
                  - title: Actors
                    version: 34f39a30b45d077cb83aed2df4810d74
                    uuid: ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 7ee4aca1-814b-4034-b0f8-07f93cc679d1
                    contractors: []
                  - title: Band
                    version: 1fe3076d35ef7c97d0ae68c5f4df0acd
                    uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: a73955be-c009-44dc-915e-6246e2bdedbb
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/DepartmentsGetAllWithEmployeesResponse'
          description: List of departments
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all departments of a company
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-departments
      x-accepts: application/json
    post:
      description: |-
        Create a department

        scope: `departments:write`
      operationId: Departments_createDepartment
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  title: Stage Hand
            schema:
              $ref: '#/components/schemas/DepartmentsCreateDepartmentRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/Department'
          description: Department Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-departments
      x-content-type: application/json
      x-accepts: application/json
  /v1/departments/{department_uuid}:
    delete:
      description: |
        Delete a department. You cannot delete a department until all employees and contractors have been removed.

        scope: `departments:write`
      operationId: Departments_deleteDepartment
      parameters:
      - description: The UUID of the department
        explode: false
        in: path
        name: department_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Delete a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-departments-department_uuid
      x-accepts: application/json
    get:
      description: |
        Get a department given the UUID

        scope: `departments:read`
      operationId: Departments_getDepartmentByUuid
      parameters:
      - description: The UUID of the department
        explode: false
        in: path
        name: department_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/Department'
          description: Department Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-departments-department_uuid
      x-accepts: application/json
    put:
      description: |-
        Update a department

        scope: `departments:write`
      operationId: Departments_updateDepartment
      parameters:
      - description: The UUID of the department
        explode: false
        in: path
        name: department_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  title: Backup Dancer
                  version: db0edd04aaac4506f7edab03ac855d56
            schema:
              $ref: '#/components/schemas/DepartmentsUpdateDepartmentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/Department'
          description: Department Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/departments/{department_uuid}/add:
    put:
      description: |
        Add employees and contractors to a department

        scope: `departments:write`
      operationId: Departments_addPeopleToDepartment
      parameters:
      - description: The UUID of the department
        explode: false
        in: path
        name: department_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentsAddPeopleToDepartmentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/Department'
          description: Department Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Add people to a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid-add
      x-content-type: application/json
      x-accepts: application/json
  /v1/departments/{department_uuid}/remove:
    put:
      description: |
        Remove employees and contractors from a department

        scope: `departments:write`
      operationId: Departments_removePeopleFromDepartment
      parameters:
      - description: The UUID of the department
        explode: false
        in: path
        name: department_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentsRemovePeopleFromDepartmentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
              schema:
                $ref: '#/components/schemas/Department'
          description: Department Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Remove people from a department
      tags:
      - Departments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid-remove
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}:
    delete:
      description: |-
        Use this endpoint to delete an employee who is in onboarding. Deleting
        an onboarded employee is not allowed. Please check out the Terminations api
        if you need to terminate an onboarded employee.

        scope: `employees:manage`
      operationId: Employees_deleteOnboardingEmployee
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete an onboarding employee
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id
      x-accepts: application/json
    get:
      description: |
        Get an employee.

        scope: `employees:read`
      operationId: Employees_getEmployeeById
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Include the requested attribute(s) in each employee response, multiple options are comma separated. Available options:
          - all_compensations: Include all effective dated compensations for each job instead of only the current compensation
          - custom_fields: Include employees' custom fields
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - all_compensations
          - custom_fields
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1c7ba9d62c8bafbfff998ffccad5d296
                    uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                    first_name: Isom
                    middle_initial: null
                    last_name: Jaskolski
                    email: dane7757869450111550@botsford.net
                    company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Stage Hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Client Support Director
                      version: 6c0ed1521e8b86eb36bd4455a63a2dac
                      uuid: 428a653a-0745-4db4-9c80-558288d416fa
                      employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                      current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                      payment_unit: Year
                      primary: true
                      compensations:
                      - version: 2cd4b18662395eb53bcf80d5b5447f36
                        uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                        effective_date: 2021-01-20
                        rate: "70000.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "70000.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "31.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "77.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9X
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
                    garnishments: []
                    date_of_birth: 1986-06-25
                    has_ssn: false
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Angel
                    work_email: angel.jaskolski@example.com
              schema:
                $ref: '#/components/schemas/Employee'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id
      x-accepts: application/json
    put:
      description: |-
        Update an employee.

        scope: `employees:write`
      operationId: Employees_updateEmployee
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: db0edd04aaac4506f7edab03ac855d56
                  first_name: Soren
                  middle_initial: A
                  last_name: Kierkegaard
                  date_of_birth: 1995-05-05
                  email: knight0faith@example.com
                  ssn: "123456294"
                  two_percent_shareholder: false
            schema:
              $ref: '#/components/schemas/EmployeesUpdateEmployeeRequest'
        description: Update an employee.
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1c7ba9d62c8bafbfff998ffccad5d296
                    uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                    first_name: Isom
                    middle_initial: null
                    last_name: Jaskolski
                    email: dane7757869450111550@botsford.net
                    company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Stage Hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Client Support Director
                      version: 6c0ed1521e8b86eb36bd4455a63a2dac
                      uuid: 428a653a-0745-4db4-9c80-558288d416fa
                      employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                      current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                      payment_unit: Year
                      primary: true
                      compensations:
                      - version: 2cd4b18662395eb53bcf80d5b5447f36
                        uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                        effective_date: 2021-01-20
                        rate: "70000.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "70000.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "31.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "77.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9X
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
                    garnishments: []
                    date_of_birth: 1986-06-25
                    has_ssn: false
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Angel
                    work_email: angel.jaskolski@example.com
              schema:
                $ref: '#/components/schemas/Employee'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/terminations:
    delete:
      description: |-
        Delete an employee termination.

        scope: `employments:write`
      operationId: EmployeeEmployments_deleteTermination
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: |-
            Not Found

            * The requested resource does not exist. Make sure the provided ID/UUID is valid.
            * The employee's employment is not in the right state.
          x-do-not-generate: true
      summary: Delete an employee termination
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-terminations
      x-accepts: application/json
    get:
      description: |-
        Terminations are created whenever an employee is scheduled to leave the company. The only things required are an effective date (their last day of work) and whether they should receive their wages in a one-off termination payroll or with the rest of the company.

        Note that some states require employees to receive their final wages within 24 hours (unless they consent otherwise,) in which case running a one-off payroll may be the only option.

        scope: `employments:read`
      operationId: EmployeeEmployments_listEmployeeTerminations
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: d487dd0b55dfcacdd920ccbdaeafa351
                    uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: true
                    cancelable: true
                    effective_date: 2020-03-10
                    run_termination_payroll: false
              schema:
                $ref: '#/components/schemas/EmployeeEmploymentsListEmployeeTerminationsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get terminations for an employee
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-terminations
      x-accepts: application/json
    post:
      description: |-
        Terminations are created whenever an employee is scheduled to leave the company. The only things required are an effective date (their last day of work) and whether they should receive their wages in a one-off termination payroll or with the rest of the company.

        Note that some states require employees to receive their final wages within 24 hours (unless they consent otherwise,) in which case running a one-off payroll may be the only option.

        scope: `employments:write`
      operationId: EmployeeEmployments_createTermination
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  effective_date: 2020-06-30
                  run_termination_payroll: true
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentsCreateTerminationRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: d487dd0b55dfcacdd920ccbdaeafa351
                    uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: true
                    cancelable: true
                    effective_date: 2020-03-10
                    run_termination_payroll: false
              schema:
                $ref: '#/components/schemas/Termination'
          description: Example Response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee termination
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-terminations
      x-content-type: application/json
      x-accepts: application/json
  /v1/terminations/{employee_id}:
    put:
      description: |-
        Terminations are created whenever an employee is scheduled to leave the company. The only things required are an effective date (their last day of work) and whether they should receive their wages in a one-off termination payroll or with the rest of the company.

        Note that some states require employees to receive their final wages within 24 hours (unless they consent otherwise,) in which case running a one-off payroll may be the only option.

        scope: `employments:write`
      operationId: EmployeeEmployments_updateTermination
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1928d0c378e519e9c03fb959bc959a6b
                  effective_date: 2020-06-30
                  run_termination_payroll: true
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentsUpdateTerminationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: d487dd0b55dfcacdd920ccbdaeafa351
                    uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: true
                    cancelable: true
                    effective_date: 2020-03-10
                    run_termination_payroll: false
              schema:
                $ref: '#/components/schemas/Termination'
          description: Example Response
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: |-
            Not Found

            * The requested resource does not exist. Make sure the provided ID/UUID is valid.
            * The employee's employment is not in the right state.
          x-do-not-generate: true
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee termination
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-terminations-employee_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/rehire:
    delete:
      description: |-
        Delete an employee rehire. An employee rehire cannot be deleted if it's active (past effective date).

        scope: `employments:write`
      operationId: EmployeeEmployments_removeRehire
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: |-
            Not Found

            * The requested resource does not exist. Make sure the provided ID/UUID is valid.
            * The employee's employment is not in the right state.
          x-do-not-generate: true
      summary: Delete an employee rehire
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-rehire
      x-accepts: application/json
    get:
      description: |-
        Retrieve an employee's rehire, which contains information on when the employee returns to work.

        scope: `employments:read`
      operationId: EmployeeEmployments_getRehire
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 2e930d43acbdb241f8f14a2d531fa417
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: false
                    effective_date: 2024-01-01
                    file_new_hire_report: false
                    work_location_uuid: "d2c80d44-857b-4d4d-bce4-23ae52cc863b,"
                    two_percent_shareholder: false
                    employment_status: full_time
              schema:
                $ref: '#/components/schemas/Rehire'
          description: Example response
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: |-
            Not Found

            * The requested resource does not exist. Make sure the provided ID/UUID is valid.
            * The employee's employment is not in the right state.
          x-do-not-generate: true
      summary: Get an employee rehire
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-rehire
      x-accepts: application/json
    post:
      description: |-
        Rehire is created whenever an employee is scheduled to return to the company.

        scope: `employments:write`
      operationId: EmployeeEmployments_createRehire
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  effective_date: 2023-06-30
                  work_location_uuid: b6ae9d93-d4b8-4119-8c96-dba595dd8c30
                  file_new_hire_report: true
            schema:
              $ref: '#/components/schemas/Rehire-Body'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 2e930d43acbdb241f8f14a2d531fa417
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: false
                    effective_date: 2024-01-01
                    file_new_hire_report: false
                    work_location_uuid: "d2c80d44-857b-4d4d-bce4-23ae52cc863b,"
                    two_percent_shareholder: false
                    employment_status: full_time
              schema:
                $ref: '#/components/schemas/Rehire'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee rehire
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-rehire
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |-
        Update an employee's rehire.

        scope: `employments:write`
      operationId: EmployeeEmployments_updateRehire
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1928d0c378e519e9c03fb959bc959a6b
                  effective_date: 2023-06-30
                  work_location_uuid: b6ae9d93-d4b8-4119-8c96-dba595dd8c30
                  file_new_hire_report: true
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentsUpdateRehireRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 2e930d43acbdb241f8f14a2d531fa417
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    active: false
                    effective_date: 2024-01-01
                    file_new_hire_report: false
                    work_location_uuid: "d2c80d44-857b-4d4d-bce4-23ae52cc863b,"
                    two_percent_shareholder: false
                    employment_status: full_time
              schema:
                $ref: '#/components/schemas/Rehire'
          description: Example response
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: |-
            Not Found

            * The requested resource does not exist. Make sure the provided ID/UUID is valid.
            * The employee's employment is not in the right state.
          x-do-not-generate: true
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee rehire
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-rehire
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/employment_history:
    get:
      description: |-
        Retrieve the employment history for a given employee, which includes termination and rehire.

        scope: `employments:read`
      operationId: EmployeeEmployments_getHistory
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - hire_date: 2023-05-30
                    termination_date: null
                    file_new_hire_report: true
                    two_percent_shareholder: false
                    employment_status: seasonal
                  - hire_date: 2021-02-02
                    termination_date: 2023-03-01
                    file_new_hire_report: false
                    two_percent_shareholder: false
                    employment_status: full_time
              schema:
                $ref: '#/components/schemas/EmployeeEmploymentsGetHistoryResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get employment history for an employee
      tags:
      - Employee Employments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-employment_history
      x-accepts: application/json
  /v1/employees/{employee_id}/home_addresses:
    get:
      description: |-
        The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        Supports home address effective dating and courtesy withholding.

        scope: `employees:read`
      operationId: EmployeeAddresses_getHomeAddresses
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: false
                    effective_date: 2021-01-01
                    courtesy_withholding: true
                  - uuid: d9f74049-8769-4fba-8e0f-eceef2da4e6b
                    employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    street_1: 100 5th Ave
                    street_2: Suite 555
                    city: New York
                    state: NY
                    zip: "10001"
                    country: USA
                    active: true
                    effective_date: 2022-03-03
                    courtesy_withholding: true
              schema:
                $ref: '#/components/schemas/EmployeeAddressesGetHomeAddressesResponse'
          description: List of employee addresses
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's home addresses
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-home_addresses
      x-accepts: application/json
    post:
      description: |-
        The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        Supports home address effective dating and courtesy withholding.

        scope: `employees:write`
      operationId: EmployeeAddresses_createHomeAddress
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  street_1: 300 3rd Street
                  street_2: null
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  effective_date: 2021-01-01
                  courtesy_withholding: true
            schema:
              $ref: '#/components/schemas/EmployeeAddressesCreateHomeAddressRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_id: 12345
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: false
                    effective_date: 2021-01-01
                    courtesy_withholding: true
              schema:
                $ref: '#/components/schemas/Employee-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee's home address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-home_addresses
      x-content-type: application/json
      x-accepts: application/json
  /v1/home_addresses/{home_address_uuid}:
    delete:
      description: |-
        Used for deleting an employee's home address.  Cannot delete the employee's active home address.

        scope: `employees:write`
      operationId: EmployeeAddresses_deleteHome
      parameters:
      - description: The UUID of the home address
        explode: false
        in: path
        name: home_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Delete an employee's home address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-home_addresses-home_address_uuid
      x-accepts: application/json
    get:
      description: |-
        The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        Supports home address effective dating and courtesy withholding.

        scope: `employees:read`
      operationId: EmployeeAddresses_getHomeAddress
      parameters:
      - description: The UUID of the home address
        explode: false
        in: path
        name: home_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_id: 12345
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: false
                    effective_date: 2021-01-01
                    courtesy_withholding: true
              schema:
                $ref: '#/components/schemas/Employee-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's home address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-home_addresses-home_address_uuid
      x-accepts: application/json
    put:
      description: |-
        The home address of an employee is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        Supports home address effective dating and courtesy withholding.

        scope: `employees:write`
      operationId: EmployeeAddresses_updateHomeAddress
      parameters:
      - description: The UUID of the home address
        explode: false
        in: path
        name: home_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: fe75bd065ff48b91c35fe8ff842f986c
                  street_1: 300 3rd Street
                  street_2: null
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  effective_date: 2021-01-01
                  courtesy_withholding: true
            schema:
              $ref: '#/components/schemas/EmployeeAddressesUpdateHomeAddressRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_id: 12345
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: false
                    effective_date: 2021-01-01
                    courtesy_withholding: true
              schema:
                $ref: '#/components/schemas/Employee-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee's home address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-home_addresses-home_address_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/work_addresses:
    get:
      description: |-
        Returns a list of an employee's work addresses. Each address includes its effective date and a boolean
        signifying if it is the currently active work address.

        scope: `employees:read`
      operationId: EmployeeAddresses_listWorkAddresses
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 139f9769a2e543e6a1259173e1ee3b8d
                    uuid: fc5b87dc-8d88-400d-b2da-c3587a7e5b15
                    employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                    location_uuid: d9456c94-f561-40d2-afec-919da5f59196
                    effective_date: 2022-01-01
                    active: false
                    street_1: 800 Adolfo Gardens
                    street_2: Suite 419
                    city: Bremen
                    state: AL
                    zip: "35033"
                    country: USA
                  - version: bbe8d4c741339c6b9e0e2e1c1b120816
                    uuid: be1c2e24-af86-4c36-b34e-3a55dbcdbdab
                    employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                    location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                    effective_date: 2023-01-01
                    active: true
                    street_1: 2216 Icie Villages
                    street_2: Apt. 798
                    city: Big Delta
                    state: AK
                    zip: "99737"
                    country: USA
              schema:
                $ref: '#/components/schemas/EmployeeAddressesListWorkAddressesResponse'
          description: List of employee work addresses
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's work addresses
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-work_addresses
      x-accepts: application/json
    post:
      description: |-
        The work address of an employee describes when an employee began working at an associated company location.

        scope: `employees:manage`
      operationId: EmployeeAddresses_createWorkAddress
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                  effective_date: 2023-05-15
            schema:
              $ref: '#/components/schemas/EmployeeAddressesCreateWorkAddressRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: "23218"
                    country: USA
                    active: false
                    effective_date: 2021-01-01
                    courtesy_withholding: true
              schema:
                $ref: '#/components/schemas/Employee-Work-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee work address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-work_addresses
      x-content-type: application/json
      x-accepts: application/json
  /v1/work_addresses/{work_address_uuid}:
    delete:
      description: |-
        Used for deleting an employee's work address.  Cannot delete the employee's active work address.

        scope: `employees:manage`
      operationId: EmployeeAddresses_deleteWorkAddress
      parameters:
      - description: The UUID of the work address
        explode: false
        in: path
        name: work_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Delete an employee's work address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-work_addresses-work_address_uuid
      x-accepts: application/json
    get:
      description: |-
        The work address of an employee is used for payroll tax purposes.

        scope: `employees:read`
      operationId: EmployeeAddresses_getWorkAddress
      parameters:
      - description: The UUID of the work address
        explode: false
        in: path
        name: work_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 6a22da647ed391f184a212e6e83a541d
                    uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
                    employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
                    location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
                    effective_date: 2023-05-15
                    active: true
                    street_1: 977 Marks Viaduct
                    street_2: null
                    city: Pink Hill
                    state: NC
                    zip: "28572"
                    country: USA
              schema:
                $ref: '#/components/schemas/Employee-Work-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee work address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-work_addresses-work_address_uuid
      x-accepts: application/json
    put:
      description: |-
        The work address of an employee is used for payroll tax purposes.

        scope: `employees:manage`
      operationId: EmployeeAddresses_updateWorkAddress
      parameters:
      - description: The UUID of the work address
        explode: false
        in: path
        name: work_address_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: e6db1baa29d3df1eb307ff6a12c778da
                  location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                  effective_date: 2023-05-15
            schema:
              $ref: '#/components/schemas/EmployeeAddressesUpdateWorkAddressRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 6a22da647ed391f184a212e6e83a541d
                    uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
                    employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
                    location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
                    effective_date: 2023-05-15
                    active: true
                    street_1: 977 Marks Viaduct
                    street_2: null
                    city: Pink Hill
                    state: NC
                    zip: "28572"
                    country: USA
              schema:
                $ref: '#/components/schemas/Employee-Work-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee work address
      tags:
      - Employee Addresses
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-work_addresses-work_address_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/custom_fields:
    get:
      description: |-
        Returns a list of the employee's custom fields.

        scope: `employees:read`
      operationId: Employees_getCustomFields
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
              schema:
                $ref: '#/components/schemas/EmployeesGetCustomFieldsResponse'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's custom fields
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-custom_fields
      x-accepts: application/json
  /v1/employees/{employee_id}/onboarding_status:
    get:
      description: |-
        # Description
        Retrieves an employee's onboarding status. The data returned helps inform the required onboarding steps and respective completion status.

        scope: `employees:read`

        ## onboarding_status

        ### Admin-facilitated onboarding
        | onboarding_status | Description |
        |:------------------|------------:|
        | `admin_onboarding_incomplete` | Admin needs to complete the full employee-onboarding. |
        | `onboarding_completed` | Employee has been fully onboarded and verified. |

        ### Employee self-onboarding
        | onboarding_status | Description |
        |:------------------|------------:|
        | `admin_onboarding_incomplete` | Admin needs to enter basic information about the employee. |
        | `self_onboarding_pending_invite` | Admin has the intention to invite the employee to self-onboard (e.g., marking a checkbox), but the system has not yet sent the invitation. |
        | `self_onboarding_invited` | Employee has been sent an invitation to self-onboard. |
        | `self_onboarding_invited_started` | Employee has started the self-onboarding process. |
        | `self_onboarding_invited_overdue` | Employee's start date has passed, and employee has still not completed self-onboarding. |
        | `self_onboarding_completed_by_employee` | Employee has completed entering in their information. The status should be updated via API to "self_onboarding_awaiting_admin_review" from here, once the Admin has started reviewing. |
        | `self_onboarding_awaiting_admin_review` | Admin has started to verify the employee's information. |
        | `onboarding_completed` | Employee has been fully onboarded and verified. |

        ## onboarding_steps

        | onboarding_steps | Requirement(s) to be completed |
        |:-----------------|-------------------------------:|
        | `personal_details` | Add employee's first name, last name, email, date of birth, social security number |
        | `compensation_details` | Associate employee to a job & compensation. |
        | `add_work_address` | Add employee work address. |
        | `add_home_address` | Add employee home address. |
        | `federal_tax_setup` | Set up federal tax withholdings. |
        | `state_tax_setup` | Set up state tax withholdings. |
        | `direct_deposit_setup` | (optional) Set up employee's direct deposit. |
        | `employee_form_signing` | Employee forms (e.g., W4, direct deposit authorization) are generated & signed. |
        | `file_new_hire_report` | File a new hire report for this employee. |
        | `admin_review` | Admin reviews & confirms employee details (only required for Employee self-onboarding) |
      operationId: Employees_getOnboardingStatus
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Personal details
                      id: personal_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setupX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setup
                      required: true
                      completed: false
                      requirements:
                      - add_work_address
                      - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setup
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signing
                      required: true
                      completed: false
                      requirements:
                      - federal_tax_setup
                      - state_tax_setup
              schema:
                $ref: '#/components/schemas/Employee-Onboarding-Status'
            application/xml:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Personal details
                      id: personal_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setupX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setupX
                      required: true
                      completed: false
                      requirements:
                      - add_work_address
                      - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setupX
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signingX
                      required: true
                      completed: false
                      requirements:
                      - federal_tax_setup
                      - state_tax_setup
              schema:
                $ref: '#/components/schemas/EmployeesGetOnboardingStatusResponse'
          description: Example response.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the employee's onboarding status
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-onboarding_status
      x-accepts: application/json
    put:
      description: |-
        scope: `employees:manage`

        Updates an employee's onboarding status.
        Below is a list of valid onboarding status changes depending on the intended action to be performed on behalf of the employee.

        | Action | current onboarding_status | new onboarding_status |
        |:------------------|:------------:|----------:|
        | Mark an employee as self-onboarding | `admin_onboarding_incomplete` | `self_onboarding_pending_invite` |
        | Invite an employee to self-onboard | `admin_onboarding_incomplete` or `self_onboarding_pending_invite` | `self_onboarding_invited` |
        | Cancel an employee's self-onboarding | `self_onboarding_invited` or `self_onboarding_pending_invite` | `admin_onboarding_incomplete` |
        | Review an employee's self-onboarded info | `self_onboarding_completed_by_employee` | `self_onboarding_awaiting_admin_review` |
        | Finish an employee's onboarding | `admin_onboarding_incomplete` or `self_onboarding_awaiting_admin_review` | `onboarding_completed` |
      operationId: Employees_updateOnboardingStatus
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeesUpdateOnboardingStatusRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Personal details
                      id: personal_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setupX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setup
                      required: true
                      completed: false
                      requirements:
                      - add_work_address
                      - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setup
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signing
                      required: true
                      completed: false
                      requirements:
                      - federal_tax_setup
                      - state_tax_setup
              schema:
                $ref: '#/components/schemas/Employee-Onboarding-Status'
            application/xml:
              examples:
                Example:
                  value:
                    uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Personal details
                      id: personal_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setupX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setupX
                      required: true
                      completed: false
                      requirements:
                      - add_work_address
                      - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setupX
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signingX
                      required: true
                      completed: false
                      requirements:
                      - federal_tax_setup
                      - state_tax_setup
              schema:
                $ref: '#/components/schemas/EmployeesGetOnboardingStatusResponse'
          description: Example response.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update the employee's onboarding status
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-onboarding_status
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/finish_onboarding:
    put:
      description: |-
        This endpoint is currently supported but will eventually be deprecated; please use `/v1/employees/{employee_id}/onboarding_status` instead.

        Call this endpoint as the very last step of employee onboarding to complete their onboarding. When successful, the employee's `onboarded` attribute will be updated to true, indicating that they can be included in company's payrolls.
      operationId: Employees_completeOnboarding
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1c7ba9d62c8bafbfff998ffccad5d296
                    uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                    first_name: Isom
                    middle_initial: null
                    last_name: Jaskolski
                    email: dane7757869450111550@botsford.net
                    company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    department: Stage Hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                    - title: Client Support Director
                      version: 6c0ed1521e8b86eb36bd4455a63a2dac
                      uuid: 428a653a-0745-4db4-9c80-558288d416fa
                      employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                      current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                      payment_unit: Year
                      primary: true
                      compensations:
                      - version: 2cd4b18662395eb53bcf80d5b5447f36
                        uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                        effective_date: 2021-01-20
                        rate: "70000.00"
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                      rate: "70000.00"
                      hire_date: 2020-01-20
                    eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: "31.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                      accrual_unit: Hour
                      accrual_rate: "208.0"
                      accrual_period: Year
                      accrual_balance: "77.8"
                      maximum_accrual_balance: "240.0"
                      paid_at_termination: true
                    terminations: []
                    custom_fields:
                    - description: Employee Level
                      id: ee515986-f3ca-49da-b576-2691b95262f9X
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      type: text
                      value: "2"
                      selection_options: null
                    - description: What is your t-shirt size?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      type: text
                      value: md
                      selection_options: null
                    - description: Which is your favorite fruit?
                      id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      type: radio
                      value: apple
                      selection_options:
                      - apple
                      - banana
                      - orange
                    garnishments: []
                    date_of_birth: 1986-06-25
                    has_ssn: false
                    ssn: ""
                    phone: "1234567890"
                    preferred_first_name: Angel
                    work_email: angel.jaskolski@example.com
              schema:
                $ref: '#/components/schemas/Employee'
          description: Example response
      summary: Finish onboarding an employee
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-finish_onboarding
      x-accepts: application/json
  /v1/employees/{employee_uuid}/federal_taxes:
    get:
      description: |-
        Get attributes relevant for an employee's federal taxes.

         scope: `employee_federal_taxes:read`
      operationId: EmployeeTaxSetup_getFederalTaxesById
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 56a489ce86ed6c1b0f0cecc4050a0b01
                    filing_status: Single
                    extra_withholding: "0.0"
                    two_jobs: true
                    dependents_amount: "0.0"
                    other_income: "0.0"
                    deductions: "0.0"
                    employee_id: 29
                    w4_data_type: rev_2020_w4
              schema:
                $ref: '#/components/schemas/Employee-Federal-Tax'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's federal taxes
      tags:
      - Employee Tax Setup
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-federal_taxes
      x-accepts: application/json
    put:
      description: |-
        Update attributes relevant for an employee's federal taxes.

        scope: `employee_federal_taxes:write`
      operationId: EmployeeTaxSetup_updateFederalTaxes
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 56a489ce86ed6c1b0f0cecc4050a0b01
                  filing_status: Single
                  extra_withholding: "0.0"
                  two_jobs: true
                  dependents_amount: "0.0"
                  other_income: "0.0"
                  deductions: "0.0"
                  w4_data_type: rev_2020_w4
            schema:
              $ref: '#/components/schemas/EmployeeTaxSetupUpdateFederalTaxesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 56a489ce86ed6c1b0f0cecc4050a0b01
                    filing_status: Single
                    extra_withholding: "0.0"
                    two_jobs: true
                    dependents_amount: "0.0"
                    other_income: "0.0"
                    deductions: "0.0"
                    employee_id: 29
                    w4_data_type: rev_2020_w4
              schema:
                $ref: '#/components/schemas/Employee-Federal-Tax'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee's federal taxes
      tags:
      - Employee Tax Setup
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_uuid-federal_taxes
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_uuid}/state_taxes:
    get:
      description: |
        Get attributes relevant for an employee's state taxes.

        The data required to correctly calculate an employee's state taxes varies by both home and work location. This API returns information about each question that must be answered grouped by state. Mostly commonly, an employee lives and works in the same state and will only have questions for a single state. The response contains metadata about each question, the type of answer expected, and the current answer stored in Gusto for that question.

        Answers are represented by an array. Today, this array can only be empty or contain exactly one element, but is designed to allow for forward compatibility with effective-dated fields. Until effective dated answers are supported, the `valid_from` and `valid_up_to` must always be `"2010-01-01"` and `null` respectively.

        ## About filing new hire reports
        Payroll Admins are responsible for filing a new hire report for each Employee. The `file_new_hire_report` question will only be listed if:
        - the `employee.onboarding_status` is one of the following:
          - `admin_onboarding_incomplete`
          - `self_onboarding_awaiting_admin_review`
        - that employee's work state requires filing a new hire report

        scope: `employee_state_taxes:read`
      operationId: EmployeeTaxSetup_getStateTaxes
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Employee-State-Taxes-List-Example:
                  value:
                    employee_uuid: 92fa4d30-e284-43d0-a26e-605619c04beb
                    file_new_hire_report: false
                    is_work_state: true
                    state: CA
                    questions:
                    - description: |
                        The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
                      label: Filing Status
                      key: filing_status
                      input_question_format:
                        type: Select
                        options:
                        - value: S
                          label: Single
                        - value: M
                          label: Married one income
                        - value: MD
                          label: Married dual income
                        - value: H
                          label: Head of household
                        - value: E
                          label: Do Not Withhold
                      answers:
                      - value: S
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: |
                        This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.
                      label: Withholding Allowance
                      key: withholding_allowance
                      input_question_format:
                        type: Number
                      answers:
                      - value: 1
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: You can withhold an additional amount of California
                        income taxes here.
                      label: Additional Withholding
                      key: additional_withholding
                      input_question_format:
                        type: Currency
                      answers:
                      - value: "0.0"
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: State law requires you to file a new hire report
                        within 20 days of hiring or re-hiring an employee.
                      label: File a New Hire Report?
                      key: file_new_hire_report
                      input_question_format:
                        type: Select
                      answers:
                      - value: true
                        valid_from: 2010-01-01
                        valid_up_to: null
              schema:
                $ref: '#/components/schemas/EmployeeTaxSetupGetStateTaxesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's state taxes
      tags:
      - Employee Tax Setup
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-state_taxes
      x-accepts: application/json
    put:
      description: |-
        Update attributes relevant for an employee's state taxes.

        As described for the GET endpoint, the answers must be supplied in the effective-dated format, but currently only a single answer will be accepted - `valid_from` and `valid_up_to` must be `"2010-01-01"` and `null` respectively.

        scope: `employee_state_taxes:write`
      operationId: EmployeeTaxSetup_updateStateTaxes
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Employee-State-Taxes-Update-Example:
                value:
                  states:
                  - state: CA
                    questions:
                    - key: filing_status
                      answers:
                      - value: M
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - key: withholding_allowance
                      answers:
                      - value: 2
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - key: additional_withholding
                      answers:
                      - value: "25.0"
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - key: file_new_hire_report
                      answers:
                      - value: true
                        valid_from: 2010-01-01
                        valid_up_to: null
            schema:
              $ref: '#/components/schemas/EmployeeTaxSetupUpdateStateTaxesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Employee-State-Taxes-List-Example:
                  value:
                    employee_uuid: 92fa4d30-e284-43d0-a26e-605619c04beb
                    file_new_hire_report: false
                    is_work_state: true
                    state: CA
                    questions:
                    - description: |
                        The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
                      label: Filing Status
                      key: filing_status
                      input_question_format:
                        type: Select
                        options:
                        - value: S
                          label: Single
                        - value: M
                          label: Married one income
                        - value: MD
                          label: Married dual income
                        - value: H
                          label: Head of household
                        - value: E
                          label: Do Not Withhold
                      answers:
                      - value: S
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: |
                        This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.
                      label: Withholding Allowance
                      key: withholding_allowance
                      input_question_format:
                        type: Number
                      answers:
                      - value: 1
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: You can withhold an additional amount of California
                        income taxes here.
                      label: Additional Withholding
                      key: additional_withholding
                      input_question_format:
                        type: Currency
                      answers:
                      - value: "0.0"
                        valid_from: 2010-01-01
                        valid_up_to: null
                    - description: State law requires you to file a new hire report
                        within 20 days of hiring or re-hiring an employee.
                      label: File a New Hire Report?
                      key: file_new_hire_report
                      input_question_format:
                        type: Select
                      answers:
                      - value: true
                        valid_from: 2010-01-01
                        valid_up_to: null
              schema:
                $ref: '#/components/schemas/EmployeeTaxSetupGetStateTaxesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Employee-State-Taxes-Error-Response:
                  value:
                  - state: CA
                    questions:
                    - key: filing_status
                      answers:
                      - valid_from: 2010-01-01
                        valid_up_to: null
                        errors:
                        - string
              schema:
                $ref: '#/components/schemas/EmployeeTaxSetupUpdateStateTaxesResponse'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Update an employee's state taxes
      tags:
      - Employee Tax Setup
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_uuid-state_taxes
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/bank_accounts:
    get:
      description: |-
        Returns all employee bank accounts.

        scope: `employee_payment_methods:read`
      operationId: EmployeePaymentMethod_listBankAccounts
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePaymentMethodListBankAccountsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: "266905059"
                    hidden_account_number: XXXX1207
                    account_type: Checking
              schema:
                $ref: '#/components/schemas/EmployeePaymentMethodListBankAccountsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all employee bank accounts
      tags:
      - Employee Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-bank_accounts
      x-content-type: application/json
      x-accepts: application/json
    post:
      description: |-
        Creates an employee bank account. An employee can have multiple
        bank accounts. Note that creating an employee bank account will also update
        the employee's payment method.

        scope: `employee_payment_methods:write`
      operationId: EmployeePaymentMethod_createBankAccount
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: BoA Checking Account
                  routing_number: "266905059"
                  account_number: "5809431207"
                  account_type: Checking
            schema:
              $ref: '#/components/schemas/EmployeePaymentMethodCreateBankAccountRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: "266905059"
                    hidden_account_number: XXXX1207
                    account_type: Checking
              schema:
                $ref: '#/components/schemas/Employee-Bank-Account'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee bank account
      tags:
      - Employee Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-bank_accounts
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/bank_accounts/{bank_account_uuid}:
    delete:
      description: |-
        Deletes an employee bank account. To update an employee's bank
        account details, delete the bank account first and create a new one.

        scope: `employee_payment_methods:write`
      operationId: EmployeePaymentMethod_deleteBankAccount
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the bank account
        explode: false
        in: path
        name: bank_account_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete an employee bank account
      tags:
      - Employee Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-bank_accounts-bank_account_uuid
      x-accepts: application/json
  /v1/employees/{employee_id}/payment_method:
    get:
      description: |-
        Fetches an employee's payment method. An employee payment method
        describes how the payment should be split across the employee's associated
        bank accounts.

        scope: `employee_payment_methods:read`
      operationId: EmployeePaymentMethod_getBankAccounts
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    type: Direct Deposit
                    split_by: Amount
                    splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 500
                    - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                      name: Chase Checking Account
                      priority: 2
                      split_amount: 1000
                    - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                      name: US Bank Checking Account
                      priority: 3
                      split_amount: null
              schema:
                $ref: '#/components/schemas/Employee-Payment-Method'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's payment method
      tags:
      - Employee Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-payment_method
      x-accepts: application/json
    put:
      description: |-
        Updates an employee's payment method. Note that creating an employee
        bank account will also update the employee's payment method.

        scope: `employee_payment_methods:write`
      operationId: EmployeePaymentMethod_updatePaymentMethod
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Direct Deposit
                  split_by: Amount
                  splits:
                  - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                    name: BoA Checking Account
                    priority: 1
                    split_amount: 500
                  - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                    name: Chase Checking Account
                    priority: 2
                    split_amount: 1000
                  - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    name: US Bank Checking Account
                    priority: 3
                    split_amount: null
              example-2:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Direct Deposit
                  split_by: Percentage
                  splits:
                  - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                    name: BoA Checking Account
                    priority: 1
                    split_amount: 60
                  - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                    name: Chase Checking Account
                    priority: 2
                    split_amount: 40
              example-3:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Check
            schema:
              $ref: '#/components/schemas/EmployeePaymentMethodUpdatePaymentMethodRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    type: Direct Deposit
                    split_by: Amount
                    splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 500
                    - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                      name: Chase Checking Account
                      priority: 2
                      split_amount: 1000
                    - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                      name: US Bank Checking Account
                      priority: 3
                      split_amount: null
              schema:
                $ref: '#/components/schemas/Employee-Payment-Method'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee's payment method
      tags:
      - Employee Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-payment_method
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/jobs:
    get:
      description: |-
        Get all of the jobs that an employee holds.

        scope: `jobs:read`
      operationId: JobsAndCompensations_getEmployeeJobs
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Available options:
          - all_compensations: Include all effective dated compensations for each job instead of only the current compensation
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - all_compensations
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: Client Support Director
                    version: 6c0ed1521e8b86eb36bd4455a63a2dac
                    uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                    employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                    current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                    payment_unit: Year
                    primary: true
                    compensations:
                    - version: 2cd4b18662395eb53bcf80d5b5447f36
                      uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                      payment_unit: Year
                      flsa_status: Exempt
                      job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                      effective_date: 2021-01-20
                      rate: "70000.00"
                      adjust_for_minimum_wage: false
                      minimum_wages: []
                    rate: "70000.00"
                    hire_date: 2020-01-20
              schema:
                $ref: '#/components/schemas/JobsAndCompensationsGetEmployeeJobsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get jobs for an employee
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-jobs
      x-accepts: application/json
    post:
      description: |-
        Create a job.

        scope: `jobs:write`
      operationId: JobsAndCompensations_createJob
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  title: Regional Manager
                  hire_date: 2020-12-21
            schema:
              $ref: '#/components/schemas/JobsAndCompensationsCreateJobRequest'
        description: Create a job.
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Account Director
                    version: d0e719137f89ca3dd334dd4cc248ffbb
                    uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                    employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                    current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                    payment_unit: Year
                    primary: true
                    compensations:
                    - version: 994b75511d1debac5d7e2ddeae13679f
                      uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                      payment_unit: Year
                      flsa_status: Exempt
                      job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                      effective_date: 2021-01-20
                      rate: "78000.00"
                      adjust_for_minimum_wage: false
                      minimum_wages: []
                    rate: "78000.00"
                    hire_date: 2020-01-20
              schema:
                $ref: '#/components/schemas/Job'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a job
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-jobs
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_uuid}/time_off_activities:
    get:
      description: |-
        Get employee time off activities.

        scope: `employee_time_off_activities:read`
      operationId: Employees_getTimeOffActivities
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "The time off type name you want to query data for. ex: 'sick'\
          \ or 'vacation'"
        explode: true
        in: query
        name: time_off_type
        required: true
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::AddToPolicy
                    event_description: "Added to policy: Vacation Per Hour Worked"
                    effective_time: 2022-09-27T13:43:03.000-07:00
                    balance: "0.0"
                    balance_change: "0.0"
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::Accrual
                    event_description: Accrual
                    effective_time: 2022-09-27T14:43:03.000-07:00
                    balance: "2.0"
                    balance_change: "2.0"
                x-konfig-original-example:
                  value:
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::AddToPolicy
                    event_description: "Added to policy: Vacation Per Hour Worked"
                    effective_time: 2022-09-27T13:43:03.000-07:00
                    balance: "0.0"
                    balance_change: "0.0"
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::Accrual
                    event_description: Accrual
                    effective_time: 2022-09-27T14:43:03.000-07:00
                    balance: "2.0"
                    balance_change: "2.0"
              schema:
                $ref: '#/components/schemas/Time-Off-Activity'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get employee time off activities
      tags:
      - Employees
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-time_off_activities
      x-accepts: application/json
  /v1/jobs/{job_id}:
    delete:
      description: |-
        Deletes a specific job that an employee holds.

        scope: `jobs:write`
      operationId: JobsAndCompensations_deleteJobById
      parameters:
      - description: The UUID of the job
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete an individual job
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-jobs-job_id
      x-accepts: application/json
    get:
      description: |-
        Get a job.

        scope: `jobs:read`
      operationId: JobsAndCompensations_getJobDetails
      parameters:
      - description: The UUID of the job
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Available options:
          - all_compensations: Include all effective dated compensations for the job instead of only the current compensation
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - all_compensations
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Account Director
                    version: d0e719137f89ca3dd334dd4cc248ffbb
                    uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                    employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                    current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                    payment_unit: Year
                    primary: true
                    compensations:
                    - version: 994b75511d1debac5d7e2ddeae13679f
                      uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                      payment_unit: Year
                      flsa_status: Exempt
                      job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                      effective_date: 2021-01-20
                      rate: "78000.00"
                      adjust_for_minimum_wage: false
                      minimum_wages: []
                    rate: "78000.00"
                    hire_date: 2020-01-20
              schema:
                $ref: '#/components/schemas/Job'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a job
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-jobs-job_id
      x-accepts: application/json
    put:
      description: |-
        Update a job.

        scope: `jobs:write`
      operationId: JobsAndCompensations_updateJob
      parameters:
      - description: The UUID of the job
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  title: Regional Manager
                  version: gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir
                  hire_date: 2020-12-21
            schema:
              $ref: '#/components/schemas/JobsAndCompensationsUpdateJobRequest'
        description: Update a job.
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Account Director
                    version: d0e719137f89ca3dd334dd4cc248ffbb
                    uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                    employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                    current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                    payment_unit: Year
                    primary: true
                    compensations:
                    - version: 994b75511d1debac5d7e2ddeae13679f
                      uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                      payment_unit: Year
                      flsa_status: Exempt
                      job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                      effective_date: 2021-01-20
                      rate: "78000.00"
                      adjust_for_minimum_wage: false
                      minimum_wages: []
                    rate: "78000.00"
                    hire_date: 2020-01-20
              schema:
                $ref: '#/components/schemas/Job'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a job
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-jobs-job_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/jobs/{job_id}/compensations:
    get:
      description: |-
        Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent `effective_date`. By default the API returns only the current compensation - see the `include` query parameter for retrieving all compensations.

        Note: Currently the API does not support creating multiple compensations per job - creating a compensation with the same `job_uuid` as another will fail with a relevant error.

        Use `flsa_status` to determine if an employee is eligible for overtime.

        scope: `jobs:read`
      operationId: JobsAndCompensations_getJobCompensations
      parameters:
      - description: The UUID of the job
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Available options:
          - all_compensations: Include all effective dated compensations for each job instead of only the current compensation
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - all_compensations
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "70.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                  - version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    job_id: 1123581321345589
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    rate: "5.00"
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/JobsAndCompensationsGetJobCompensationsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get compensations for a job
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-jobs-job_id-compensations
      x-accepts: application/json
    post:
      description: |-
        Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent `effective_date`.

        scope: `jobs:write`
      operationId: JobsAndCompensations_createCompensation
      parameters:
      - description: The UUID of the job
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Exempt:
                value:
                  rate: "60000.00"
                  payment_unit: Year
                  flsa_status: Exempt
              Minimum Wage Adjusted:
                value:
                  effective_date: 2023-01-01
                  rate: "7.00"
                  payment_unit: Hour
                  flsa_status: Nonexempt
                  adjust_for_minimum_wage: true
                  minimum_wages:
                  - uuid: 340832db-ab28-4112-9e10-28dd1711835f
            schema:
              $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/Compensation'
            application/xml:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfde
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfd2
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a compensation
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-jobs-job_id-compensations
      x-content-type: application/json
      x-accepts: application/json
  /v1/compensations/{compensation_id}:
    delete:
      description: |
        Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent `effective_date`. This endpoint deletes a compensation for a job that hasn't been processed on payroll.

        scope: `jobs:write`
      operationId: JobsAndCompensations_removeCompensation
      parameters:
      - description: The UUID of the compensation
        explode: false
        in: path
        name: compensation_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete a compensation
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-compensations-compensation_id
      x-accepts: application/json
    get:
      description: |
        Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent `effective_date`.

        scope: `jobs:read`
      operationId: JobsAndCompensations_getCompensationById
      parameters:
      - description: The UUID of the compensation
        explode: false
        in: path
        name: compensation_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/Compensation'
            application/xml:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfde
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfd2
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a compensation
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-compensations-compensation_id
      x-accepts: application/json
    put:
      description: |-
        Compensations contain information on how much is paid out for a job. Jobs may have many compensations, but only one that is active. The current compensation is the one with the most recent `effective_date`.

        scope: `jobs:write`
      operationId: JobsAndCompensations_updateCompensation
      parameters:
      - description: The UUID of the compensation
        explode: false
        in: path
        name: compensation_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Exempt:
                value:
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  rate: "60000.00"
                  payment_unit: Year
                  flsa_status: Exempt
              Minimum Wage Adjusted:
                value:
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  rate: "7.00"
                  payment_unit: Hour
                  flsa_status: Nonexempt
                  adjust_for_minimum_wage: true
                  minimum_wages:
                  - uuid: 340832db-ab28-4112-9e10-28dd1711835f
            schema:
              $ref: '#/components/schemas/JobsAndCompensationsUpdateCompensationRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/Compensation'
            application/xml:
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    id: 1363316536327004
                    uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfde
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "60000.00"
                    payment_unit: Year
                    flsa_status: Exempt
                    effective_date: 2020-12-11
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                Minimum Wage Adjusted:
                  value:
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    id: 1363316536327003
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfd2
                    job_id: 1123581321345589
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: "5.00"
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: 2018-12-11
                    adjust_for_minimum_wage: true
                    minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: "7.25"
                      effective_date: 2018-12-11
              schema:
                $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a compensation
      tags:
      - Jobs and Compensations
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-compensations-compensation_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/earning_types:
    get:
      description: |-
        A payroll item in Gusto is associated to an earning type to name the type of earning described by the payroll item.

        #### Default Earning Type
        Certain earning types are special because they have tax considerations. Those earning types are mostly the same for every company depending on its legal structure (LLC, Corporation, etc.)

        #### Custom Earning Type
        Custom earning types are all the other earning types added specifically for a company.

        scope: `payrolls:read`
      operationId: EarningTypes_getAll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    default:
                    - name: Bonus
                      uuid: b82e35c5-d7c6-4705-9e16-9f87499ade18
                    - name: Cash Tips
                      uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
                    - name: Commission
                      uuid: 60191999-004a-49d9-b163-630574433653
                    - name: Correction Payment
                      uuid: 368226e0-8e8c-48f0-bc91-aee46caafbc9
                    - name: Minimum Wage Adjustment
                      uuid: 88a2e519-9ff5-4c19-9071-6a709f3c2939
                    - name: Paycheck Tips
                      uuid: a3eaf03d-e712-4144-8f9b-71a85528adcf
                    - name: Severance
                      uuid: a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63
                    custom:
                    - name: Gym Membership Stipend
                      uuid: 6b4a8efb-db90-4c13-a75f-aae11b3f4ff9
              schema:
                $ref: '#/components/schemas/EarningTypesGetAllResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all earning types for a company
      tags:
      - Earning Types
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-earning_types
      x-accepts: application/json
    post:
      description: |-
        Create a custom earning type.

        If an inactive earning type exists with the same name, this will reactivate it instead of creating a new one.

        scope: `payrolls:write`
      operationId: EarningTypes_createCustomEarningType
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: Gym Membership Stipend
            schema:
              $ref: '#/components/schemas/EarningTypesCreateCustomEarningTypeRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    name: Gym Membership Stipend
                    uuid: f4dc8972-8830-4c07-b623-349a04b040d7
              schema:
                $ref: '#/components/schemas/Earning-Type'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a custom earning type
      tags:
      - Earning Types
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-earning_types
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/earning_types/{earning_type_uuid}:
    delete:
      description: |-
        Deactivate an earning type.

        scope: `payrolls:write`
      operationId: EarningTypes_deactivateType
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the earning type
        explode: false
        in: path
        name: earning_type_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Deactivate an earning type
      tags:
      - Earning Types
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-earning_types-earning_type_uuid
      x-accepts: application/json
    put:
      description: |-
        Update an earning type.

        scope: `payrolls:write`
      operationId: EarningTypes_updateType
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the earning type
        explode: false
        in: path
        name: earning_type_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: Gym Membership Stipend
            schema:
              $ref: '#/components/schemas/EarningTypesUpdateTypeRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    name: Gym Membership Stipend
                    uuid: f4dc8972-8830-4c07-b623-349a04b040d7
              schema:
                $ref: '#/components/schemas/Earning-Type'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an earning type
      tags:
      - Earning Types
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-earning_types-earning_type_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/contractors:
    get:
      description: |-
        Get all contractors, active and inactive, individual and business, for a company.

        scope: `contractors:read`
      operationId: Contractors_getCompanyContractors
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 63859768485e218ccf8a449bb60f14ed
                    uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                    company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                    wage_type: Fixed
                    is_active: false
                    type: Individual
                    first_name: Kory
                    last_name: Gottlieb
                    middle_initial: P
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    department: Backup Dancer
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    email: keira.west@mckenzie.org
                    start_date: 2022-01-01
                    file_new_hire_report: false
                    work_state: null
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 621 Jast Row
                      street_2: Apt. 281
                      city: Coral Springs
                      state: FL
                      zip: "33065"
                      country: USA
                    hourly_rate: "0.00"
                  - version: 8aab307f1e8ed788697f8986346af559
                    uuid: 183a86f4-a803-4b38-9357-cd9b78e2560c
                    company_uuid: afdd5d98-581b-4fc0-b988-706b7d23b2a5
                    wage_type: Fixed
                    is_active: true
                    type: Business
                    first_name: null
                    last_name: null
                    middle_initial: null
                    business_name: Labadie-Stroman
                    ein: XX-XXX0001
                    has_ein: true
                    has_ssn: false
                    email: jonatan@kerluke.info
                    start_date: 2022-01-01
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 1625 Bednar Center
                      street_2: Apt. 480
                      city: Port Charlotte
                      state: FL
                      zip: "33954"
                      country: USA
                    hourly_rate: "0.00"
                    file_new_hire_report: false
                    work_state: null
                  - version: b48c46abfed1487b873b442334b3c4ff
                    uuid: ea1c2d65-b622-4899-bcb7-5cd0fe0232aa
                    id: 7757515807623484
                    company_uuid: 281c763d-a2ba-4f51-b9e8-b1ed61576d62
                    company_id: 7757616923763477
                    wage_type: Fixed
                    is_active: true
                    type: Individual
                    first_name: Chanel
                    last_name: Boyle
                    middle_initial: X
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    email: loyal@hettinger.biz
                    file_new_hire_report: true
                    work_state: TX
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 35913 Darrick Run
                      street_2: Apt. 913
                      city: Cypress
                      state: TX
                      zip: "77433"
                      country: USA
                    hourly_rate: "0.00"
              schema:
                $ref: '#/components/schemas/ContractorsGetCompanyContractorsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get contractors of a company
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractors
      x-accepts: application/json
    post:
      description: |-
        Create an individual or business contractor.

        scope: `contractors:manage`
      operationId: Contractors_createNewContractor
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create an Individual contractor:
                value:
                  type: Individual
                  wage_type: Fixed
                  first_name: Johnson
                  last_name: Johnson
                  start_date: 2020-04-01
                  self_onboarding: true
                  email: johnson@johnson.com
                  file_new_hire_report: "true,"
                  work_state: CA
              Create a Business contractor:
                value:
                  type: Business
                  wage_type: Fixed
                  business_name: Johnson-Johnson Contractors
                  start_date: 2020-04-01
            schema:
              $ref: '#/components/schemas/ContractorsCreateNewContractorRequest'
        description: Create an individual or business contractor.
      responses:
        "201":
          content:
            application/json:
              examples:
                Individual Contractor:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                    company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                    wage_type: Hourly
                    start_date: 2022-01-01
                    is_active: false
                    type: Individual
                    first_name: Kory
                    last_name: Gottlieb
                    middle_initial: P
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    department: Stage hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    email: keira.west@mckenzie.org
                    file_new_hire_report: true
                    work_state: FL
                    onboarded: true
                    onboarding_status: onboarding_completed
                    address:
                      street_1: 621 Jast Row
                      street_2: Apt. 281
                      city: Coral Springs
                      state: FL
                      zip: "33065"
                      country: USA
                    hourly_rate: "60.00"
                Business Contractor:
                  value:
                    version: 8aab307f1e8ed788697f8986346af559
                    uuid: c7c0659c-21a6-4b4e-b74c-9252576fc68c
                    company_uuid: 0ec4ae6e-e436-460d-b63c-94a14503d16f
                    wage_type: Fixed
                    start_date: 2022-01-01
                    is_active: true
                    type: Business
                    first_name: null
                    last_name: null
                    middle_initial: null
                    business_name: Labadie-Stroman
                    ein: XX-XXX0001
                    has_ein: true
                    has_ssn: false
                    email: jonatan@kerluke.info
                    file_new_hire_report: false
                    work_state: null
                    onboarded: false
                    onboarding_status: admin_onboarding_incomplete
                    address:
                      street_1: 1625 Bednar Center
                      street_2: Apt. 480
                      city: Port Charlotte
                      state: FL
                      zip: "33954"
                      country: USA
                    hourly_rate: "0.00"
              schema:
                $ref: '#/components/schemas/Contractor'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a contractor
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-contractors
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractors/{contractor_id}:
    delete:
      description: |-
        A contractor can only be deleted when there are no contractor payments.

        scope: `contractors:manage`
      operationId: Contractors_deleteContractor
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete a contractor
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-contractors-contractor_id
      x-accepts: application/json
    get:
      description: |-
        Get a contractor.

        scope: `contractors:read`
      operationId: Contractors_getById
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Individual Contractor:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                    company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                    wage_type: Hourly
                    start_date: 2022-01-01
                    is_active: false
                    type: Individual
                    first_name: Kory
                    last_name: Gottlieb
                    middle_initial: P
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    department: Stage hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    email: keira.west@mckenzie.org
                    file_new_hire_report: true
                    work_state: FL
                    onboarded: true
                    onboarding_status: onboarding_completed
                    address:
                      street_1: 621 Jast Row
                      street_2: Apt. 281
                      city: Coral Springs
                      state: FL
                      zip: "33065"
                      country: USA
                    hourly_rate: "60.00"
                Business Contractor:
                  value:
                    version: 8aab307f1e8ed788697f8986346af559
                    uuid: c7c0659c-21a6-4b4e-b74c-9252576fc68c
                    company_uuid: 0ec4ae6e-e436-460d-b63c-94a14503d16f
                    wage_type: Fixed
                    start_date: 2022-01-01
                    is_active: true
                    type: Business
                    first_name: null
                    last_name: null
                    middle_initial: null
                    business_name: Labadie-Stroman
                    ein: XX-XXX0001
                    has_ein: true
                    has_ssn: false
                    email: jonatan@kerluke.info
                    file_new_hire_report: false
                    work_state: null
                    onboarded: false
                    onboarding_status: admin_onboarding_incomplete
                    address:
                      street_1: 1625 Bednar Center
                      street_2: Apt. 480
                      city: Port Charlotte
                      state: FL
                      zip: "33954"
                      country: USA
                    hourly_rate: "0.00"
              schema:
                $ref: '#/components/schemas/Contractor'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a contractor
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_id
      x-accepts: application/json
    put:
      description: |-
        Update a contractor.

        scope: `contractors:write`

        > 🚧 Warning
        >
        > Watch out when changing a contractor's type (when the contractor is finished onboarding). Specifically, changing contractor type can be dangerous since Gusto won’t recognize and file two separate 1099s if they simply change from business to individual
      operationId: Contractors_updateContractor
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update an Individual Contractor:
                value:
                  version: b48c46abfed1487b873b442334b3c4ff
                  start_date: 2021-01-01
                  first_name: Chanel
                  last_name: Boyle
                  middle_initial: X
                  wage_type: Hourly
                  hourly_rate: "20.00"
                  is_active: true
              Update a Business Contractor:
                value:
                  version: b48c46abfed1487b873b442334b3c4ff
                  start_date: 2020-01-11
                  business_name: Contracting Solutions
                  ein: "991113334"
                  wage_type: Fixed
                  is_active: false
            schema:
              $ref: '#/components/schemas/ContractorsUpdateContractorRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Individual Contractor:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                    company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                    wage_type: Hourly
                    start_date: 2022-01-01
                    is_active: false
                    type: Individual
                    first_name: Kory
                    last_name: Gottlieb
                    middle_initial: P
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    department: Stage hand
                    department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    email: keira.west@mckenzie.org
                    file_new_hire_report: true
                    work_state: FL
                    onboarded: true
                    onboarding_status: onboarding_completed
                    address:
                      street_1: 621 Jast Row
                      street_2: Apt. 281
                      city: Coral Springs
                      state: FL
                      zip: "33065"
                      country: USA
                    hourly_rate: "60.00"
                Business Contractor:
                  value:
                    version: 8aab307f1e8ed788697f8986346af559
                    uuid: c7c0659c-21a6-4b4e-b74c-9252576fc68c
                    company_uuid: 0ec4ae6e-e436-460d-b63c-94a14503d16f
                    wage_type: Fixed
                    start_date: 2022-01-01
                    is_active: true
                    type: Business
                    first_name: null
                    last_name: null
                    middle_initial: null
                    business_name: Labadie-Stroman
                    ein: XX-XXX0001
                    has_ein: true
                    has_ssn: false
                    email: jonatan@kerluke.info
                    file_new_hire_report: false
                    work_state: null
                    onboarded: false
                    onboarding_status: admin_onboarding_incomplete
                    address:
                      street_1: 1625 Bednar Center
                      street_2: Apt. 480
                      city: Port Charlotte
                      state: FL
                      zip: "33954"
                      country: USA
                    hourly_rate: "0.00"
              schema:
                $ref: '#/components/schemas/Contractor'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a contractor
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/bank_accounts:
    get:
      description: |-
        Returns all contractor bank accounts.

        scope: `contractor_payment_methods:read`
      operationId: ContractorPaymentMethod_listBankAccounts
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: "266905059"
                    hidden_account_number: XXXX1207
                    account_type: Checking
              schema:
                $ref: '#/components/schemas/ContractorPaymentMethodListBankAccountsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all contractor bank accounts
      tags:
      - Contractor Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-bank_accounts
      x-accepts: application/json
    post:
      description: |-
        Creates a contractor bank account.

        Note: We currently only support one bank account per contractor. Using this endpoint on a contractor who has already
        has a bank account will just replace it.

        scope: `contractor_payment_methods:write`
      operationId: ContractorPaymentMethod_createBankAccount
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: BoA Checking Account
                  routing_number: "266905059"
                  account_number: "5809431207"
                  account_type: Checking
            schema:
              $ref: '#/components/schemas/ContractorPaymentMethodCreateBankAccountRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: "266905059"
                    hidden_account_number: XXXX1207
                    account_type: Checking
              schema:
                $ref: '#/components/schemas/Contractor-Bank-Account'
            application/xml:
              examples:
                Example:
                  value:
                    uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: "266905059"
                    hidden_account_number: XXXX1207
                    account_type: Checking
              schema:
                $ref: '#/components/schemas/ContractorPaymentMethodCreateBankAccountResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an contractor bank account
      tags:
      - Contractor Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-contractors-contractor_uuid-bank_accounts
      x-content-type: application/json
      x-accepts: application/json
  /v1/webhook_subscriptions:
    get:
      description: |-
        Returns all webhook subscriptions associated with the provided Partner API token.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:read`
      operationId: Webhooks_listSubscriptions
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: dcceb38a-46be-4110-9d1d-1b3384c3b906
                    url: https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber
                    status: pending
                    subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
              schema:
                $ref: '#/components/schemas/WebhooksListSubscriptionsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      security:
      - ApiKeyAuth: []
      summary: List webhook subscriptions
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions
      x-accepts: application/json
    post:
      description: |-
        Create a webhook subscription to receive events of the specified subscription_types whenever there is a state change.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:write`
      operationId: Webhooks_createSubscription
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  url: https://partner-app.com/subscriber
                  subscription_types:
                  - Company
                  - Employee
            schema:
              $ref: '#/components/schemas/WebhooksCreateSubscriptionRequest'
        description: ""
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    url: https://the-partner-app.com/subscriber
                    status: verified
                    subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
              schema:
                $ref: '#/components/schemas/Webhook-Subscription'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Create a webhook subscription
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-webhook_subscriptions
      x-content-type: application/json
      x-accepts: application/json
  /v1/webhook_subscriptions/{webhook_subscription_uuid}:
    delete:
      description: |
        Deletes the Webhook Subscription associated with the provided UUID.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:write`
      operationId: Webhooks_deleteSubscriptionByUuid
      parameters:
      - description: The webhook subscription UUID.
        explode: false
        in: path
        name: webhook_subscription_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      security:
      - ApiKeyAuth: []
      summary: Delete a webhook subscription
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-webhook_subscriptions-webhook_subscription_uuid
      x-accepts: application/json
    get:
      description: |
        Returns the Webhook Subscription associated with the provided UUID.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:read`
      operationId: Webhooks_getSubscription
      parameters:
      - description: The webhook subscription UUID.
        explode: false
        in: path
        name: webhook_subscription_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    url: https://the-partner-app.com/subscriber
                    status: verified
                    subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
              schema:
                $ref: '#/components/schemas/Webhook-Subscription'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      security:
      - ApiKeyAuth: []
      summary: Get a webhook subscription
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions-webhook_subscription_uuid
      x-accepts: application/json
    put:
      description: |
        Updates the Webhook Subscription associated with the provided UUID.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:write`
      operationId: Webhooks_updateSubscription
      parameters:
      - description: The webhook subscription UUID.
        explode: false
        in: path
        name: webhook_subscription_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  subscription_types:
                  - Company
                  - Employee
            schema:
              $ref: '#/components/schemas/WebhooksUpdateSubscriptionRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    url: https://the-partner-app.com/subscriber
                    status: verified
                    subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
              schema:
                $ref: '#/components/schemas/Webhook-Subscription'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Update a webhook subscription
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-webhook_subscriptions-webhook_subscription_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/webhook_subscriptions/{webhook_subscription_uuid}/verify:
    put:
      description: |
        When a webhook subscription is created, a `verification_token` is POSTed to the registered webhook subscription URL. This `verify` endpoint needs to be called with `verification_token` before webhook events can be sent to the registered webhook URL.

        Use the /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token API to resend the `verification_token` to the Subscriber.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:write`
      operationId: Webhooks_verifySubscriptionToken
      parameters:
      - description: The webhook subscription UUID.
        explode: false
        in: path
        name: webhook_subscription_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  verification_token: asefasedfe23e234easd
            schema:
              $ref: '#/components/schemas/WebhooksVerifySubscriptionTokenRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    url: https://the-partner-app.com/subscriber
                    status: verified
                    subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
              schema:
                $ref: '#/components/schemas/Webhook-Subscription'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Verify the webhook subscription
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-webhook_subscriptions-webhook_subscription_uuid-verify
      x-content-type: application/json
      x-accepts: application/json
  /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token:
    get:
      description: |
        Request that the webhook subscription `verification_token` be POSTed to the Subscription URL.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `webhook_subscriptions:read`
      operationId: Webhooks_requestVerificationToken
      parameters:
      - description: The webhook subscription UUID.
        explode: false
        in: path
        name: webhook_subscription_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          description: No Content. The `verification_token` is POSTed to the Subscription
            URL.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      security:
      - ApiKeyAuth: []
      summary: Request the webhook subscription verification_token
      tags:
      - Webhooks
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions-webhook_subscription_uuid-request_verification_token
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/forms:
    get:
      description: |-
        Get a list of all contractor's forms

        scope: `contractor_forms:read`
      operationId: ContractorForms_listAll
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: "Form 1099: 2020"
                    description: Form 1099 records your annual income as a contractor.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: US_1099
                    draft: false
                    requires_signing: false
                    year: 2020
                    quarter: null
                    contractor_uuid: 123dd616-6dbc-4724-938a-403f6217a933
              schema:
                $ref: '#/components/schemas/ContractorFormsListAllResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all contractor forms
      tags:
      - Contractor Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/forms/{form_id}:
    get:
      description: |-
        Get a contractor form

        scope: `contractor_forms:read`
      operationId: ContractorForms_getByIdForm
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: "Form 1099: 2020"
                    description: Form 1099 records your annual income as a contractor.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: US_1099
                    draft: false
                    requires_signing: false
                    year: 2020
                    quarter: null
                    contractor_uuid: 123dd616-6dbc-4724-938a-403f6217a933
              schema:
                $ref: '#/components/schemas/Form_1099'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a contractor form
      tags:
      - Contractor Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms-form_id
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/forms/{form_id}/pdf:
    get:
      description: |-
        Get the link to the form PDF

        scope: `contractor_forms:read`
      operationId: ContractorForms_getPdfLink
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    document_url: https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020
              schema:
                $ref: '#/components/schemas/Form-Pdf'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the contractor form pdf
      tags:
      - Contractor Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms-form_id-pdf
      x-accepts: application/json
  /v1/sandbox/generate_1099:
    post:
      description: |-
        > 🚧 Demo action
        >
        > This action is only available in the Demo environment

        Generates a 1099 document for testing purposes.

        scope: `contractors:write`
      operationId: ContractorForms_create1099Form
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorFormsCreate1099FormRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: "Form 1099: 2022"
                    description: Form 1099 records your annual income as a contractor.
                    year: 2022
                    quarter: null
                    contractor_uuid: b68484a9-4487-4ee5-bafc-4245133a426c
                    uuid: 29afb141-2256-431d-90e0-1c7344222342
                    name: US_1099
                    draft: false
                    requires_signing: false
              schema:
                $ref: '#/components/schemas/Form_1099'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: "Generate a 1099 form [DEMO]"
      tags:
      - Contractor Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-sandbox-generate_1099
      x-content-type: application/json
      x-accepts: application/json
  /v1/sandbox/generate_w2:
    post:
      description: |-
        > 🚧 Demo action
        >
        > This action is only available in the Demo environment

        Generates a W2 document for testing purposes.

        scope: `employees:write`
      operationId: EmployeeForms_generateW2Document
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeFormsGenerateW2DocumentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: "Draft Form W-2: 2021"
                    description: Form W-2 records your annual wages and taxes.
                    employee_uuid: 19394e76-a866-4570-b237-9a26b0163907
                    uuid: bf5b2496-26df-436e-b465-eae4ed5c8021
                    name: US_W-2
                    draft: false
                    requires_signing: false
              schema:
                $ref: '#/components/schemas/EmployeeFormsGenerateW2DocumentResponse'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: "Generate a W2 form [DEMO]"
      tags:
      - Employee Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-sandbox-generate_w2
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/payment_method:
    get:
      description: |-
        Fetches a contractor's payment method. A contractor payment method
        describes how the payment should be split across the contractor's associated
        bank accounts.

        scope: `contractor_payment_methods:read`
      operationId: ContractorPaymentMethod_getContractorPaymentMethod
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    type: Direct Deposit
                    split_by: Percentage
                    splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 100
              schema:
                $ref: '#/components/schemas/Contractor-Payment-Method'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a contractor's payment method
      tags:
      - Contractor Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-payment_method
      x-accepts: application/json
    put:
      description: |-
        Updates a contractor's payment method. Note that creating a contractor
        bank account will also update the contractor's payment method.

        scope: `contractor_payment_methods:write`
      operationId: ContractorPaymentMethod_updateBankAccount
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Direct Deposit
              example-3:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Check
            schema:
              $ref: '#/components/schemas/ContractorPaymentMethodUpdateBankAccountRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 63859768485e218ccf8a449bb60f14ed
                    type: Direct Deposit
                    split_by: Percentage
                    splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 100
              schema:
                $ref: '#/components/schemas/Contractor-Payment-Method'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a contractor's payment method
      tags:
      - Contractor Payment Method
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-payment_method
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/onboarding_status:
    get:
      description: |-
        Retrieves a contractor's onboarding status. The data returned helps inform the required onboarding steps and respective completion status.

        scope: `contractors:read`

        ## onboarding_status

        ### Admin-facilitated onboarding
        | onboarding_status | Description |
        |:------------------|------------:|
        | `admin_onboarding_incomplete` | Admin needs to enter basic information about the contractor. |
        | `admin_onboarding_review` | All information has been completed and admin needs to confirm onboarding. |
        | `onboarding_completed` | Contractor has been fully onboarded and verified. |

        ### Contractor self-onboarding

        | onboarding_status | Description |
        | --- | ----------- |
        | `admin_onboarding_incomplete` | Admin needs to enter basic information about the contractor. |
        | `self_onboarding_not_invited` | Admin has the intention to invite the contractor to self-onboard (e.g., marking a checkbox), but the system has not yet sent the invitation. |
        | `self_onboarding_invited` | Contractor has been sent an invitation to self-onboard. |
        | `self_onboarding_started` | Contractor has started the self-onboarding process. |
        | `self_onboarding_review` | Admin needs to review contractors's entered information and confirm onboarding. |
        | `onboarding_completed` | Contractor has been fully onboarded and verified. |

        ## onboarding_steps

        | onboarding_steps | Requirement(s) to be completed |
        |:-----------------|-------------------------------:|
        | `basic_details` | Add individual contractor's first name, last name, social security number or Business name and EIN depending on the contractor type |
        | `add_address` | Add contractor address. |
        | `compensation_details` | Add contractor compensation. |
        | `payment_details` | Set up contractor's direct deposit or set to check. |
        | `sign_documents` | Contractor forms (e.g., W9) are generated & signed. |
        | `file_new_hire_report` | Contractor new hire report is generated. |
      operationId: Contractors_getOnboardingStatus
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Basic details
                      id: basic_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documents
                      required: false
                      completed: false
                      requirements:
                      - "basic_details,"
                      - add_address
                    - title: File new hire report
                      id: file_new_hire_report
                      required: false
                      completed: false
                      requirements:
                      - basic_details
              schema:
                $ref: '#/components/schemas/Contractor-Onboarding-Status'
            application/xml:
              examples:
                Example:
                  value:
                    uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Basic details
                      id: basic_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documentsX
                      required: false
                      completed: false
                      requirements:
                      - "basic_details,"
                      - add_address
                    - title: File new hire report
                      id: file_new_hire_reportX
                      required: false
                      completed: false
                      requirements:
                      - basic_details
              schema:
                $ref: '#/components/schemas/ContractorsGetOnboardingStatusResponse'
          description: Example response.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the contractor's onboarding status
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-onboarding_status
      x-accepts: application/json
    put:
      description: |-
        Updates a contractor's onboarding status.

        scope: `contractors:write`

        Below is a list of valid onboarding status changes depending on the intended action to be performed on behalf of the contractor.

        | Action | current onboarding_status | new onboarding_status |
        |:------------------|:------------:|----------:|
        | Mark a contractor as self-onboarding | `admin_onboarding_incomplete` | `self_onboarding_not_invited` |
        | Invite an employee to self-onboard | `admin_onboarding_incomplete` or `self_onboarding_not_invited` | `self_onboarding_invited` |
        | Cancel an employee's self-onboarding | `self_onboarding_invited` or `self_onboarding_not_invited` | `admin_onboarding_incomplete` |
        | Review an employee's self-onboarded info | `self_onboarding_started` | `self_onboarding_review` |
        | Finish an employee's onboarding | `admin_onboarding_incomplete` or `self_onboarding_review` | `onboarding_completed` |
      operationId: Contractors_changeOnboardingStatus
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorsChangeOnboardingStatusRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Basic details
                      id: basic_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documents
                      required: false
                      completed: false
                      requirements:
                      - "basic_details,"
                      - add_address
                    - title: File new hire report
                      id: file_new_hire_report
                      required: false
                      completed: false
                      requirements:
                      - basic_details
              schema:
                $ref: '#/components/schemas/Contractor-Onboarding-Status'
            application/xml:
              examples:
                Example:
                  value:
                    uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    onboarding_status: admin_onboarding_incomplete
                    onboarding_steps:
                    - title: Basic details
                      id: basic_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_addressX
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_detailsX
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documentsX
                      required: false
                      completed: false
                      requirements:
                      - "basic_details,"
                      - add_address
                    - title: File new hire report
                      id: file_new_hire_reportX
                      required: false
                      completed: false
                      requirements:
                      - basic_details
              schema:
                $ref: '#/components/schemas/ContractorsGetOnboardingStatusResponse'
          description: Example response.
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Change the contractor's onboarding status
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-onboarding_status
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractors/{contractor_uuid}/address:
    get:
      description: |-
        The address of a contractor is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        scope: `contractors:read`
      operationId: Contractors_getAddress
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 23323096a8015e32d9795fadf1fd300d
                    contractor_uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                    street_1: 999 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: 94107
                    country: USA
                    active: true
              schema:
                $ref: '#/components/schemas/Contractor-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a contractor address
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-address
      x-accepts: application/json
    put:
      description: |-
        The address of a contractor is used to determine certain tax information about them. Addresses are geocoded on create and update to ensure validity.

        scope: `contractors:write`
      operationId: Contractors_updateAddress
      parameters:
      - description: The UUID of the contractor
        explode: false
        in: path
        name: contractor_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: fe75bd065ff48b91c35fe8ff842f986c
                  street_1: 300 3rd Street
                  street_2: null
                  city: San Francisco
                  state: CA
                  zip: "94107"
            schema:
              $ref: '#/components/schemas/ContractorsUpdateAddressRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 23323096a8015e32d9795fadf1fd300d
                    contractor_uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                    street_1: 999 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: 94107
                    country: USA
                    active: true
              schema:
                $ref: '#/components/schemas/Contractor-Address'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a contractor's address
      tags:
      - Contractors
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-address
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls:
    get:
      description: |-
        Returns a list of payrolls for a company. You can change the payrolls returned by updating the processing_status, payroll_types, start_date, & end_date params.

        By default, will return processed, regular payrolls for the past 6 months.

        Notes:
        * Dollar amounts are returned as string representations of numeric decimals, are represented to the cent.
        * end_date can be at most 3 months in the future and start_date and end_date can't be more than 1 year apart.

        scope: `payrolls:read`
      operationId: Payrolls_getCompanyPayrolls
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether to include processed and/or unprocessed payrolls in\
          \ the response, defaults to processed, for multiple attributes comma separate\
          \ the values, i.e. `?processing_statuses=processed,unprocessed`"
        explode: true
        in: query
        name: processing_statuses
        required: false
        schema:
          enum:
          - unprocessed
          - processed
          type: string
        style: form
      - description: "Whether to include regular and/or off_cycle payrolls in the\
          \ response, defaults to regular, for multiple attributes comma separate\
          \ the values, i.e. `?payroll_types=regular,off_cycle`"
        explode: true
        in: query
        name: payroll_types
        required: false
        schema:
          enum:
          - regular
          - off_cycle
          - external
          type: string
        style: form
      - description: "Include the requested attribute in the response. In v2023-04-01\
          \ totals are no longer included by default. For multiple attributes comma\
          \ separate the values, i.e. `?include=totals,payroll_status_meta`"
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - totals
          - payroll_status_meta
          type: string
        style: form
      - description: Return payrolls whose pay period is after the start date
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          type: string
        style: form
      - description: Return payrolls whose pay period is before the end date
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - payroll_deadline: 2021-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: true
                    processed_date: 2021-02-18
                    calculated_at: 2021-02-18T12:00:00Z
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2021-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    totals:
                      company_debit: "121747.71"
                      net_pay_debit: "79283.80"
                      tax_debit: "42463.91"
                      reimbursement_debit: "0.00"
                      child_support_debit: "0.00"
                      reimbursements: "0.00"
                      net_pay: "81752.94"
                      gross_pay: "130635.89"
                      employee_bonuses: "0.00"
                      employee_commissions: "18536.37"
                      employee_cash_tips: "0.00"
                      employee_paycheck_tips: "0.00"
                      additional_earnings: "0.00"
                      owners_draw: "0.00"
                      check_amount: "2469.14"
                      employer_taxes: "6917.19"
                      employee_taxes: "35546.72"
                      benefits: "0.00"
                      employee_benefits_deductions: "13336.23"
                      deferred_payroll_taxes: "0.00"
                  - payroll_deadline: 2021-02-28
                    check_date: 2021-03-01
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: nil
                    calculated_at: nil
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-16
                      end_date: 2021-03-01
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
              schema:
                $ref: '#/components/schemas/PayrollsGetCompanyPayrollsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all payrolls for a company
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payrolls
      x-accepts: application/json
    post:
      description: |-
        Creates a new, unprocessed, off-cycle payroll.

        ## `off_cycle_reason`
        - External benefits and deductions will be included when the `off_cycle_reason` is set to `Correction`.
        - All benefits and deductions are blocked when the `off_cycle_reason` is set to `Bonus`.

        scope: `payrolls:run`
      operationId: Payrolls_createOffCyclePayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollsCreateOffCyclePayrollRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    payroll_deadline: 2022-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: null
                    calculated_at: null
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2022-02-22
                      initial_check_date: 2022-02-22
                      expected_debit_time: 2022-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2022-02-18T22:00:00Z
                    employee_compensations:
                    - version: 4ba36d23a78c7393b4900ef38019d8ff
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "15.000"
                        job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "5.000"
                        job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: ff083257a5583291fb86656ad0df1b42
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Commission Only Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: 259816479e3729bf855318af9b9adddf
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    fixed_compensation_types:
                    - name: Bonus
                    - name: Commission
                    - name: Paycheck Tips
                    - name: Cash Tips
                    - name: Correction Payment
                    - name: Anniversary Bonus
                    - name: Internet Stipend
                    - name: Reimbursement
              schema:
                $ref: '#/components/schemas/Payroll-Prepared'
          description: A prepared payroll
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an off-cycle payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-payrolls
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/payroll_reversals:
    get:
      description: |-
        Returns all approved Payroll Reversals for a Company.

        scope: `payrolls:read`
      operationId: Payrolls_approvedReversals
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    reversed_payroll_uuid: 09505984-8d8c-41a3-adbe-5740322ae8e9
                    reversal_payroll_uuid: 0424688e-0a2e-4cd0-ac86-42283e788fb3
                    reason: Customer Request
                    approved_at: null
                    category: convert_check_ee_requested
                    reversed_employee_uuids:
                    - 5f036964-185e-4c85-bbf2-3873e1203b30
              schema:
                $ref: '#/components/schemas/Payroll-Reversal'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get approved payroll reversals
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payroll_reversals
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls/{payroll_id}:
    delete:
      description: |-
        This endpoint allows you to delete an **unprocessed** payroll.

        By default the payroll and associated data is deleted synchronously. To request an asynchronous delete, use the `async=true` query parameter. In both cases validation of ability to delete will be performed and an Unprocessable Entity error will be returned if the payroll is not able to be deleted. A successful synchronous delete will return `204/No Content`. When a payroll has been enqueued for asynchronous deletion, `202/Accepted` will be returned.

        scope: `payrolls:run`
      operationId: Payrolls_deleteUnprocessedPayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "When true, request an asynchronous delete of the payroll."
        explode: true
        in: query
        name: async
        required: false
        schema:
          type: boolean
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          description: Unprocessable Entity
      summary: Delete a payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-payrolls-payroll_id
      x-accepts: application/json
    get:
      description: |-
        Returns a payroll. If payroll is calculated or processed, will return employee_compensations and totals.

        Notes:
        * Hour and dollar amounts are returned as string representations of numeric decimals.
        * Hours are represented to the thousands place; dollar amounts are represented to the cent.
        * Every eligible compensation is returned for each employee. If no data has yet be inserted for a given field, it defaults to “0.00” (for fixed amounts) or “0.000” (for hours ).
        * When include parameter with benefits value is passed, employee_benefits:read scope is required to return benefits
          * Benefits containing PHI are only visible with the `employee_benefits:read:phi` scope

        scope: `payrolls:read`
      operationId: Payrolls_getSinglePayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Include the requested attribute in the response, for multiple\
          \ attributes comma separate the values, i.e. `?include=benefits,deductions,taxes`"
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - benefits
          - deductions
          - taxes
          - payroll_status_meta
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Unprocessed:
                  value:
                    payroll_deadline: 2021-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: null
                    calculated_at: null
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2021-02-22
                      initial_check_date: 2021-02-22
                      expected_debit_time: 2021-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2021-02-18T22:00:00Z
                Processed:
                  value:
                    payroll_deadline: 2021-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: true
                    processed_date: 2021-02-18
                    calculated_at: 2021-02-18T12:00:00Z
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    totals:
                      company_debit: "121747.71"
                      net_pay_debit: "79283.80"
                      tax_debit: "42463.91"
                      reimbursement_debit: "0.00"
                      child_support_debit: "0.00"
                      reimbursements: "0.00"
                      net_pay: "81752.94"
                      gross_pay: "130635.89"
                      employee_bonuses: "0.00"
                      employee_commissions: "18536.37"
                      employee_cash_tips: "0.00"
                      employee_paycheck_tips: "0.00"
                      additional_earnings: "0.00"
                      owners_draw: "0.00"
                      check_amount: "2469.14"
                      employer_taxes: "6917.19"
                      employee_taxes: "35546.72"
                      benefits: "0.00"
                      employee_benefits_deductions: "13336.23"
                      deferred_payroll_taxes: "0.00"
                    company_taxes:
                    - name: MO Compensation Deduction
                      amount: "-0.92"
                      employer: true
                    - name: NY MCTMT
                      amount: "5.00"
                      employer: true
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2021-02-22
                      initial_check_date: 2021-02-22
                      expected_debit_time: 2021-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2021-02-18T22:00:00Z
                    employee_compensations:
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "15.000"
                        job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "5.000"
                        job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Commission Only Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
              schema:
                $ref: '#/components/schemas/Payroll'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a single payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payrolls-payroll_id
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows you to update information for one or more employees for a specific **unprocessed** payroll.  You can think of the **unprocessed**
        payroll object as a template of fields that you can update.  You cannot modify the structure of the payroll object through this endpoint, only values
        of the fields included in the payroll.  If you do not include specific employee compensations or fixed/hourly compensations in your request body, they
        will not be removed from the payroll.

        scope: `payrolls:write`
      operationId: Payrolls_updatePayrollById
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollsUpdatePayrollByIdRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    payroll_deadline: 2022-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: null
                    calculated_at: null
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2022-02-22
                      initial_check_date: 2022-02-22
                      expected_debit_time: 2022-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2022-02-18T22:00:00Z
                    employee_compensations:
                    - version: 4ba36d23a78c7393b4900ef38019d8ff
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "15.000"
                        job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "5.000"
                        job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: ff083257a5583291fb86656ad0df1b42
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Commission Only Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: 259816479e3729bf855318af9b9adddf
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    fixed_compensation_types:
                    - name: Bonus
                    - name: Commission
                    - name: Paycheck Tips
                    - name: Cash Tips
                    - name: Correction Payment
                    - name: Anniversary Bonus
                    - name: Internet Stipend
                    - name: Reimbursement
              schema:
                $ref: '#/components/schemas/Payroll-Prepared'
          description: A prepared payroll
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a payroll by ID
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls/{payroll_id}/prepare:
    put:
      description: |-
        This endpoint will build the payroll and get it ready for making updates. This includes adding/removing eligible employees from the Payroll and updating the check_date, payroll_deadline, and payroll_status_meta dates & times.

        Notes:
         * Will null out calculated_at & totals if a payroll has already been calculated.
         * Will return the version param used for updating the payroll

        scope: `payrolls:write`
      operationId: Payrolls_prepareForUpdate
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    payroll_deadline: 2022-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: null
                    calculated_at: null
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2022-02-22
                      initial_check_date: 2022-02-22
                      expected_debit_time: 2022-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2022-02-18T22:00:00Z
                    employee_compensations:
                    - version: 4ba36d23a78c7393b4900ef38019d8ff
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "15.000"
                        job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "5.000"
                        job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: ff083257a5583291fb86656ad0df1b42
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Commission Only Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    - version: 259816479e3729bf855318af9b9adddf
                      employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                    fixed_compensation_types:
                    - name: Bonus
                    - name: Commission
                    - name: Paycheck Tips
                    - name: Cash Tips
                    - name: Correction Payment
                    - name: Anniversary Bonus
                    - name: Internet Stipend
                    - name: Reimbursement
              schema:
                $ref: '#/components/schemas/Payroll-Prepared'
          description: A prepared payroll
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Prepare a payroll for update
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-prepare
      x-accepts: application/json
  /v1/payrolls/{payroll_uuid}/receipt:
    get:
      description: |-
        Returns a payroll receipt.

        Notes:
        * Hour and dollar amounts are returned as string representations of numeric decimals.
        * Dollar amounts are represented to the cent.
        * If no data has yet be inserted for a given field, it defaults to “0.00” (for fixed amounts).

        scope: `payrolls:read`
      operationId: Payrolls_getSingleReceipt
      parameters:
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    totals:
                      company_debit: "1080.47"
                      net_pay_debit: "748.34"
                      child_support_debit: "100.0"
                      reimbursement_debit: "50.0"
                      tax_debit: "182.13"
                    taxes:
                    - name: Federal Income Tax
                      amount: "30.36"
                    - name: Social Security
                      amount: "104.54"
                    - name: Medicare
                      amount: "24.46"
                    - name: Additional Medicare
                      amount: "0.0"
                    - name: TX SUTA
                      amount: "22.77"
                    - name: FUTA
                      amount: "0.0"
                    employee_compensations:
                    - employee_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                      employee_first_name: Patricia
                      employee_last_name: Hamill
                      payment_method: Direct Deposit
                      net_pay: "748.34"
                      total_tax: "182.13"
                      total_garnishments: "0.0"
                      child_support_garnishment: "100.0"
                      total_reimbursement: "50.0"
                    licensee:
                      name: "Gusto, Zenpayroll Inc."
                      address: 525 20th St
                      city: San Francisco
                      state: CA
                      postal_code: "94107"
                      phone_number: "4157778888"
                    payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                    company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                    name_of_sender: Torp and Sons and Sons
                    name_of_recipient: Payroll Recipients
                    recipient_notice: Payroll recipients include the employees listed
                      below plus the tax agencies for the taxes listed below.
                    debit_date: 2022-06-02
                    license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter.\
                      \ For more about Gusto’s licenses and your state-specific rights\
                      \ to request information, submit complaints, dispute errors,\
                      \ or cancel transactions, visit our license page."
                    license_uri: https://gusto.com/about/licenses
                    right_to_refund: https://gusto.com/about/licenses
                    liability_of_licensee: https://gusto.com/about/licenses
              schema:
                $ref: '#/components/schemas/Payroll-Receipt'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a single payroll receipt
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-payrolls-payroll_uuid-receipt
      x-accepts: application/json
  /v1/payrolls/{payroll_id}/employees/{employee_id}/calculate_accruing_time_off_hours:
    post:
      description: |-
        Returns a list of accruing time off for each time off policy associated with the employee.

        Factors affecting the accrued hours:
          * the time off policy accrual method (whether they get pay per hour worked, per hour paid, with / without overtime, accumulate time off based on pay period / calendar year / anniversary)
          * how many hours of work during this pay period
          * how many hours of PTO / sick hours taken during this pay period (for per hour paid policies only)
          * company pay schedule frequency (for per pay period)

        If none of the parameters is passed in, the accrued time off hour will be 0.

        scope: `payrolls:read`
      operationId: TimeOffPolicies_calculateAccruingTimeOffHours
      parameters:
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  regular_hours_worked: 30.25
                  overtime_hours_worked: 10
                  double_overtime_hours_worked: 0
                  pto_hours_used: 5.5
                  sick_hours_used: 0
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesCalculateAccruingTimeOffHoursRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - time_off_policy_uuid: c3a15554-f124-415d-b2c4-90b430fd8eb1
                    hours: "3.2"
                  - time_off_policy_uuid: 386fc48d-52d2-4009-87b3-368f74f6b3df
                    hours: "6.0"
              schema:
                $ref: '#/components/schemas/TimeOffPoliciesCalculateAccruingTimeOffHoursResponse'
          description: Example response
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Calculate accruing time off hours
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_id-employees-employee_id-calculate_accruing_time_off_hours
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/payrolls/blockers:
    get:
      description: |-
        Returns a list of reasons that prevent the company from running payrolls. See the [payroll blockers guide](https://docs.gusto.com/embedded-payroll/docs/payroll-blockers) for a complete list of reasons.

        The list is empty if there are no payroll blockers.

        scope: `payrolls:run`
      operationId: Payrolls_getAllPayrollBlockers
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Payroll Blockers:
                  value:
                  - key: wc_pending_approval
                    message: Worker's compensation policy needs to be accepted.
                  - key: eftps_in_error
                    message: We could not make payments to the Electronic Federal
                      Tax Payment System.
                  - key: geocode_error
                    message: Company or employee address could not be verified. Please
                      ensure all addresses are valid.
                  - key: geocode_needed
                    message: Company or employee address verification is missing.
                      Please ensure all addresses are entered correctly.
                  - key: pay_schedule_setup_not_complete
                    message: Some employees don’t have a pay schedule set up yet.
                      Please complete this step to run payroll.
                  - key: invalid_signatory
                    message: A signatory who is authorized to sign documents on behalf
                      of your company is required. Please ensure their identity verification
                      is successful.
                  - key: suspended
                    message: Company is suspended and cannot run payroll.
                  - key: soft_suspended
                    message: Company is placed in a 'soft' suspension state and requires
                      missing/incorrect information to be corrected.
                  - key: pending_payroll_review
                    message: Payroll is blocked. We are reviewing payroll information
                      in your account. Please contact support if you believe this
                      is an error.
                  - key: pending_recovery_case
                    message: Payroll is blocked due to an open recovery case. Please
                      contact support if you believe this is an error.
                  - key: pending_information_request
                    message: Payroll is blocked due to an open information request.
                      Please contact support if you believe this is an error.
                  - key: needs_approval
                    message: Company needs to be approved to run payroll.
                  - key: missing_addresses
                    message: Company must add addresses in order to run payroll.
                  - key: missing_federal_tax_setup
                    message: Company must complete federal tax setup in order to run
                      payroll.
                  - key: missing_industry_selection
                    message: Company must complete industry selection in order to
                      run payroll.
                  - key: missing_bank_info
                    message: Company must have a bank account in order to run payroll.
                  - key: missing_employee_setup
                    message: Company must add employees in order to run payroll.
                  - key: missing_state_tax_setup
                    message: Company must complete state tax setup in order to run
                      payroll.
                  - key: missing_pay_schedule
                    message: Company must have a pay schedule in order to run payroll.
                  - key: missing_forms
                    message: Company forms must be signed in order to run payroll.
                  - key: missing_bank_verification
                    message: Company bank account must be verified in order to run
                      payroll.
                  - key: missing_signatory
                    message: Company must have a verified signatory in order to run
                      payroll.
              schema:
                $ref: '#/components/schemas/PayrollsGetAllPayrollBlockersResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all payroll blockers for a company
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-payrolls-blockers
      x-accepts: application/json
  /v1/companies/{company_uuid}/payrolls/skip:
    post:
      description: |-
        Submits a $0 payroll for employees associated with the pay schedule to skip payroll. This submission is asynchronous and a successful request responds with a 202 HTTP status. Upon success, the payroll is transitioned to the `processed` state.

        If the company is blocked from running payroll due to issues like incomplete setup, missing information or other compliance issues, the response will be 422 Unprocessable Entity with a categorization of the blockers as described in the error responses.

        scope: `payrolls:run`
      operationId: Payrolls_skipPayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  payroll_type: Regular
                  start_date: 2023-05-26
                  end_date: 2023-06-25
                  pay_schedule_uuid: 85100524-4b42-4d2d-bd62-9d864f9aea64
            schema:
              $ref: '#/components/schemas/PayrollsSkipPayrollRequest'
      responses:
        "202":
          description: Accepted
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/PayrollsSkipPayrollResponse'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Skip a payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-payrolls-skip
      x-content-type: application/json
      x-accepts: application/json
  /v1/payrolls/{payroll_uuid}/gross_up:
    post:
      description: |-
        Calculates gross up earnings for an employee's payroll, given net earnings. This endpoint is only applicable to off-cycle unprocessed payrolls.

        The gross up amount must then be mapped to the corresponding fixed compensation earning type to get the correct payroll amount. For example, for bonus off-cycles, the gross up amount should be set with the Bonus earning type in the payroll `fixed_compensations` field.

        scope: `payrolls:run`
      operationId: Payrolls_calculateGrossUp
      parameters:
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  employee_uuid: be48c41e-142d-4116-9430-5aba2313fac7
                  net_pay: "1000.00"
            schema:
              $ref: '#/components/schemas/PayrollsCalculateGrossUpRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    net_pay: "1183.25"
              schema:
                $ref: '#/components/schemas/Gross-Up-Pay'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/PayrollsCalculateGrossUpResponse'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Calculate gross up
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_uuid-gross_up
      x-content-type: application/json
      x-accepts: application/json
  /v1/contractor_payments/{contractor_payment_uuid}/receipt:
    get:
      description: |-
        Returns a contractor payment receipt.

        Notes:
        * Receipts are only available for direct deposit payments and are only available once those payments have been funded.
        * Payroll Receipt requests for payrolls which do not have receipts available (e.g. payment by check) will return a 404 status.
        * Hour and dollar amounts are returned as string representations of numeric decimals.
        * Dollar amounts are represented to the cent.
        * If no data has yet be inserted for a given field, it defaults to “0.00” (for fixed amounts).

        scope: `payrolls:read`
      operationId: ContractorPayments_getSingleReceipt
      parameters:
      - description: The UUID of the contractor payment
        explode: false
        in: path
        name: contractor_payment_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    receipt_id: 7757500935137343
                    contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                    name_of_recipient: Patricia Hamill
                    totals:
                      company_debit: "748.34"
                    contractor_payments:
                    - contractor_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                      contractor_first_name: Patricia
                      contractor_last_name: Hamill
                      contractor_business_name: ""
                      contractor_type: Individual
                      payment_method: Direct Deposit
                      wage: "448.34"
                      bonus: "248.00"
                      reimbursement: "100.00"
                    licensee:
                      name: "Gusto, Zenpayroll Inc."
                      address: 525 20th St
                      city: San Francisco
                      state: CA
                      postal_code: "94107"
                      phone_number: "4157778888"
                    company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                    name_of_sender: Torp and Sons and Sons
                    debit_date: 2022-06-02
                    license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter.\
                      \ For more about Gusto’s licenses and your state-specific rights\
                      \ to request information, submit complaints, dispute errors,\
                      \ or cancel transactions, visit our license page."
                    license_uri: https://gusto.com/about/licenses
                    right_to_refund: https://gusto.com/about/licenses
                    liability_of_licensee: https://gusto.com/about/licenses
              schema:
                $ref: '#/components/schemas/Contractor-Payment-Receipt'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a single contractor payment receipt
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-contractor_payments-contractor_payment_uuid-receipt
      x-accepts: application/json
  /v1/contractor_payments/{contractor_payment_uuid}/fund:
    put:
      description: |-
        > 🚧 Demo action
        >
        > This action is only available in the Demo environment

        Simulate funding a contractor payment. Funding only occurs automatically in the production environment when bank transactions are generated. Use this action in the demo environment to transition a contractor payment's `status` from `Unfunded` to `Funded`. A `Funded` status is required for generating a contractor payment receipt.

        scope: `payrolls:run`
      operationId: ContractorPayments_fundContractorPayment
      parameters:
      - description: The UUID of the contractor payment
        explode: false
        in: path
        name: contractor_payment_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: "20.0"
                    date: 2020-10-19
                    hours: "40.0"
                    payment_method: Direct Deposit
                    reimbursement: "100.0"
                    status: Unfunded
                    hourly_rate: "18.0"
                    may_cancel: true
                    wage: "0.0"
                    wage_type: Hourly
                    wage_total: "740.00"
              schema:
                $ref: '#/components/schemas/Contractor-Payment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: "Fund a contractor payment [DEMO]"
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-contractor_payments-contractor_payment_uuid-fund
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls/{payroll_id}/calculate:
    put:
      description: |-
        Performs calculations for taxes, benefits, and deductions for an unprocessed payroll. The calculated payroll details provide a preview of the actual values that will be used when the payroll is run.

        This calculation is asynchronous and a successful request responds with a 202 HTTP status. To view the details of the calculated payroll, use the GET /v1/companies/{company_id}/payrolls/{payroll_id} endpoint with *include=taxes,benefits,deductions* params.
        In v2023-04-01, *show_calculation=true* is no longer required.

        If the company is blocked from running payroll due to issues like incomplete setup, missing information or other compliance issues, the response will be 422 Unprocessable Entity with a categorization of the blockers as described in the error responses.
      operationId: Payrolls_calculateGrossUp
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/PayrollsCalculateGrossUp422Response'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Calculate a payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-calculate
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls/{payroll_id}/submit:
    put:
      description: |-
        Submits an unprocessed payroll to be calculated and run. This submission is asynchronous and a successful request responds with a 202 HTTP status. Upon success, transitions the payroll to the `processed` state.

        If the company is blocked from running payroll due to issues like incomplete setup, missing information or other compliance issues, the response will be 422 Unprocessable Entity with a categorization of the blockers as described in the error responses.

        scope: `payrolls:run`
      operationId: Payrolls_submitPayroll
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/PayrollsSubmitPayrollResponse'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Submit payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-submit
      x-accepts: application/json
  /v1/companies/{company_id}/payrolls/{payroll_id}/cancel:
    put:
      description: |
        Transitions a `processed` payroll back to the `unprocessed` state. A payroll can be canceled if it meets both criteria:
        - `processed` is true
        - Current time is earlier than 3:30pm PT on the payroll_deadline

        scope: `payrolls:run`
      operationId: Payrolls_cancelPayrollTransition
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Unprocessed:
                  value:
                    payroll_deadline: 2021-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: null
                    calculated_at: null
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2021-02-22
                      initial_check_date: 2021-02-22
                      expected_debit_time: 2021-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2021-02-18T22:00:00Z
                Processed:
                  value:
                    payroll_deadline: 2021-02-18T22:00:00Z
                    check_date: 2021-02-22
                    off_cycle: false
                    external: false
                    processed: true
                    processed_date: 2021-02-18
                    calculated_at: 2021-02-18T12:00:00Z
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: 2022-02-01T22:00:00Z
                    pay_period:
                      start_date: 2021-02-01
                      end_date: 2021-02-15
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    totals:
                      company_debit: "121747.71"
                      net_pay_debit: "79283.80"
                      tax_debit: "42463.91"
                      reimbursement_debit: "0.00"
                      child_support_debit: "0.00"
                      reimbursements: "0.00"
                      net_pay: "81752.94"
                      gross_pay: "130635.89"
                      employee_bonuses: "0.00"
                      employee_commissions: "18536.37"
                      employee_cash_tips: "0.00"
                      employee_paycheck_tips: "0.00"
                      additional_earnings: "0.00"
                      owners_draw: "0.00"
                      check_amount: "2469.14"
                      employer_taxes: "6917.19"
                      employee_taxes: "35546.72"
                      benefits: "0.00"
                      employee_benefits_deductions: "13336.23"
                      deferred_payroll_taxes: "0.00"
                    company_taxes:
                    - name: MO Compensation Deduction
                      amount: "-0.92"
                      employer: true
                    - name: NY MCTMT
                      amount: "5.00"
                      employer: true
                    payroll_status_meta:
                      cancellable: false
                      expected_check_date: 2021-02-22
                      initial_check_date: 2021-02-22
                      expected_debit_time: 2021-02-18T22:00:00Z
                      payroll_late: false
                      initial_debit_cutoff_time: 2021-02-18T22:00:00Z
                    employee_compensations:
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "15.000"
                        job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                        compensation_multiplier: 1
                        flsa_status: Nonexempt
                      - name: Overtime
                        hours: "5.000"
                        job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                        compensation_multiplier: 1.5
                        flsa_status: Nonexempt
                      - name: Double overtime
                        hours: "0.000"
                        job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                        compensation_multiplier: 2
                        flsa_status: Nonexempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Commission Only Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      gross_pay: "2791.25"
                      net_pay: "1953.31"
                      check_amount: "1953.31"
                      payment_method: Direct Deposit
                      fixed_compensations:
                      - name: Bonus
                        amount: "100.00"
                        job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                      - name: Reimbursement
                        amount: "100.00"
                        job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                      - name: Regular Hours
                        hours: "40.000"
                        job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                        compensation_multiplier: 1
                        flsa_status: Exempt
                      paid_time_off:
                      - name: Vacation Hours
                        hours: "20.000"
                      - name: Sick Hours
                        hours: "0.000"
                      - name: Holiday Hours
                        hours: "0.000"
                      benefits:
                      - name: Group Term Life
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: true
                      - name: 401K
                        employee_deduction: "100.00"
                        company_contribution: "50.00"
                        imputed: false
                      deductions:
                      - name: Child Support
                        amount: "80.00"
                      taxes:
                      - name: Federal Income Tax
                        employer: false
                        amount: "646.69"
                      - name: Social Security
                        employer: true
                        amount: "191.25"
              schema:
                $ref: '#/components/schemas/Payroll'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Cancel a payroll
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-cancel
      x-accepts: application/json
  /v1/companies/{company_id}/contractor_payments:
    get:
      description: |-
        Returns an object containing individual contractor payments, within a given time period, including totals.

        scope: `payrolls:read`
      operationId: ContractorPayments_getWithinTimePeriodTotals
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The time period for which to retrieve contractor payments
        explode: true
        in: query
        name: start_date
        required: true
        schema:
          example: 2020-01-01
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-1-schema
        style: form
      - description: The time period for which to retrieve contractor payments
        explode: true
        in: query
        name: end_date
        required: true
        schema:
          example: 2020-12-31
          type: string
          x-konfig-original-example: 2020-12-31
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-2-schema
        style: form
      - description: "The UUID of the contractor. When specified, will load all payments\
          \ for that contractor."
        explode: true
        in: query
        name: contractor_uuid
        required: false
        schema:
          type: string
        style: form
      - description: Display contractor payments results group by check date if set
          to true.
        explode: true
        in: query
        name: group_by_date
        required: false
        schema:
          type: boolean
        style: form
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    total:
                      reimbursements: "110.0"
                      wages: "1840.0"
                    contractor_payments:
                    - contractor_id: 1234
                      reimbursement_total: "110.0"
                      wage_total: "1840.0"
                      payments:
                      - id: 04552eb9-7829-4b18-ae96-6983552948df
                        bonus: "20.0"
                        date: 2020-10-19
                        hours: "40.0"
                        payment_method: Direct Deposit
                        reimbursement: "100.0"
                        hourly_rate: "18.0"
                        may_cancel: true
                        wage: "0.0"
                        wage_type: Hourly
                        wage_total: "740.00"
                        contractor_id: 1234
                        contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                      - id: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
                        bonus: "100.0"
                        date: 2020-10-19
                        hours: "0.00"
                        payment_method: Direct Deposit
                        reimbursement: "10.0"
                        hourly_rate: "0.0"
                        may_cancel: true
                        wage: "1000.0"
                        wage_type: Fixed
                        wage_total: "1100.0"
                        contractor_id: 1234
                        contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
              schema:
                $ref: '#/components/schemas/ContractorPaymentsGetWithinTimePeriodTotalsResponse'
          description: A JSON object containing contractor payments information
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get contractor payments for a company
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractor_payments
      x-accepts: application/json
    post:
      description: |-
        Pay a contractor. Information needed depends on the contractor's wage type (hourly vs fixed)

        scope: `payrolls:run`
      operationId: ContractorPayments_createPayment
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorPaymentsCreatePaymentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: "20.0"
                    date: 2020-10-19
                    hours: "40.0"
                    payment_method: Direct Deposit
                    reimbursement: "100.0"
                    status: Unfunded
                    hourly_rate: "18.0"
                    may_cancel: true
                    wage: "0.0"
                    wage_type: Hourly
                    wage_total: "740.00"
              schema:
                $ref: '#/components/schemas/Contractor-Payment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a contractor payment
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-contractor_payments
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/contractor_payments/{contractor_payment_id}:
    delete:
      description: |-
        Cancels and deletes a contractor payment. If the contractor payment has already started processing, the payment cannot be cancelled.

        scope: `payrolls:run`
      operationId: ContractorPayments_cancelPayment
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the contractor payment
        explode: false
        in: path
        name: contractor_payment_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Cancel a contractor payment
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      x-internal: false
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-contractor_payments-contractor_payment_id
      x-accepts: application/json
    get:
      description: |-
        Returns a single contractor payments

        scope: `payrolls:read`
      operationId: ContractorPayments_getSinglePayment
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the contractor payment
        explode: false
        in: path
        name: contractor_payment_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: "20.0"
                    date: 2020-10-19
                    hours: "40.0"
                    payment_method: Direct Deposit
                    reimbursement: "100.0"
                    status: Unfunded
                    hourly_rate: "18.0"
                    may_cancel: true
                    wage: "0.0"
                    wage_type: Hourly
                    wage_total: "740.00"
              schema:
                $ref: '#/components/schemas/Contractor-Payment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a single contractor payment
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractor_payments-contractor_payment_id
      x-accepts: application/json
  /v1/companies/{company_id}/forms:
    get:
      description: |-
        Get a list of all company's forms

        scope: `company_forms:read`
      operationId: CompanyForms_getAllForms
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/CompanyFormsGetAllFormsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all company forms
      tags:
      - Company Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-forms
      x-accepts: application/json
  /v1/forms/{form_id}:
    get:
      description: |-
        Get a company form

        scope: `company_forms:read`
      operationId: CompanyForms_getFormById
      parameters:
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/Form'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company form
      tags:
      - Company Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-forms-form_id
      x-accepts: application/json
  /v1/forms/{form_id}/pdf:
    get:
      description: |-
        Get the link to the form PDF

        scope: `company_forms:read`
      operationId: CompanyForms_getPdfLink
      parameters:
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    document_url: https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020
              schema:
                $ref: '#/components/schemas/Form-Pdf'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company form pdf
      tags:
      - Company Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-forms-form_id-pdf
      x-accepts: application/json
  /v1/forms/{form_id}/sign:
    put:
      description: |-
        Sign a company form

        scope: `company_forms:sign`
      operationId: CompanyForms_signForm
      parameters:
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  signature_text: Jane Smith
                  agree: true
                  signed_by_ip_address: 192.168.0.1
            schema:
              $ref: '#/components/schemas/CompanyFormsSignFormRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/Form'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Sign a company form
      tags:
      - Company Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-forms-form_id-sign
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/forms:
    get:
      description: |-
        Get a list of all employee's forms

        scope: `employee_forms:read`
      operationId: EmployeeForms_getAllEmployeeForms
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/CompanyFormsGetAllFormsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all employee forms
      tags:
      - Employee Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms
      x-accepts: application/json
  /v1/employees/{employee_id}/forms/{form_id}:
    get:
      description: |-
        Get an employee form

        scope: `employee_forms:read`
      operationId: EmployeeForms_getFormById
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/Form'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee form
      tags:
      - Employee Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms-form_id
      x-accepts: application/json
  /v1/employees/{employee_id}/forms/{form_id}/pdf:
    get:
      description: |-
        Get the link to the form PDF

        scope: `employee_forms:read`
      operationId: EmployeeForms_getPdfLink
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    document_url: https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020
              schema:
                $ref: '#/components/schemas/Form-Pdf'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get the employee form pdf
      tags:
      - Employee Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms-form_id-pdf
      x-accepts: application/json
  /v1/employees/{employee_id}/forms/{form_id}/sign:
    put:
      description: |-
        Sign a company form

        scope: `employee_forms:sign`
      operationId: EmployeeForms_signForm
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the form
        explode: false
        in: path
        name: form_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  signature_text: Jane Smith
                  agree: true
                  signed_by_ip_address: 192.168.0.1
            schema:
              $ref: '#/components/schemas/EmployeeFormsSignFormRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: Direct Deposit Authorization
                    description: We need you to sign paperwork to authorize us to
                      debit and credit your bank account and file and pay your taxes.
                    uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    draft: false
                    requires_signing: true
              schema:
                $ref: '#/components/schemas/Form'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Sign an employee form
      tags:
      - Employee Forms
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-forms-form_id-sign
      x-content-type: application/json
      x-accepts: application/json
  /v1/payrolls/{payroll_id}/employees/{employee_id}/pay_stub:
    get:
      description: |-
        Get an employee's pay stub for the specified payroll. By default, an application/pdf response will be returned. No other content types are currently supported, but may be supported in the future.

        scope: `pay_stubs:read`
      operationId: Payrolls_getEmployeePayStub
      parameters:
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee pay stub (pdf)
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-payrolls-payroll_id-employees-employee_id-pay_stub
      x-accepts: application/json
  /v1/employees/{employee_id}/pay_stubs:
    get:
      description: |-
        Get an employee's pay stubs

        scope: `pay_stubs:read`
      operationId: Payrolls_getEmployeePayStubs
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: OK
                  value:
                  - uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    check_date: 2023-11-24
                    gross_pay: 880
                    net_pay: 541.02
                    payroll_uuid: a039cafb-745e-4af4-bf1e-935a86fc18e0
                    check_amount: 500.2
              schema:
                $ref: '#/components/schemas/PayrollsGetEmployeePayStubsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee's pay stubs
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-pay_stubs
      x-accepts: application/json
  /v1/generated_documents/{document_type}/{request_uuid}:
    get:
      description: |-
        Get a generated document given the request_uuid. The response will include the generation request's status and, if complete, the relevant document urls.

        scope: `generated_documents:read`
      operationId: GeneratedDocuments_getDocumentByRequestUuid
      parameters:
      - description: the type of document being generated
        explode: false
        in: path
        name: document_type
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the Generated Document Request
        explode: false
        in: path
        name: request_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    document_urls:
                    - https://document.url.com
                    request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                    status: succeeded
              schema:
                $ref: '#/components/schemas/Generated-Document'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a generated document
      tags:
      - Generated Documents
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-generated_documents-document_type-request_uuid
      x-accepts: application/json
  /v1/payrolls/{payroll_id}/generated_documents/printable_payroll_checks:
    post:
      description: |-
        This endpoint initiates the generation of employee checks for the payroll specified by payroll_id. A generation status and corresponding generated document request_uuid will be returned. Use the generated document GET endpoint with document_type: `printable_payroll_checks` and request_uuid to poll the check generation process and retrieve the generated check URL upon completion.

        scope: `generated_documents:write`
      operationId: Payrolls_generatePrintableChecks
      parameters:
      - description: The UUID of the payroll
        explode: false
        in: path
        name: payroll_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollsGeneratePrintableChecksRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
                    printing_format: top
                    starting_check_number: "10"
                    request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                    status: pending
              schema:
                $ref: '#/components/schemas/Payroll-Check'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Generate payroll printable checks (pdf)
      tags:
      - Payrolls
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_id-generated_documents-printable_payroll_checks
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_id}/company_benefits:
    get:
      description: |-
        Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.

        Note that company benefits can be deactivated only when no employees are enrolled.

        Benefits containing PHI are only visible to applications with the `company_benefits:read:phi` scope.

        scope: `company_benefits:read`
      operationId: CompanyBenefits_getBenefitsForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to return employee enrollment count
        explode: true
        in: query
        name: enrollment_count
        required: false
        schema:
          type: boolean
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  description: OK
                  value:
                  - description: Kaiser Permanente
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    company_uuid: 528cc543-8a41-497e-b479-23a4c5ec77ac
                    benefit_type: 1
                    active: true
                    deletable: true
                    supports_percentage_amounts: true
                    responsible_for_employer_taxes: false
                    responsible_for_employee_w2: false
              schema:
                $ref: '#/components/schemas/CompanyBenefitsGetBenefitsForCompanyResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get benefits for a company
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-company_benefits
      x-accepts: application/json
    post:
      description: |-
        Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.

        Note that company benefits can be deactivated only when no employees are enrolled.

        scope: `company_benefits:write`
      operationId: CompanyBenefits_createBenefit
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBenefitsCreateBenefitRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Kaiser Permanente
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    company_uuid: 881ce3f2-e3e1-49c9-8ad4-0bcf515f5618
                    benefit_type: 1
                    active: true
                    deletable: true
                    supports_percentage_amounts: true
                    responsible_for_employer_taxes: false
                    responsible_for_employee_w2: false
              schema:
                $ref: '#/components/schemas/Company-Benefit'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a company benefit
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-company_benefits
      x-content-type: application/json
      x-accepts: application/json
  /v1/company_benefits/{company_benefit_id}:
    delete:
      description: |-
        The following must be true in order to delete a company benefit
          - There are no employee benefits associated with the company benefit
          - There are no payroll items associated with the company benefit
          - The benefit is not managed by a Partner or by Gusto (type must be 'External')

        scope: `company_benefits:write`
      operationId: CompanyBenefits_deleteBenefit
      parameters:
      - description: The UUID of the company benefit
        explode: false
        in: path
        name: company_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                      base:
                      - type: error type
                        message: This is an error message
                        full_message: This is a more descriptive error message
              schema:
                $ref: '#/components/schemas/CompanyBenefitsDeleteBenefitResponse'
          description: Unprocessable Entity
          x-do-not-generate: true
      summary: Delete a company benefit
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-company_benefits-company_benefit_id
      x-accepts: application/json
    get:
      description: |-
        Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.

        Note that company benefits can be deactivated only when no employees are enrolled.

        When with_employee_benefits parameter with true value is passed, employee_benefits:read scope is required to return employee_benefits.

        scope: `company_benefits:read`
      operationId: CompanyBenefits_getBenefitById
      parameters:
      - description: The UUID of the company benefit
        explode: false
        in: path
        name: company_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to return employee benefits associated with the benefit
        explode: true
        in: query
        name: with_employee_benefits
        required: false
        schema:
          type: boolean
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Kaiser Permanente
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    active: true
                    deletable: true
                    supports_percentage_amounts: true
                    responsible_for_employer_taxes: false
                    responsible_for_employee_w2: false
                    employee_benefits:
                    - employee_uuid: ae44a0b2-3c89-41e1-91c8-5f8224a779ca
                      company_benefit_uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                      active: true
                      deduct_as_percentage: false
                      employee_deduction: 3
                      company_contribution: 0
                      uuid: 9988f241-9aee-4383-bfca-eac79cf58135
                      contribution:
                        type: amount
                        value: 0
              schema:
                $ref: '#/components/schemas/Company-Benefit-With-Employee-Benefits'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company benefit
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-company_benefits-company_benefit_id
      x-accepts: application/json
    put:
      description: |-
        Company benefits represent the benefits that a company is offering to employees. This ties together a particular supported benefit with the company-specific information for the offering of that benefit.

        Note that company benefits can be deactivated only when no employees are enrolled.

        scope: `company_benefits:write`
      operationId: CompanyBenefits_updateBenefit
      parameters:
      - description: The UUID of the company benefit
        explode: false
        in: path
        name: company_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  active: false
            schema:
              $ref: '#/components/schemas/CompanyBenefitsUpdateBenefitRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Kaiser Permanente
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    company_uuid: 881ce3f2-e3e1-49c9-8ad4-0bcf515f5618
                    benefit_type: 1
                    active: true
                    deletable: true
                    supports_percentage_amounts: true
                    responsible_for_employer_taxes: false
                    responsible_for_employee_w2: false
              schema:
                $ref: '#/components/schemas/Company-Benefit'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a company benefit
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-company_benefits-company_benefit_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/benefits:
    get:
      description: |-
        Returns all benefits supported by Gusto.

        The benefit object in Gusto contains high level information about a particular benefit type and its tax considerations. When companies choose to offer a benefit, they are creating a Company Benefit object associated with a particular benefit.

        scope: `benefits:read`
      operationId: CompanyBenefits_listSupportedBenefits
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Supported Benefits:
                  value:
                  - description: Deductions and contributions for Medical Insurance
                    benefit_type: 1
                    name: Medical Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: Deductions and contributions for Dental Insurance
                    benefit_type: 2
                    name: Dental Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: Deductions and contributions for Vision Insurance
                    benefit_type: 3
                    name: Vision Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: Health Savings Accounts (HSA) allow employees to
                      be reimbursed for qualified medical expenses. Contributions
                      are pre-tax and lower the total amount of tax paid by employees
                      and the employer. Employers may also make tax-free contributions
                      to employees' HSA. Remaining balances are carried over in next
                      year.
                    benefit_type: 6
                    name: Health Savings Account
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - description: Flexible Spending Accounts (FSA) allow employees
                      to be reimbursed for qualified medical expenses. Contributions
                      are pre-tax and lower the total amount of tax paid by employees
                      and the employer. Employers may also make tax-free contributions
                      to employees' FSA. Remaining balances are not carried over in
                      next year.
                    benefit_type: 7
                    name: Health FSA
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - description: Dependent Care FSA reimburses employees for expenses
                      to care for dependents while the employee is at work (e.g. Daycares).
                      Contributions are pre-tax and lower the total amount of tax
                      paid by employees and the employer. Employers may also make
                      tax-free contributions to employee FSA. Remaining balances are
                      not carried over to the next year. Single parents or Married
                      couples filing a joint return can elect up to $5000 per year.
                      Married couples filing separate returns are limited to $2500
                      elections each.
                    benefit_type: 11
                    name: Dependent Care FSA
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - description: The SIMPLE IRA is a tax-deferred retirement savings
                      plan for employees. It is often used by small businesses as
                      an alternative to 401(k) due to its relatively low operating
                      cost. Employers are required to contribute a specific percentage
                      to an employee's SIMPLE IRA.
                    benefit_type: 8
                    name: SIMPLE IRA
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "Roth 401(k) is an after-tax savings plan for employees.\
                      \ The standard maximum is $18,000, or $24,000 for employees\
                      \ over 50 years old."
                    benefit_type: 105
                    name: Roth 401(k)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "Roth 403(b) is an after-tax savings plan for certain\
                      \ clerics, employees of public schools, and employees of other\
                      \ types of tax-exempt organizations. Contributions made by employees\
                      \ are taxable for federal and state withholding. Often, employers\
                      \ contribute additional pre-tax dollars to the employee’s Roth\
                      \ account to encourage saving for retirement."
                    benefit_type: 110
                    name: Roth 403(b)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "401(k) is tax-deferred retirement savings plan for\
                      \ employees. The standard maximum is $18,000, or $24,000 for\
                      \ employees over 50 years old."
                    benefit_type: 5
                    name: 401(k)
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "403(b) is tax-deferred retirement savings plan for\
                      \ certain clerics, employees of public schools, and employees\
                      \ of other types of tax-exempt organizations."
                    benefit_type: 9
                    name: 403(b)
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "A SEP-IRA is a pre-tax retirement savings plan where\
                      \ only the employer contributes. It is often used by small businesses\
                      \ as an alternative to 401(k) due to its relatively low operating\
                      \ cost. Employers are required to contribute the same percentage\
                      \ to all enrolled employees, with a maximum contribution of\
                      \ 25% of the employee’s compensation."
                    benefit_type: 108
                    name: SEP-IRA
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "A SARSEP is a pre-tax retirement savings plan used\
                      \ by small businesses as an alternative to 401(k) due to its\
                      \ relatively low operating cost. While new SARSEP plans are\
                      \ not available, there are still some companies that are grandfathered\
                      \ into the plan. Employers are required to contribute the same\
                      \ percentage to all enrolled employees, with a maximum contribution\
                      \ of 25% of the employee’s compensation."
                    benefit_type: 109
                    name: SARSEP
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - description: "Group-Term Life Insurance for coverage in excess\
                      \ of $50,000 per employee is a taxable fringe benefit. See IRS\
                      \ Publication 15-B to determine the dollar value of the excess\
                      \ coverage."
                    benefit_type: 107
                    name: Group-Term Life Insurance
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Tax-free commuter benefits for transit, vanpooling,\
                      \ bicycling, and work-related parking costs. The annual maximum\
                      \ contribution for this pre-tax benefit is in the IRS publication\
                      \ 15-B."
                    benefit_type: 10
                    name: Commuter Benefits (pre-tax)
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: "When an employee uses a company-owned car for personal\
                      \ matters, it is considered taxable benefit provided in-kind."
                    benefit_type: 106
                    name: Personal Use of Company Car
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: 529 College Savings is an after-tax savings plan
                      for employees designed to encourage saving for future college
                      costs. This benefit should be reported as a taxable benefit
                      and will therefore be taxed.
                    benefit_type: 111
                    name: 529 College Savings
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - description: Student Loan Repayment is an after-tax savings plan
                      for employees to pay towards their outstanding student loans.
                      An employee can choose to set aside after-tax dollars towards
                      this benefit. These benefits should be reported as a taxable
                      benefit and will therefore be taxed.
                    benefit_type: 112
                    name: Student Loan Repayment
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 998
                    name: Short Term Disability (post-tax)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 999
                    name: Long Term Disability (post-tax)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 996
                    name: Short Term Disability (pre-tax)
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 997
                    name: Long Term Disability (pre-tax)
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 991
                    name: Voluntary Short Term Disability (post-tax)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 992
                    name: Voluntary Long Term Disability (post-tax)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Third Party Disability or Third Party Leave are\
                      \ policies offered by employers that pay an employee for a specific\
                      \ life event (maternity leave, injury). All payments made to\
                      \ employees come from a third-party, such as an insurer. For\
                      \ more information on the taxation of these plans, please refer\
                      \ to publication 15-A for more details."
                    benefit_type: 993
                    name: Voluntary Life (post-tax)
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - description: "Tax-free commuter benefits allow employees to reduce\
                      \ their monthly commuting expenses for transit, carpooling,\
                      \ bicycling, and work-related parking costs. Please note that\
                      \ there is an annual maximum for this pre-tax benefit. The maximum\
                      \ dollar amount is found in IRS Publication 15-B."
                    benefit_type: 113
                    name: Commuter Parking
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: "Tax-free commuter benefits allow employees to reduce\
                      \ their monthly commuting expenses for transit, carpooling,\
                      \ bicycling, and work-related parking costs. Please note that\
                      \ there is an annual maximum for this pre-tax benefit. The maximum\
                      \ dollar amount is found in IRS Publication 15-B."
                    benefit_type: 114
                    name: Commuter Transit
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: Other taxable benefit
                    benefit_type: 100
                    name: Other (taxable)
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - description: "Employer-sponsored benefits like this are called\
                      \ fringe benefits, and they don’t get special tax treatment—\
                      they’ll be reported as taxable wages on your employees’ paystubs."
                    benefit_type: 201
                    name: Cell Phone (taxable)
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: "Employer-sponsored benefits like this are called\
                      \ fringe benefits, and they don’t get special tax treatment—\
                      they’ll be reported as taxable wages on your employees’ paystubs."
                    benefit_type: 202
                    name: Gym & Fitness (taxable)
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: "Employer-sponsored benefits like this are called\
                      \ fringe benefits, and they don’t get special tax treatment—\
                      they’ll be reported as taxable wages on your employees’ paystubs."
                    benefit_type: 203
                    name: Housing (taxable)
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - description: "Employer-sponsored benefits like this are called\
                      \ fringe benefits, and they don’t get special tax treatment—\
                      they’ll be reported as taxable wages on your employees’ paystubs."
                    benefit_type: 204
                    name: Wellness (taxable)
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
              schema:
                $ref: '#/components/schemas/CompanyBenefitsListSupportedBenefitsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all benefits supported by Gusto
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-benefits
      x-accepts: application/json
  /v1/benefits/{benefit_id}:
    get:
      description: |-
        Returns a benefit supported by Gusto.

        The benefit object in Gusto contains high level information about a particular benefit type and its tax considerations. When companies choose to offer a benefit, they are creating a Company Benefit object associated with a particular benefit.

        scope: `benefits:read`
      operationId: CompanyBenefits_getSupportedBenefitById
      parameters:
      - description: The benefit type in Gusto.
        explode: false
        in: path
        name: benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Deductions and contributions for Medical Insurance
                    benefit_type: 1
                    name: Medical Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
              schema:
                $ref: '#/components/schemas/Supported-Benefit'
          description: Supported benefit response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a supported benefit by ID
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-benefits-benefit_id
      x-accepts: application/json
  /v1/company_benefits/{company_benefit_id}/summary:
    get:
      description: |-
        Returns summary benefit data for the requested company benefit id.

        Benefits containing PHI are only visible to applications with the `company_benefits:read:phi` scope.

        scope: `company_benefits:read`
      operationId: CompanyBenefits_getBenefitSummaryById
      parameters:
      - description: The UUID of the company benefit
        explode: false
        in: path
        name: company_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: The start date for which to retrieve company benefit summary
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          example: 2022-01-01
          type: string
          x-konfig-original-example: 2022-01-01
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-1-schema
        style: form
      - description: The end date for which to retrieve company benefit summary
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          example: 2022-12-31
          type: string
          x-konfig-original-example: 2022-12-31
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-2-schema
        style: form
      - description: Display employee payroll item summary
        explode: true
        in: query
        name: detailed
        required: false
        schema:
          type: boolean
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Simple IRA
                    start_date: 2022-01-01
                    end_date: 2022-12-31
                    company_benefit_deduction: 60
                    company_benefit_contribution: 30
                    employees:
                    - uuid: 54b7114f-f5e2-4f4b-911b-5cd5ad9032b0
                      company_benefit_deduction: 60
                      company_benefit_contribution: 30
                      benefit_deduction: 660
                      benefit_contribution: 330
                      gross_pay: 18000
                      payroll_benefits:
                      - payroll_uuid: 8cc3471b-9da5-47df-88ea-f238c7cb968b
                        payroll_type: Regular
                        check_date: 2022-03-01
                        gross_pay: 3000
                        company_benefit_deduction: 10
                        company_benefit_contribution: 5
                        pay_period:
                          start_date: 2022-02-01
                          end_date: 2022-02-28
                      - payroll_uuid: d9d92786-722b-4bf7-bb32-79140418d349
                        payroll_type: Bonus
                        check_date: 2022-12-31
                        gross_pay: 3000
                        company_benefit_deduction: 20
                        company_benefit_contribution: 10
                        pay_period:
                          start_date: nil
                          end_date: nil
              schema:
                $ref: '#/components/schemas/Benefit-Summary'
          description: Benefit summary response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get company benefit summary by company benefit id.
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-company_benefits-company_benefit_id-summary
      x-accepts: application/json
  /v1/benefits/{benefit_id}/requirements:
    get:
      description: |-
        Returns field requirements for the requested benefit type.

        scope: `benefits:read`
      operationId: CompanyBenefits_getBenefitFieldsRequirementsById
      parameters:
      - description: The benefit type in Gusto.
        explode: false
        in: path
        name: benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    employee_deduction:
                      required: true
                      editable: true
                      default_value: null
                      choices: null
                    contribution:
                      required: true
                      editable: true
                      default_value:
                        type: percentage
                        value: 2
                      choices:
                      - percentage
                    deduct_as_percentage:
                      required: true
                      editable: true
                      default_value: null
                      choices: null
                    catch_up:
                      required: true
                      editable: true
                      default_value: null
                      choices: null
                    limit_option:
                      required: false
                      editable: false
                      default_value: null
                      choices: null
                    company_contribution_annual_maximum:
                      required: false
                      editable: false
                      default_value: null
                      choices: null
                    coverage_salary_multiplier:
                      required: false
                      editable: false
                      default_value: null
                      choices: null
                    coverage_amount:
                      required: false
                      editable: false
                      default_value: null
                      choices: null
              schema:
                $ref: '#/components/schemas/Benefit-Type-Requirements'
          description: Benefit type requirements response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get benefit fields requirements by ID
      tags:
      - Company Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-benefits-benefit_id-requirements
      x-accepts: application/json
  /v1/employees/{employee_id}/employee_benefits:
    get:
      description: |-
        Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.

        Returns an array of all employee benefits for this employee

        Benefits containing PHI are only visible to applications with the `employee_benefits:read:phi` scope.

        scope: `employee_benefits:read`
      operationId: EmployeeBenefits_getAllForEmployee
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - version: 09j3d29jqdpj92109j9j2d90dq
                    employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "100.00"
                    company_contribution: "100.00"
                    employee_deduction_annual_maximum: "200.00"
                    company_contribution_annual_maximum: "200.00"
                    limit_option: null
                    deduct_as_percentage: false
                    contribute_as_percentage: false
                    catch_up: false
                    coverage_amount: null
                    deduction_reduces_taxable_income: null
                    coverage_salary_multiplier: "0.00"
              schema:
                $ref: '#/components/schemas/EmployeeBenefitsGetAllForEmployeeResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all benefits for an employee
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-employee_benefits
      x-accepts: application/json
    post:
      description: |-
        Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.

        scope: `employee_benefits:write`
      operationId: EmployeeBenefits_createBenefitRecord
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  company_benefit_uuid: f68abb42-431e-4392-bc3f-2795627e00f3
                  active: true
                  employee_deduction: "100.00"
                  contribution:
                    type: amount
                    value: "100.00"
            schema:
              $ref: '#/components/schemas/EmployeeBenefitsCreateBenefitRecordRequest'
        description: ""
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 09j3d29jqdpj92109j9j2d90dq
                    employee_uuid: 908123091820398
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "100.00"
                    employee_deduction_annual_maximum: "200.00"
                    company_contribution_annual_maximum: "200.00"
                    limit_option: null
                    deduct_as_percentage: false
                    catch_up: false
                    coverage_amount: null
                    deduction_reduces_taxable_income: null
                    coverage_salary_multiplier: "0.00"
                    contribution:
                      type: amount
                      value: "100.00"
                Tiered example:
                  value:
                    version: string
                    employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "0.00"
                    deduct_as_percentage: false
                    employee_deduction_annual_maximum: string
                    contribution:
                      type: tiered
                      value:
                        tiers:
                        - rate: "5.0"
                          threshold: "2.0"
                          threshold_delta: "2.0"
                        - rate: "3.0"
                          threshold: "5.0"
                          threshold_delta: "3.0"
                    elective: false
                    company_contribution_annual_maximum: string
                    limit_option: string
                    catch_up: false
                    coverage_amount: string
                    deduction_reduces_taxable_income: unset
                    coverage_salary_multiplier: "0.00"
              schema:
                $ref: '#/components/schemas/Employee-Benefit'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create an employee benefit
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-employee_benefits
      x-content-type: application/json
      x-accepts: application/json
  /v1/employee_benefits/{employee_benefit_id}:
    delete:
      description: |-
        Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.

        scope: `employee_benefits:write`
      operationId: EmployeeBenefits_deleteById
      parameters:
      - description: The UUID of the employee benefit.
        explode: false
        in: path
        name: employee_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Delete an employee benefit
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-employee_benefits-employee_benefit_id
      x-accepts: application/json
    get:
      description: |-
        Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.

        Benefits containing PHI are only visible to applications with the `employee_benefits:read:phi` scope.

        scope: `employee_benefits:read`
      operationId: EmployeeBenefits_getEmployeeBenefitById
      parameters:
      - description: The UUID of the employee benefit.
        explode: false
        in: path
        name: employee_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 09j3d29jqdpj92109j9j2d90dq
                    employee_uuid: 908123091820398
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "100.00"
                    employee_deduction_annual_maximum: "200.00"
                    company_contribution_annual_maximum: "200.00"
                    limit_option: null
                    deduct_as_percentage: false
                    catch_up: false
                    coverage_amount: null
                    deduction_reduces_taxable_income: null
                    coverage_salary_multiplier: "0.00"
                    contribution:
                      type: amount
                      value: "100.00"
                Tiered example:
                  value:
                    version: string
                    employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "0.00"
                    deduct_as_percentage: false
                    employee_deduction_annual_maximum: string
                    contribution:
                      type: tiered
                      value:
                        tiers:
                        - rate: "5.0"
                          threshold: "2.0"
                          threshold_delta: "2.0"
                        - rate: "3.0"
                          threshold: "5.0"
                          threshold_delta: "3.0"
                    elective: false
                    company_contribution_annual_maximum: string
                    limit_option: string
                    catch_up: false
                    coverage_amount: string
                    deduction_reduces_taxable_income: unset
                    coverage_salary_multiplier: "0.00"
              schema:
                $ref: '#/components/schemas/Employee-Benefit'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get an employee benefit
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employee_benefits-employee_benefit_id
      x-accepts: application/json
    put:
      description: |-
        Employee benefits represent an employee enrolled in a particular company benefit. It includes information specific to that employee’s enrollment.

        scope: `employee_benefits:write`
      operationId: EmployeeBenefits_updateBenefitRecord
      parameters:
      - description: The UUID of the employee benefit.
        explode: false
        in: path
        name: employee_benefit_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 09j3d29jqdpj92109j9j2d90dq
                  employee_deduction: "250.00"
            schema:
              $ref: '#/components/schemas/EmployeeBenefitsUpdateBenefitRecordRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 09j3d29jqdpj92109j9j2d90dq
                    employee_uuid: 908123091820398
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "100.00"
                    employee_deduction_annual_maximum: "200.00"
                    company_contribution_annual_maximum: "200.00"
                    limit_option: null
                    deduct_as_percentage: false
                    catch_up: false
                    coverage_amount: null
                    deduction_reduces_taxable_income: null
                    coverage_salary_multiplier: "0.00"
                    contribution:
                      type: amount
                      value: "100.00"
                Tiered example:
                  value:
                    version: string
                    employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: "0.00"
                    deduct_as_percentage: false
                    employee_deduction_annual_maximum: string
                    contribution:
                      type: tiered
                      value:
                        tiers:
                        - rate: "5.0"
                          threshold: "2.0"
                          threshold_delta: "2.0"
                        - rate: "3.0"
                          threshold: "5.0"
                          threshold_delta: "3.0"
                    elective: false
                    company_contribution_annual_maximum: string
                    limit_option: string
                    catch_up: false
                    coverage_amount: string
                    deduction_reduces_taxable_income: unset
                    coverage_salary_multiplier: "0.00"
              schema:
                $ref: '#/components/schemas/Employee-Benefit'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update an employee benefit
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-employee_benefits-employee_benefit_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/ytd_benefit_amounts_from_different_company:
    post:
      description: |-
        Year-to-date benefit amounts from a different company represents the amount of money added to an employee's plan during a current year, made outside of the current contribution when they were employed at a different company.

        This endpoint only supports passing outside contributions for 401(k) benefits.

        scope: `employee_benefits:write`
      operationId: EmployeeBenefits_createYtdBenefitAmountsFromDifferentCompany
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/post-employee-ytd-benefit-amounts-from-different-company'
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create year-to-date benefit amounts from a different company
      tags:
      - Employee Benefits
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-ytd_benefit_amounts_from_different_company
      x-content-type: application/json
      x-accepts: application/json
  /v1/employees/{employee_id}/garnishments:
    get:
      description: |-
        Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.

        scope: `garnishments:read`
      operationId: Garnishments_getEmployeeGarnishments
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "The page that is requested. When unspecified, will load all\
          \ objects unless endpoint forces pagination."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Number of objects per page. For majority of endpoints will default
          to 25
        explode: true
        in: query
        name: per
        required: false
        schema:
          type: number
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - description: Child support
                    version: 63152767c822d6b0385509b973c49dda
                    uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
                    employee_uuid: a6b53294-f871-4db2-bbd4-8c3d1fe56440
                    active: true
                    amount: "100.00"
                    court_ordered: true
                    times: null
                    recurring: true
                    annual_maximum: "400.00"
                    pay_period_maximum: null
                    deduct_as_percentage: false
                  - description: Company loan to employee
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                    employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                    active: true
                    amount: "8.00"
                    court_ordered: false
                    times: 5
                    recurring: false
                    annual_maximum: null
                    pay_period_maximum: "100.00"
                    deduct_as_percentage: true
              schema:
                $ref: '#/components/schemas/GarnishmentsGetEmployeeGarnishmentsResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get garnishments for an employee
      tags:
      - Garnishments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-garnishments
      x-accepts: application/json
    post:
      description: |-
        Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.

        scope: `garnishments:write`
      operationId: Garnishments_createGarnishment
      parameters:
      - description: The UUID of the employee
        explode: false
        in: path
        name: employee_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  description: Back taxes
                  amount: "150.00"
                  court_ordered: true
                  recurring: true
                  deduct_as_percentage: false
            schema:
              $ref: '#/components/schemas/GarnishmentsCreateGarnishmentRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Company loan to employee
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                    employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                    active: true
                    amount: "8.00"
                    court_ordered: false
                    times: 5
                    recurring: false
                    annual_maximum: null
                    pay_period_maximum: "100.00"
                    deduct_as_percentage: true
              schema:
                $ref: '#/components/schemas/Garnishment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a garnishment
      tags:
      - Garnishments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-garnishments
      x-content-type: application/json
      x-accepts: application/json
  /v1/garnishments/{garnishment_id}:
    get:
      description: |-
        Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.

        scope: `garnishments:read`
      operationId: Garnishments_getGarnishment
      parameters:
      - description: The UUID of the garnishment
        explode: false
        in: path
        name: garnishment_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Company loan to employee
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                    employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                    active: true
                    amount: "8.00"
                    court_ordered: false
                    times: 5
                    recurring: false
                    annual_maximum: null
                    pay_period_maximum: "100.00"
                    deduct_as_percentage: true
              schema:
                $ref: '#/components/schemas/Garnishment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a garnishment
      tags:
      - Garnishments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-garnishments-garnishment_id
      x-accepts: application/json
    put:
      description: |-
        Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.

        scope: `garnishments:write`
      operationId: Garnishments_updateGarnishment
      parameters:
      - description: The UUID of the garnishment
        explode: false
        in: path
        name: garnishment_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 52b7c567242cb7452e89ba2bc02cb476
                  active: false
            schema:
              $ref: '#/components/schemas/GarnishmentsUpdateGarnishmentRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    description: Company loan to employee
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                    employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                    active: true
                    amount: "8.00"
                    court_ordered: false
                    times: 5
                    recurring: false
                    annual_maximum: null
                    pay_period_maximum: "100.00"
                    deduct_as_percentage: true
              schema:
                $ref: '#/components/schemas/Garnishment'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a garnishment
      tags:
      - Garnishments
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-garnishments-garnishment_id
      x-content-type: application/json
      x-accepts: application/json
  /v1/plaid/processor_token:
    post:
      description: |-
        This endpoint creates a new **verified** bank account by using a plaid processor token to retrieve its information.

        scope: `plaid_processor:write`

        > 📘
        > To create a token please use the [plaid api](https://plaid.com/docs/api/processors/#processortokencreate) and select "gusto" as processor.

        > 🚧 Warning - Company Bank Accounts
        >
        > If a default company bank account exists, it will be disabled and the new bank account will replace it as the company's default funding method.
      operationId: BankAccounts_createFromPlaidToken
      parameters:
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create a company bank account:
                value:
                  owner_type: Company
                  owner_id: ef279fbd-0fc6-4cf1-a977-6939d621c429
                  processor_token: processor-sandbox-0asd1-a92nc
            schema:
              $ref: '#/components/schemas/BankAccountsCreateFromPlaidTokenRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example:
                  value:
                    uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                    company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                    account_type: Checking
                    routing_number: "851070439"
                    hidden_account_number: XXXX4087
                    verification_status: verified
                    verification_type: plaid_external
                    name: Employer Funding Account
              schema:
                $ref: '#/components/schemas/BankAccountsCreateFromPlaidTokenResponse'
          description: A JSON object containing bank information
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a bank account from a plaid processor token
      tags:
      - Bank Accounts
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-plaid-processor_token
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/tax_requirements/{state}:
    get:
      description: |
        Get all tax requirements for a given state.

        ### Metadata Examples

        ```json select
        {
          "type": "select",
          "options": [
            { "label": "Semiweekly",  value: "Semi-weekly" },
            { "label": "Monthly",  value: "Monthly" },
            { "label": "Quarterly",  value: "Quarterly" },
          ]
        }
        ```
        ```json radio
        {
          "type": "radio",
          "options": [
            { "label": "No, we cannot reimburse",  value: false, short_label: "Not Reimbursable" },
            { "label": "Yes, we can reimburse",  value: true, short_label: "Reimbursable" },
          ]
        }
        ```
        ```json account_number
        {
          "type": "account_number",
          "mask": "######-##',
          "prefix": null
        }
        ```
        ```json tax_rate
        {
          "type": "tax_rate",
          "validation": {
            "type": "min_max",
            "min": "0.0004",
            "max": "0.081"
          }
        }
        ```

        scope: `company_tax_requirements:read`
      operationId: TaxRequirements_getStateRequirements
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 2-letter US state abbreviation
        explode: false
        in: path
        name: state
        required: true
        schema:
          type: string
        style: simple
      - description: "When true, return \"new\" requirement sets with valid `effective_from`\
          \ dates that are available to save new effective dated values."
        explode: true
        in: query
        name: scheduling
        required: false
        schema:
          type: boolean
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Tax Requirements for GA:
                  value:
                    company_uuid: 6c14eac3-0da2-474d-bda1-786b3602d381
                    state: GA
                    requirement_sets:
                    - state: GA
                      key: registrations
                      label: Registrations
                      effective_from: null
                      requirements:
                      - description: "If you have run payroll in the past in GA, find\
                          \ your withholding number on notices received from the Georgia\
                          \ Department of Revenue, or call the agency at (877) 423-6711.\
                          \ If you don’t have a number yet, you should <a target='_blank'\
                          \ data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
                          \ the business online</a>. The last two characters of your\
                          \ ID must be upper case letters."
                        key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
                        applicable_if: []
                        label: Withholding Number
                        value: 1233214-AB
                        metadata:
                          type: text
                      - description: "If you have run payroll in the past in GA, find\
                          \ your DOL account number on notices received from the Georgia\
                          \ Department of Labor, or call the agency at (404) 232-3300.\
                          \ If you don’t have an account number yet, please <a target='_blank'\
                          \ data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow\
                          \ the instructions here</a> to register your business with\
                          \ the Georgia Dept. of Labor."
                        key: 6c0911ab-5860-412e-bdef-6437cd881df5
                        applicable_if: []
                        label: DOL Account Number
                        value: 474747-88
                        metadata:
                          type: text
                    - state: GA
                      key: taxrates
                      label: Tax Rates
                      effective_from: 2022-01-01
                      requirements:
                      - description: Haven't received your assigned rate yet? <a target='_blank'
                          data-bypass href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'>Find
                          the new employer rate</a> and enter it here.
                        key: e0ac2284-8d30-4100-ae23-f85f9574868b
                        applicable_if: []
                        label: Total Tax Rate
                        value: "0.05"
                        metadata:
                          type: tax_rate
                          validation:
                            type: min_max
                            min: "0.0004"
                            max: "0.081"
                    - state: GA
                      key: depositschedules
                      label: Deposit Schedules
                      effective_from: 2022-01-01
                      requirements:
                      - description: "Georgia rejects payments made on the wrong schedule.\
                          \ GA employers receive their schedule on a registration\
                          \ verification letter after registering with the Georgia\
                          \ Dept. of Revenue. If you are unsure, call the agency at\
                          \ (877) 423-6711. If you did not register your business\
                          \ yet, please <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'>register\
                          \ the business with the Georgia Dept. of Revenue</a>."
                        key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
                        applicable_if: []
                        label: Deposit Schedule
                        value: Semi-weekly
                        metadata:
                          type: select
                          options:
                          - label: Semiweekly
                            value: Semi-weekly
                          - label: Monthly
                            value: Monthly
                          - label: Quarterly
                            value: Quarterly
              schema:
                $ref: '#/components/schemas/Tax-Requirements-State'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get State Tax Requirements
      tags:
      - Tax Requirements
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-tax_requirements-state
      x-accepts: application/json
    put:
      description: |-
        Update State Tax Requirements

        scope: `company_tax_requirements:write`
      operationId: TaxRequirements_updateStateTaxes
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 2-letter US state abbreviation
        explode: false
        in: path
        name: state
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  requirement_sets:
                  - key: registrations
                    effective_from: null
                    state: GA
                    requirements:
                    - key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
                      value: 1233214-AB
                    - key: 6c0911ab-5860-412e-bdef-6437cd881df5
                      value: 474747-22
                  - key: taxrates
                    effective_from: 2022-01-01
                    state: GA
                    requirements:
                    - key: e0ac2284-8d30-4100-ae23-f85f9574868b
                      value: "0.05"
                  - key: depositschedules
                    effective_from: 2022-01-01
                    state: GA
                    requirements:
                    - key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
                      value: Semi-weekly
            schema:
              $ref: '#/components/schemas/TaxRequirementsUpdateStateTaxesRequest'
      responses:
        "200":
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update State Tax Requirements
      tags:
      - Tax Requirements
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-tax_requirements-state
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/tax_requirements:
    get:
      description: |-
        Returns objects describing the states that have tax requirements for the company

        scope: `company_tax_requirements:read`
      operationId: TaxRequirements_getStates
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Company with requirements in CA and GA:
                  value:
                  - state: CA
                    setup_complete: true
                  - state: GA
                    setup_complete: false
              schema:
                $ref: '#/components/schemas/TaxRequirementsGetStatesResponse'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get All Tax Requirement States
      tags:
      - Tax Requirements
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-tax_requirements
      x-accepts: application/json
  /v1/companies/{company_uuid}/contractor_payments/preview:
    get:
      description: |-
        Returns a debit_date dependent on the ACH payment speed of the company.

        If the payment method is Check or Historical payment, the debit_date will be the same as the check_date.

        scope: `payrolls:read`
      operationId: ContractorPayments_previewDebitDate
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractorPaymentsPreviewDebitDateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContractorPaymentsPreviewDebitDateRequest1'
        description: a list of contractor payments.
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    expected_debit_date: 2022-08-16
              schema:
                $ref: '#/components/schemas/ContractorPaymentsPreviewDebitDateResponse'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    errors:
                      check_date:
                      - type: Invalid Attribute
                        message: "You cannot issue historical payments for the future,\
                          \ please choose a date in the past."
                        full_message: "You cannot issue historical payments for the\
                          \ future, please choose a date in the past."
              schema:
                $ref: '#/components/schemas/ContractorPaymentsPreviewDebitDate422Response'
          description: Unprocessable Entity (WebDAV)
          x-do-not-generate: true
      summary: Preview contractor payment debit date
      tags:
      - Contractor Payments
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-contractor_payments-preview
      x-content-type: application/json
      x-accepts: application/json
  /v1/time_off_policies/{time_off_policy_uuid}:
    get:
      description: |-
        Get a time off policy

        scope: `time_off_policies:read`
      operationId: TimeOffPolicies_getPolicy
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Unlimited Policy:
                  value:
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Test Vacation Unlimited Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                    - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                    - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                Fixed Policy:
                  value:
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                    company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                    name: Test Vacation Fixed Policy
                    policy_type: vacation
                    accrual_method: per_anniversary_year
                    accrual_rate: "120.0"
                    accrual_rate_unit: null
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 0
                    carryover_limit_hours: "240.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "300.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                      balance: "80.0"
                    - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                      balance: "60.0"
                Hourly Policy:
                  value:
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                    company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                      balance: "56.0"
                    - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                      balance: "84.0"
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-time_off_policies-time_off_policy_uuid
      x-accepts: application/json
    put:
      description: |-
        Update a time off policy

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_updatePolicy
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  name: Hourly Vacation Policy
                  accrual_method: per_hour_paid
                  accrual_rate: "4.0"
                  accrual_rate_unit: "80.0"
                  paid_out_on_termination: true
                  accrual_waiting_period_days: 30
                  carryover_limit_hours: "200.0"
                  max_accrual_hours_per_year: "120.0"
                  max_hours: "240.0"
              x-konfig-original-example:
                value:
                  name: Hourly Vacation Policy
                  accrual_method: per_hour_paid
                  accrual_rate: "4.0"
                  accrual_rate_unit: "80.0"
                  paid_out_on_termination: true
                  accrual_waiting_period_days: 30
                  carryover_limit_hours: "200.0"
                  max_accrual_hours_per_year: "120.0"
                  max_hours: "240.0"
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesUpdatePolicyRequest'
        description: "Can update any attributes of the time off policy except policy_type,\
          \ is_active, complete & employees"
      responses:
        "200":
          content:
            application/json:
              examples:
                Unlimited Vacation Policy:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Unlimited Vacation Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees: []
                Hourly Vacation Policy:
                  value:
                    uuid: d86223a1-ec67-4204-8d6a-0f36499c02d0
                    company_uuid: f43bcd64-7f57-4d4e-9c1a-7c90bab8a358
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees: []
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/time_off_policies:
    get:
      description: |-
        Get all time off policies for a company

        scope: `time_off_policies:read`
      operationId: TimeOffPolicies_getAllPolicies
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Test Vacation Unlimited Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                    - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                    - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                    company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                    name: Test Vacation Fixed Policy
                    policy_type: vacation
                    accrual_method: per_anniversary_year
                    accrual_rate: "120.0"
                    accrual_rate_unit: null
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 0
                    carryover_limit_hours: "240.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "300.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                      balance: "80.0"
                    - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                      balance: "60.0"
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                    company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                      balance: "56.0"
                    - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                      balance: "84.0"
                x-konfig-original-example:
                  value:
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Test Vacation Unlimited Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                    - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                    - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                    company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                    name: Test Vacation Fixed Policy
                    policy_type: vacation
                    accrual_method: per_anniversary_year
                    accrual_rate: "120.0"
                    accrual_rate_unit: null
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 0
                    carryover_limit_hours: "240.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "300.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                      balance: "80.0"
                    - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                      balance: "60.0"
                  - version: f5556bce3d75ec2b62bd11990aa7993a
                    uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                    company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                      balance: "56.0"
                    - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                      balance: "84.0"
              schema:
                $ref: '#/components/schemas/TimeOffPoliciesGetAllPoliciesResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all time off policies
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-time_off_policies
      x-accepts: application/json
    post:
      description: |-
        Create a time off policy

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_createPolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Unlimited Policy:
                value:
                  name: Unlimited Vacation Policy
                  policy_type: vacation
                  accrual_method: unlimited
              Hourly Policy:
                value:
                  name: Test Vacation Hourly Policy
                  policy_type: vacation
                  accrual_method: per_hour_paid
                  accrual_rate: "4.0"
                  accrual_rate_unit: "80.0"
                  paid_out_on_termination: true
                  accrual_waiting_period_days: 30
                  carryover_limit_hours: "200.0"
                  max_accrual_hours_per_year: "120.0"
                  max_hours: "240.0"
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesCreatePolicyRequest'
        description: "Requires a policy name, a policy_type, and an accrual_method"
      responses:
        "201":
          content:
            application/json:
              examples:
                Unlimited Vacation Policy:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Unlimited Vacation Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees: []
                Hourly Vacation Policy:
                  value:
                    uuid: d86223a1-ec67-4204-8d6a-0f36499c02d0
                    company_uuid: f43bcd64-7f57-4d4e-9c1a-7c90bab8a358
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees: []
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: Created
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-time_off_policies
      x-content-type: application/json
      x-accepts: application/json
  /v1/time_off_policies/{time_off_policy_uuid}/add_employees:
    put:
      description: |-
        Add employees to a time off policy. Employees are required to have at least one job to be added to a time off policy. Accepts starting balances for non-unlimited policies

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_addEmployeesToPolicy
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Unlimited Policy:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
              Fixed/Hourly Policy:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                    balance: "40.0"
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                    balance: "40.0"
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                    balance: "20.0"
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesAddEmployeesToPolicyRequest'
        description: A list of employee objects containing the employee uuid
      responses:
        "200":
          content:
            application/json:
              examples:
                Unlimited Policy:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                Hourly Policy:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                      balance: "40.0"
                    - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                      balance: "40.0"
                    - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                      balance: "20.0"
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Add employees to a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-add_employees
      x-content-type: application/json
      x-accepts: application/json
  /v1/time_off_policies/{time_off_policy_uuid}/remove_employees:
    put:
      description: |-
        Remove employees from a time off policy

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_removeEmployees
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
              x-konfig-original-example:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesRemoveEmployeesRequest'
        description: A list of employee objects containing the employee uuid
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                x-konfig-original-example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Remove employees from a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-remove_employees
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/holiday_pay_policy:
    delete:
      description: |-
        Delete a company's holiday pay policy

        scope: `holiday_pay_policies:write`
      operationId: HolidayPayPolicies_deletePolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Delete a company's holiday pay policy
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-holiday_pay_policy
      x-accepts: application/json
    get:
      description: |-
        Get a company's holiday pay policy

        scope: `holiday_pay_policies:read`
      operationId: HolidayPayPolicies_getCompanyPolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1b37938b017c7fd7116bada007072290
                    company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                    federal_holidays:
                      new_years_day:
                        selected: false
                        name: New Year's Day
                        date: January 1
                      mlk_day:
                        selected: true
                        name: "Martin Luther King, Jr. Day"
                        date: Third Monday in January
                      presidents_day:
                        selected: false
                        name: Presidents' Day
                        date: Third Monday in February
                      memorial_day:
                        selected: true
                        name: Memorial Day
                        date: Last Monday in May
                      juneteenth:
                        selected: false
                        name: Juneteenth
                        date: June 19
                      independence_day:
                        selected: true
                        name: Independence Day
                        date: July 4
                      labor_day:
                        selected: false
                        name: Labor Day
                        date: First Monday in September
                      columbus_day:
                        selected: false
                        name: Columbus Day (Indigenous Peoples' Day)
                        date: Second Monday in October
                      veterans_day:
                        selected: true
                        name: Veterans Day
                        date: November 11
                      thanksgiving:
                        selected: true
                        name: Thanksgiving
                        date: Fourth Thursday in November
                      christmas_day:
                        selected: true
                        name: Christmas Day
                        date: December 25
                    employees:
                      uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              schema:
                $ref: '#/components/schemas/Holiday-Pay-Policy'
          description: Holiday Pay Policy Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get a company's holiday pay policy
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-holiday_pay_policy
      x-accepts: application/json
    post:
      description: |-
        Create a holiday pay policy for a company

        scope: `holiday_pay_policies:write`
      operationId: HolidayPayPolicies_createCompanyPolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  federal_holidays:
                    mlk_day:
                      selected: true
                    memorial_day:
                      selected: true
                    independence_day:
                      selected: true
                    veterans_day:
                      selected: true
                    thanksgiving:
                      selected: true
                    christmas_day:
                      selected: true
            schema:
              $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1b37938b017c7fd7116bada007072290
                    company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                    federal_holidays:
                      new_years_day:
                        selected: false
                        name: New Year's Day
                        date: January 1
                      mlk_day:
                        selected: true
                        name: "Martin Luther King, Jr. Day"
                        date: Third Monday in January
                      presidents_day:
                        selected: false
                        name: Presidents' Day
                        date: Third Monday in February
                      memorial_day:
                        selected: true
                        name: Memorial Day
                        date: Last Monday in May
                      juneteenth:
                        selected: false
                        name: Juneteenth
                        date: June 19
                      independence_day:
                        selected: true
                        name: Independence Day
                        date: July 4
                      labor_day:
                        selected: false
                        name: Labor Day
                        date: First Monday in September
                      columbus_day:
                        selected: false
                        name: Columbus Day (Indigenous Peoples' Day)
                        date: Second Monday in October
                      veterans_day:
                        selected: true
                        name: Veterans Day
                        date: November 11
                      thanksgiving:
                        selected: true
                        name: Thanksgiving
                        date: Fourth Thursday in November
                      christmas_day:
                        selected: true
                        name: Christmas Day
                        date: December 25
                    employees:
                      uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              schema:
                $ref: '#/components/schemas/Holiday-Pay-Policy'
          description: Holiday Pay Policy Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Create a holiday pay policy for a company
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-holiday_pay_policy
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |-
        Update a company's holiday pay policy

        scope: `holiday_pay_policies:write`
      operationId: HolidayPayPolicies_updatePolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1b37938b017c7fd7116bada007072290
                  federal_holidays:
                    mlk_day:
                      selected: true
                    memorial_day:
                      selected: true
                    independence_day:
                      selected: true
                    veterans_day:
                      selected: true
                    thanksgiving:
                      selected: true
                    christmas_day:
                      selected: true
            schema:
              $ref: '#/components/schemas/HolidayPayPoliciesUpdatePolicyRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1b37938b017c7fd7116bada007072290
                    company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                    federal_holidays:
                      new_years_day:
                        selected: false
                        name: New Year's Day
                        date: January 1
                      mlk_day:
                        selected: true
                        name: "Martin Luther King, Jr. Day"
                        date: Third Monday in January
                      presidents_day:
                        selected: false
                        name: Presidents' Day
                        date: Third Monday in February
                      memorial_day:
                        selected: true
                        name: Memorial Day
                        date: Last Monday in May
                      juneteenth:
                        selected: false
                        name: Juneteenth
                        date: June 19
                      independence_day:
                        selected: true
                        name: Independence Day
                        date: July 4
                      labor_day:
                        selected: false
                        name: Labor Day
                        date: First Monday in September
                      columbus_day:
                        selected: false
                        name: Columbus Day (Indigenous Peoples' Day)
                        date: Second Monday in October
                      veterans_day:
                        selected: true
                        name: Veterans Day
                        date: November 11
                      thanksgiving:
                        selected: true
                        name: Thanksgiving
                        date: Fourth Thursday in November
                      christmas_day:
                        selected: true
                        name: Christmas Day
                        date: December 25
                    employees:
                      uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              schema:
                $ref: '#/components/schemas/Holiday-Pay-Policy'
          description: Holiday Pay Policy Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update a company's holiday pay policy
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/holiday_pay_policy/add:
    put:
      description: |-
        Add employees to a company's holiday pay policy

        scope: `holiday_pay_policies:write`
      operationId: HolidayPayPolicies_addEmployeesToPolicy
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1b37938b017c7fd7116bada007072290
                  employees:
                  - uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
                  - uuid: fe977550-6621-4cfc-b4af-60b6af58c8ef
            schema:
              $ref: '#/components/schemas/HolidayPayPoliciesAddEmployeesToPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1b37938b017c7fd7116bada007072290
                    company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                    federal_holidays:
                      new_years_day:
                        selected: false
                        name: New Year's Day
                        date: January 1
                      mlk_day:
                        selected: true
                        name: "Martin Luther King, Jr. Day"
                        date: Third Monday in January
                      presidents_day:
                        selected: false
                        name: Presidents' Day
                        date: Third Monday in February
                      memorial_day:
                        selected: true
                        name: Memorial Day
                        date: Last Monday in May
                      juneteenth:
                        selected: false
                        name: Juneteenth
                        date: June 19
                      independence_day:
                        selected: true
                        name: Independence Day
                        date: July 4
                      labor_day:
                        selected: false
                        name: Labor Day
                        date: First Monday in September
                      columbus_day:
                        selected: false
                        name: Columbus Day (Indigenous Peoples' Day)
                        date: Second Monday in October
                      veterans_day:
                        selected: true
                        name: Veterans Day
                        date: November 11
                      thanksgiving:
                        selected: true
                        name: Thanksgiving
                        date: Fourth Thursday in November
                      christmas_day:
                        selected: true
                        name: Christmas Day
                        date: December 25
                    employees:
                      uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              schema:
                $ref: '#/components/schemas/Holiday-Pay-Policy'
          description: Holiday Pay Policy Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Add employees to a company's holiday pay policy
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy-add
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/holiday_pay_policy/remove:
    put:
      description: |-
        Remove employees from a company's holiday pay policy

        scope: `holiday_pay_policies:write`
      operationId: HolidayPayPolicies_removeEmployees
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: 1b37938b017c7fd7116bada007072290
                  employees:
                  - uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
                  - uuid: fe977550-6621-4cfc-b4af-60b6af58c8ef
            schema:
              $ref: '#/components/schemas/HolidayPayPoliciesRemoveEmployeesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    version: 1b37938b017c7fd7116bada007072290
                    company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                    federal_holidays:
                      new_years_day:
                        selected: false
                        name: New Year's Day
                        date: January 1
                      mlk_day:
                        selected: true
                        name: "Martin Luther King, Jr. Day"
                        date: Third Monday in January
                      presidents_day:
                        selected: false
                        name: Presidents' Day
                        date: Third Monday in February
                      memorial_day:
                        selected: true
                        name: Memorial Day
                        date: Last Monday in May
                      juneteenth:
                        selected: false
                        name: Juneteenth
                        date: June 19
                      independence_day:
                        selected: true
                        name: Independence Day
                        date: July 4
                      labor_day:
                        selected: false
                        name: Labor Day
                        date: First Monday in September
                      columbus_day:
                        selected: false
                        name: Columbus Day (Indigenous Peoples' Day)
                        date: Second Monday in October
                      veterans_day:
                        selected: true
                        name: Veterans Day
                        date: November 11
                      thanksgiving:
                        selected: true
                        name: Thanksgiving
                        date: Fourth Thursday in November
                      christmas_day:
                        selected: true
                        name: Christmas Day
                        date: December 25
                    employees:
                      uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
              schema:
                $ref: '#/components/schemas/Holiday-Pay-Policy'
          description: Holiday Pay Policy Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Remove employees from a company's holiday pay policy
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy-remove
      x-content-type: application/json
      x-accepts: application/json
  /v1/companies/{company_uuid}/paid_holidays:
    get:
      description: |-
        Preview a company's paid holidays

        scope: `holiday_pay_policies:read`
      operationId: HolidayPayPolicies_previewCompanyPaidHolidays
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  year: "2023"
            schema:
              $ref: '#/components/schemas/HolidayPayPoliciesPreviewCompanyPaidHolidaysRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    holiday_key: veterans_day
                    holiday_name: Veterans Day
                    start_date: 2023-11-11
                    end_date: 2023-11-11
              schema:
                $ref: '#/components/schemas/Paid-Holidays'
          description: Paid Holidays Object Example
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Preview a company's paid holidays
      tags:
      - Holiday Pay Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-paid_holidays
      x-content-type: application/json
      x-accepts: application/json
  /v1/time_off_policies/{time_off_policy_uuid}/balance:
    put:
      description: |-
        Updates time off hours balances for employees for a time off policy

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_updateEmployeeBalance
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                    balance: "54.0"
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                    balance: "80.0"
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                    balance: "26.0"
              x-konfig-original-example:
                value:
                  employee:
                  - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                    balance: "54.0"
                  - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                    balance: "80.0"
                  - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                    balance: "26.0"
            schema:
              $ref: '#/components/schemas/TimeOffPoliciesUpdateEmployeeBalanceRequest'
        description: A list of employee objects containing the employee uuid and time
          off hours balance
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                      balance: "54.0"
                    - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                      balance: "80.0"
                    - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                      balance: "26.0"
                x-konfig-original-example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: "4.0"
                    accrual_rate_unit: "80.0"
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: "200.0"
                    max_accrual_hours_per_year: "120.0"
                    max_hours: "240.0"
                    is_active: true
                    complete: true
                    employees:
                    - uuid: 56c672b4-3918-45cd-a3bb-a62ae0ff1307
                      balance: "54.0"
                    - uuid: 28e7a45d-32dd-4925-a82a-9a3ccc6d302c
                      balance: "80.0"
                    - uuid: f60650da-ba18-417a-b2ab-3c9b6f0fe4f2
                      balance: "26.0"
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Update employee time off hour balances
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-balance
      x-content-type: application/json
      x-accepts: application/json
  /v1/time_off_policies/{time_off_policy_uuid}/deactivate:
    put:
      description: |-
        Deactivate a time off policy

        scope: `time_off_policies:write`
      operationId: TimeOffPolicies_deactivatePolicy
      parameters:
      - description: The UUID of the company time off policy
        explode: false
        in: path
        name: time_off_policy_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: false
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                x-konfig-original-example:
                  value:
                    uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: test policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    is_active: false
                    complete: true
                    employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
              schema:
                $ref: '#/components/schemas/Time-Off-Policy'
          description: OK
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Deactivate a time off policy
      tags:
      - Time Off Policies
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-deactivate
      x-accepts: application/json
  /v1/notifications/{notification_uuid}:
    get:
      description: |-
        Upon receiving a notification webhook event, use this endpoint to fetch the notification's details. The notification details include basic suggested content that can help you build notifications in your platform.

        Note: partners are responsible for the delivery and any custom state management of notifications in their application. Refer to our [partner notification guide](https://docs.gusto.com/embedded-payroll/docs/partner-notifications) for more details.

        If the notification UUID is not found, the response will be 404 Not Found. If the notification's supporting data is no longer valid, the response will be 422 Unprocessable Entity.

        scope: `notifications:read`
      operationId: Notifications_getDetails
      parameters:
      - description: The UUID of the notification
        explode: false
        in: path
        name: notification_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    title: "Action required: Additional information needed to process\
                      \ payroll"
                    uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
                    company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
                    message: "If we do not receive this information as soon as possible,\
                      \ your payroll may not be processed on time."
                    category: information_request
                    actionable: true
                    published_at: 2022-01-01T00:00:00.000Z
              schema:
                $ref: '#/components/schemas/Notification'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Get a notification's details
      tags:
      - Notifications
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-notifications-notification_uuid
      x-accepts: application/json
  /v1/events:
    get:
      description: |-
        Fetch all events, going back up to 30 days, that your partner application has the required scopes for. Note that a partner does NOT have to have verified webhook subscriptions in order to utilize this endpoint.

        > 📘 Token Authentication
        >
        > This endpoint uses the [organization level api token and the Token scheme with HTTP Authorization header](https://docs.gusto.com/embedded-payroll/docs/authentication#api-token-authentication).

        scope: `events:read`
      operationId: Events_get30DayEvents
      parameters:
      - description: A cursor for pagination. Returns all events occuring after the
          specified UUID (exclusive)
        explode: true
        in: query
        name: starting_after_uuid
        required: false
        schema:
          type: string
        style: form
      - description: "The UUID of the company. If not specified, will return all events\
          \ for all companies."
        explode: true
        in: query
        name: resource_uuid
        required: false
        schema:
          type: string
        style: form
      - description: "Limits the number of objects returned in a single response,\
          \ between 1 and 100. The default is 25"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A string containing the exact event name (e.g. `employee.created`),\
          \ or use a wildcard match to filter for a group of events (e.g. `employee.*`,\
          \ `*.created`, `notification.*.created` etc.)"
        explode: true
        in: query
        name: event_type
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: f7397a24-57ad-4fae-b011-d258e8232900
                    event_type: employee.bank_account.created
                    resource_type: Company
                    resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                    entity_type: BankAccount
                    entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                    timestamp: 1686784995
              schema:
                $ref: '#/components/schemas/EventsGet30DayEventsResponse'
          description: Example response
      security:
      - ApiKeyAuth: []
      summary: Get all events
      tags:
      - Events
      x-gusto-integration-type:
      - embedded
      - app-integrations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-events
      x-accepts: application/json
  /v1/companies/{company_uuid}/recovery_cases:
    get:
      description: |-
        Fetch all recovery cases for a company.

        scope: `recovery_cases:read`
      operationId: RecoveryCases_listForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
                    company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
                    status: open
                    latest_error_code: R01
                    original_debit_date: 2023-10-11
                    check_date: 2023-10-13
                    payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
                    contractor_payment_uuids: null
                    amount_outstanding: 10499.43
                    event_total_amount: 5912.07
              schema:
                $ref: '#/components/schemas/RecoveryCasesListForCompanyResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all recovery cases for a company
      tags:
      - Recovery Cases
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-recovery_cases
      x-accepts: application/json
  /v1/recovery_cases/{recovery_case_uuid}/redebit:
    put:
      description: |-
        After resolving the underlying bank error, initiate a redebit for an open recovery case. This submission is asynchronous and a successful request responds with a 202 HTTP status.

        It may take up to four business days for the ACH debit to process; in the meantime, the status of the recovery case will be in the `initiated_redebit` state. When funds are successfully redebited, the recovery case is transitioned to the `recovered` state.

        If the company has exceeded maximum redebit attempts, or if the recovery case is not in a redebitable state, the response will be 422 Unprocessable Entity.

        scope: `recovery_cases:write`
      operationId: RecoveryCases_initiateRedebit
      parameters:
      - description: The UUID of the recovery case
        explode: false
        in: path
        name: recovery_case_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errors:
                    - error_key: base
                      category: payroll_blocker
                      message: Company must complete all onboarding requirements in
                        order to run payroll.
                      metadata:
                        key: needs_onboarding
              schema:
                $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
          description: "Unprocessable Entity \n  \nThis may happen when the body of\
            \ your request contains errors such as `invalid_attribute_value`, or the\
            \ request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
            \ guide for more details.\n"
          x-do-not-generate: true
      summary: Initiate a redebit for a recovery case
      tags:
      - Recovery Cases
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-recovery_cases-recovery_case_uuid-redebit
      x-accepts: application/json
  /v1/companies/{company_uuid}/ach_transactions:
    get:
      description: |-
        Fetches all ACH transactions for a company.

        scope: `ach_transactions:read`
      operationId: AchTransactions_getAllForCompany
      parameters:
      - description: The UUID of the company
        explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the contractor payment
        explode: true
        in: query
        name: contractor_payment_uuid
        required: false
        schema:
          type: string
        style: form
      - description: The UUID of the payroll
        explode: true
        in: query
        name: payroll_uuid
        required: false
        schema:
          type: string
        style: form
      - description: "Used to filter the ACH transactions to only include those with\
          \ a specific transaction type, such as \"Credit employee pay\"."
        explode: true
        in: query
        name: transaction_type
        required: false
        schema:
          type: string
        style: form
      - description: "Used to filter the ACH transactions to only include those with\
          \ a specific payment direction, either \"credit\" or \"debit\"."
        explode: true
        in: query
        name: payment_direction
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the date-based API version associated with your API\
          \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
          \ is used."
        explode: false
        in: header
        name: X-Gusto-API-Version
        required: false
        schema:
          enum:
          - 2024-03-01
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                  - description: PAY 380654
                    uuid: "123e4567-e89b-12d3-a456-426655440000,"
                    company_uuid: "456e7890-e12b-34c5-d678-901234567890,"
                    payment_event_type: "Payroll,"
                    payment_event_uuid: "789e0123-e45f-67ab-c890-123456789012,"
                    recipient_type: "Employee,"
                    recipient_uuid: "012e3456-f78d-90ab-12cd-345678901234,"
                    error_code: "null,"
                    transaction_type: "Credit employee pay,"
                    payment_status: "submitted,"
                    payment_direction: "credit,"
                    payment_event_check_date: "2023-10-02,"
                    payment_date: "2023-10-17,"
                    amount: "123.00,"
              schema:
                $ref: '#/components/schemas/AchTransactionsGetAllForCompanyResponse'
          description: Example response
        "404":
          description: "Not Found \n  \nThe requested resource does not exist. Make\
            \ sure the provided ID/UUID is valid.\n"
      summary: Get all ACH transactions for a company
      tags:
      - ACH Transactions
      x-gusto-integration-type:
      - embedded
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-ach_transactions
      x-accepts: application/json
components:
  parameters:
    pageParam:
      description: "The page that is requested. When unspecified, will load all objects\
        \ unless endpoint forces pagination."
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: number
      style: form
    page:
      description: "The page that is requested. When unspecified, will load the first\
        \ page."
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: number
      style: form
    perParam:
      description: Number of objects per page. For majority of endpoints will default
        to 25
      explode: true
      in: query
      name: per
      required: false
      schema:
        type: number
      style: form
    start_date:
      explode: true
      in: query
      name: start_date
      required: false
      schema:
        example: 2020-01-01
        type: string
        x-konfig-original-example: 2020-01-01
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-start_date-schema
      style: form
    end_date:
      explode: true
      in: query
      name: end_date
      required: false
      schema:
        example: 2020-01-31
        type: string
        x-konfig-original-example: 2020-01-31
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-end_date-schema
      style: form
    bank_account_uuid:
      description: The UUID of the bank account
      explode: false
      in: path
      name: bank_account_uuid
      required: true
      schema:
        type: string
      style: simple
    benefit_id:
      description: The benefit type in Gusto.
      explode: false
      in: path
      name: benefit_id
      required: true
      schema:
        type: string
      style: simple
    compensation_id:
      description: The UUID of the compensation
      explode: false
      in: path
      name: compensation_id
      required: true
      schema:
        type: string
      style: simple
    company_benefit_id:
      description: The UUID of the company benefit
      explode: false
      in: path
      name: company_benefit_id
      required: true
      schema:
        type: string
      style: simple
    company_id:
      description: The UUID of the company
      explode: false
      in: path
      name: company_id
      required: true
      schema:
        type: string
      style: simple
    company_uuid:
      description: The UUID of the company
      explode: false
      in: path
      name: company_uuid
      required: true
      schema:
        type: string
      style: simple
    contractor_id:
      description: The UUID of the contractor
      explode: false
      in: path
      name: contractor_id
      required: true
      schema:
        type: string
      style: simple
    contractor_uuid:
      description: The UUID of the contractor
      explode: false
      in: path
      name: contractor_uuid
      required: true
      schema:
        type: string
      style: simple
    contractor_payment_id:
      description: The UUID of the contractor payment
      explode: false
      in: path
      name: contractor_payment_id
      required: true
      schema:
        type: string
      style: simple
    contractor_payment_uuid:
      description: The UUID of the contractor payment
      explode: false
      in: path
      name: contractor_payment_uuid
      required: true
      schema:
        type: string
      style: simple
    department_uuid:
      description: The UUID of the department
      explode: false
      in: path
      name: department_uuid
      required: true
      schema:
        type: string
      style: simple
    earning_type_uuid:
      description: The UUID of the earning type
      explode: false
      in: path
      name: earning_type_uuid
      required: true
      schema:
        type: string
      style: simple
    effective_date:
      explode: true
      in: query
      name: effective_date
      required: false
      schema:
        example: 2020-01-31
        type: string
        x-konfig-original-example: 2020-01-31
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-effective_date-schema
      style: form
    employee_benefit_id:
      description: The UUID of the employee benefit.
      explode: false
      in: path
      name: employee_benefit_id
      required: true
      schema:
        type: string
      style: simple
    employee_id:
      description: The UUID of the employee
      explode: false
      in: path
      name: employee_id
      required: true
      schema:
        type: string
      style: simple
    employee_uuid:
      description: The UUID of the employee
      explode: false
      in: path
      name: employee_uuid
      required: true
      schema:
        type: string
      style: simple
    event_type:
      description: "A string containing the exact event name (e.g. `employee.created`),\
        \ or use a wildcard match to filter for a group of events (e.g. `employee.*`,\
        \ `*.created`, `notification.*.created` etc.)"
      explode: true
      in: query
      name: event_type
      required: false
      schema:
        type: string
      style: form
    external_payroll_id:
      description: The UUID of the external payroll
      explode: false
      in: path
      name: external_payroll_id
      required: true
      schema:
        type: string
      style: simple
    form_id:
      description: The UUID of the form
      explode: false
      in: path
      name: form_id
      required: true
      schema:
        type: string
      style: simple
    garnishment_id:
      description: The UUID of the garnishment
      explode: false
      in: path
      name: garnishment_id
      required: true
      schema:
        type: string
      style: simple
    home_address_uuid:
      description: The UUID of the home address
      explode: false
      in: path
      name: home_address_uuid
      required: true
      schema:
        type: string
      style: simple
    work_address_uuid:
      description: The UUID of the work address
      explode: false
      in: path
      name: work_address_uuid
      required: true
      schema:
        type: string
      style: simple
    job_id:
      description: The UUID of the job
      explode: false
      in: path
      name: job_id
      required: true
      schema:
        type: string
      style: simple
    limit:
      description: "Limits the number of objects returned in a single response, between\
        \ 1 and 100. The default is 25"
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: string
      style: form
    location_id:
      description: The UUID of the location
      explode: false
      in: path
      name: location_id
      required: true
      schema:
        type: string
      style: simple
    location_uuid:
      description: The UUID of the location
      explode: false
      in: path
      name: location_uuid
      required: true
      schema:
        type: string
      style: simple
    payroll_id:
      description: The UUID of the payroll
      explode: false
      in: path
      name: payroll_id
      required: true
      schema:
        type: string
      style: simple
    payroll_uuid:
      description: The UUID of the payroll
      explode: false
      in: path
      name: payroll_uuid
      required: true
      schema:
        type: string
      style: simple
    pay_schedule_id:
      description: The UUID of the pay schedule
      explode: false
      in: path
      name: pay_schedule_id
      required: true
      schema:
        type: string
      style: simple
    payroll_types:
      description: regular and/or transition. Multiple options are comma separated.
        The default is regular pay periods if nothing is passed in.
      explode: true
      in: query
      name: payroll_types
      required: false
      schema:
        type: string
      style: form
    document_type:
      description: the type of document being generated
      explode: false
      in: path
      name: document_type
      required: true
      schema:
        type: string
      style: simple
    request_uuid:
      description: The UUID of the Generated Document Request
      explode: false
      in: path
      name: request_uuid
      required: true
      schema:
        type: string
      style: simple
    signatory_uuid:
      description: The UUID of the signatory
      explode: false
      in: path
      name: signatory_uuid
      required: true
      schema:
        type: string
      style: simple
    starting_after_uuid:
      description: A cursor for pagination. Returns all events occuring after the
        specified UUID (exclusive)
      explode: true
      in: query
      name: starting_after_uuid
      required: false
      schema:
        type: string
      style: form
    resource_uuid:
      description: "The UUID of the company. If not specified, will return all events\
        \ for all companies."
      explode: true
      in: query
      name: resource_uuid
      required: false
      schema:
        type: string
      style: form
    time_off_type:
      description: "The time off type name you want to query data for. ex: 'sick'\
        \ or 'vacation'"
      explode: true
      in: query
      name: time_off_type
      required: true
      schema:
        type: string
      style: form
    time_off_policy_uuid:
      description: The UUID of the company time off policy
      explode: false
      in: path
      name: time_off_policy_uuid
      required: true
      schema:
        type: string
      style: simple
    webhook_subscription_uuid:
      description: The webhook subscription UUID.
      explode: false
      in: path
      name: webhook_subscription_uuid
      required: true
      schema:
        type: string
      style: simple
    VersionHeader:
      description: "Determines the date-based API version associated with your API\
        \ call. If none is provided, your application's [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)\
        \ is used."
      explode: false
      in: header
      name: X-Gusto-API-Version
      required: false
      schema:
        enum:
        - 2024-03-01
        type: string
      style: simple
    notification_uuid:
      description: The UUID of the notification
      explode: false
      in: path
      name: notification_uuid
      required: true
      schema:
        type: string
      style: simple
    invoice_period:
      description: The month we are calculating the invoice for. Must be in YYYY-MM
        format
      explode: false
      in: path
      name: invoice_period
      required: true
      schema:
        example: 2020-01
        type: string
        x-konfig-original-example: 2020-01
        x-konfig-generated-schema: konfig-generated-schema-components-parameters-invoice_period-schema
      style: simple
    recovery_case_uuid:
      description: The UUID of the recovery case
      explode: false
      in: path
      name: recovery_case_uuid
      required: true
      schema:
        type: string
      style: simple
    contractor_payment_uuid_query:
      description: The UUID of the contractor payment
      explode: true
      in: query
      name: contractor_payment_uuid
      required: false
      schema:
        type: string
      style: form
    payroll_uuid_query:
      description: The UUID of the payroll
      explode: true
      in: query
      name: payroll_uuid
      required: false
      schema:
        type: string
      style: form
    transaction_type:
      description: "Used to filter the ACH transactions to only include those with\
        \ a specific transaction type, such as \"Credit employee pay\"."
      explode: true
      in: query
      name: transaction_type
      required: false
      schema:
        type: string
      style: form
    payment_direction:
      description: "Used to filter the ACH transactions to only include those with\
        \ a specific payment direction, either \"credit\" or \"debit\"."
      explode: true
      in: query
      name: payment_direction
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    post-employee-ytd-benefit-amounts-from-different-company:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest'
  responses:
    Unprocessable-Entity-Error-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                errors:
                - error_key: base
                  category: payroll_blocker
                  message: Company must complete all onboarding requirements in order
                    to run payroll.
                  metadata:
                    key: needs_onboarding
          schema:
            $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
      description: "Unprocessable Entity \n  \nThis may happen when the body of your\
        \ request contains errors such as `invalid_attribute_value`, or the request\
        \ fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
        \ guide for more details.\n"
      x-do-not-generate: true
    Not-Found-Error-Object:
      description: "Not Found \n  \nThe requested resource does not exist. Make sure\
        \ the provided ID/UUID is valid.\n"
    Employment-Not-Found-Error-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                errors:
                - error_key: employement
                  category: incorrect_state
                  message: The employee's employment is not in the right state.
          schema:
            $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
      description: |-
        Not Found

        * The requested resource does not exist. Make sure the provided ID/UUID is valid.
        * The employee's employment is not in the right state.
      x-do-not-generate: true
    Payroll-Blockers-Error:
      content:
        application/json:
          examples:
            Example:
              value:
                errors:
                - error_key: base
                  category: payroll_blocker
                  message: Company must complete all onboarding requirements in order
                    to run payroll.
                  metadata:
                    key: needs_onboarding
          schema:
            $ref: '#/components/schemas/Payroll-Blockers-Error'
      description: Payroll Blockers Error
    Authentication-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                access_token: 737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc
                token_type: bearer
                expires_in: 7200
                refresh_token: iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E
                scope: ach_transactions:read benefits:read companies:read
                created_at: 2023-09-12T16:42:25.000-07:00
          schema:
            $ref: '#/components/schemas/Authentication'
      description: Example response
    Holiday-Pay-Policy-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 1b37938b017c7fd7116bada007072290
                company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                federal_holidays:
                  new_years_day:
                    selected: false
                    name: New Year's Day
                    date: January 1
                  mlk_day:
                    selected: true
                    name: "Martin Luther King, Jr. Day"
                    date: Third Monday in January
                  presidents_day:
                    selected: false
                    name: Presidents' Day
                    date: Third Monday in February
                  memorial_day:
                    selected: true
                    name: Memorial Day
                    date: Last Monday in May
                  juneteenth:
                    selected: false
                    name: Juneteenth
                    date: June 19
                  independence_day:
                    selected: true
                    name: Independence Day
                    date: July 4
                  labor_day:
                    selected: false
                    name: Labor Day
                    date: First Monday in September
                  columbus_day:
                    selected: false
                    name: Columbus Day (Indigenous Peoples' Day)
                    date: Second Monday in October
                  veterans_day:
                    selected: true
                    name: Veterans Day
                    date: November 11
                  thanksgiving:
                    selected: true
                    name: Thanksgiving
                    date: Fourth Thursday in November
                  christmas_day:
                    selected: true
                    name: Christmas Day
                    date: December 25
                employees:
                  uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
          schema:
            $ref: '#/components/schemas/Holiday-Pay-Policy'
      description: Holiday Pay Policy Object Example
    Paid-Holidays-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                holiday_key: veterans_day
                holiday_name: Veterans Day
                start_date: 2023-11-11
                end_date: 2023-11-11
          schema:
            $ref: '#/components/schemas/Paid-Holidays'
      description: Paid Holidays Object Example
    Department-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                title: Stage Hand
                version: d90440dd464601d1c8f4e9e240dfb7a6
                uuid: 56260b3d-c375-415c-b77a-75d99f717193
                company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                employees:
                - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                contractors:
                - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
          schema:
            $ref: '#/components/schemas/Department'
      description: Department Object Example
    Department-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - title: Stage Hand
                version: d90440dd464601d1c8f4e9e240dfb7a6
                uuid: 56260b3d-c375-415c-b77a-75d99f717193
                company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                employees:
                - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                contractors: []
              - title: Actors
                version: 34f39a30b45d077cb83aed2df4810d74
                uuid: ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3
                company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                employees:
                - uuid: 7ee4aca1-814b-4034-b0f8-07f93cc679d1
                contractors: []
              - title: Band
                version: 1fe3076d35ef7c97d0ae68c5f4df0acd
                uuid: 1802465d-4f68-4865-920c-1307ab095f12
                company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                employees:
                - uuid: a73955be-c009-44dc-915e-6246e2bdedbb
                contractors:
                - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
          schema:
            $ref: '#/components/schemas/DepartmentsGetAllWithEmployeesResponse'
      description: List of departments
    Employee-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 1c7ba9d62c8bafbfff998ffccad5d296
                uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                first_name: Isom
                middle_initial: null
                last_name: Jaskolski
                email: dane7757869450111550@botsford.net
                company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                department: Stage Hand
                department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                terminated: false
                two_percent_shareholder: false
                onboarded: true
                onboarding_status: onboarding_completed
                jobs:
                - title: Client Support Director
                  version: 6c0ed1521e8b86eb36bd4455a63a2dac
                  uuid: 428a653a-0745-4db4-9c80-558288d416fa
                  employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                  current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                  payment_unit: Year
                  primary: true
                  compensations:
                  - version: 2cd4b18662395eb53bcf80d5b5447f36
                    uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                    payment_unit: Year
                    flsa_status: Exempt
                    job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                    effective_date: 2021-01-20
                    rate: "70000.00"
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                  rate: "70000.00"
                  hire_date: 2020-01-20
                eligible_paid_time_off:
                - name: Sick Hours
                  policy_name: Sick Policy
                  policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_method: per_hour_worked
                  accrual_period: Year
                  accrual_balance: "31.8"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: false
                - name: Vacation Hours
                  policy_name: Vacation Policy
                  policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_period: Year
                  accrual_balance: "77.8"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: true
                terminations: []
                custom_fields:
                - description: Employee Level
                  id: ee515986-f3ca-49da-b576-2691b95262f9X
                  company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                  name: employee_level
                  type: text
                  value: "2"
                  selection_options: null
                - description: What is your t-shirt size?
                  id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                  company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                  name: t-shirt size
                  type: text
                  value: md
                  selection_options: null
                - description: Which is your favorite fruit?
                  id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                  company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                  name: favorite fruit
                  type: radio
                  value: apple
                  selection_options:
                  - apple
                  - banana
                  - orange
                garnishments: []
                date_of_birth: 1986-06-25
                has_ssn: false
                ssn: ""
                phone: "1234567890"
                preferred_first_name: Angel
                work_email: angel.jaskolski@example.com
          schema:
            $ref: '#/components/schemas/Employee'
      description: Example response
    Employee-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 414dedaca594b77135e0b8d2f398516d
                uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                first_name: Nicole
                middle_initial: M
                last_name: Boehm
                email: kory7757869450111548@barton-hermiston.io
                company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                department: Stage Hand
                department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                terminated: false
                two_percent_shareholder: false
                onboarded: true
                onboarding_status: onboarding_completed
                jobs:
                - title: Client Support Manager
                  version: 91179081a7309c9fbd31bb3cf7b9893e
                  uuid: 5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5
                  employee_uuid: a987bce1-6d06-43f8-9978-9db886f479fb
                  current_compensation_uuid: 798a962f-0fcf-491e-9b71-cfa6a1db114f
                  payment_unit: Hour
                  primary: true
                  compensations:
                  - version: 233f0096a8015e62d9795fadf1fd300d
                    uuid: 94f17a77-cfe5-436a-af94-422bbf8248ff
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    job_uuid: 64711ac0-83ff-4aaf-bec1-db72f5a44e56
                    effective_date: 2021-01-20
                    rate: "22.00"
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                  rate: "22.00"
                  hire_date: 2020-01-20
                eligible_paid_time_off:
                - name: Sick Hours
                  policy_name: Sick Policy
                  policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_method: per_hour_worked
                  accrual_period: Year
                  accrual_balance: "71.0"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: false
                - name: Vacation Hours
                  policy_name: Vacation Policy
                  policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_period: Year
                  accrual_balance: "34.0"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: true
                terminations: []
                garnishments: []
                date_of_birth: 1996-05-08
                has_ssn: true
                ssn: ""
                phone: "1234567890"
                preferred_first_name: Vanessa
                work_email: vanessa.boehm@example.com
              - version: e867459e1360fa71e78b88142923d341
                uuid: d7cb289a-af62-4120-9cd5-acda324b5c04
                first_name: Maci
                middle_initial: M
                last_name: Cassin
                email: claud_reinger7757869450111549@gutkowski.net
                company_uuid: 4522d043-5731-406d-a129-de1808042a32
                manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                department: Band
                department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                terminated: false
                two_percent_shareholder: false
                onboarded: true
                onboarding_status: onboarding_completed
                jobs:
                - title: Account Director
                  version: d0e719137f89ca3dd334dd4cc248ffbb
                  uuid: 62a00cf7-342b-465e-a151-ecd295152be0
                  employee_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                  current_compensation_uuid: 93e5da92-173b-4faa-a0bd-d1a8dee68be0
                  payment_unit: Year
                  primary: true
                  compensations:
                  - version: 994b75511d1debac5d7e2ddeae13679f
                    uuid: 1bad5177-c4ed-432e-ab43-66055d40c3a5
                    payment_unit: Year
                    flsa_status: Exempt
                    job_uuid: 1214875b-f43d-4267-bf2f-a6d2c298ff3d
                    effective_date: 2021-01-20
                    rate: "78000.00"
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                  rate: "78000.00"
                  hire_date: 2020-01-20
                eligible_paid_time_off:
                - name: Sick Hours
                  policy_name: Sick Policy
                  policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_method: per_hour_worked
                  accrual_period: Year
                  accrual_balance: "74.0"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: false
                - name: Vacation Hours
                  policy_name: Vacation Policy
                  policy_uuid: 0d4c755e-50ac-4c54-b46e-81bdfa03da5b
                  accrual_unit: Hour
                  accrual_rate: "208.0"
                  accrual_period: Year
                  accrual_balance: "16.0"
                  maximum_accrual_balance: "240.0"
                  paid_at_termination: true
                terminations: []
                garnishments: []
                custom_fields:
                - description: Employee Level
                  id: ee515986-f3ca-49da-b576-2691b95262f9X
                  company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                  name: employee_level
                  type: text
                  value: "2"
                  selection_options: null
                - description: What is your t-shirt size?
                  id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                  company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                  name: t-shirt size
                  type: text
                  value: md
                  selection_options: null
                - description: Which is your favorite fruit?
                  id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59X
                  company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                  name: favorite fruit
                  type: radio
                  value: apple
                  selection_options:
                  - apple
                  - banana
                  - orange
                date_of_birth: 1995-09-21
                has_ssn: true
                ssn: ""
                phone: "1234567890"
                preferred_first_name: Denis
                work_email: denis.cassin@example.com
          schema:
            $ref: '#/components/schemas/EmployeesListCompanyEmployeesResponse'
      description: Example response
    Employee-Address-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 56260b3d-c375-415c-b77a-75d99f717193
                employee_id: 12345
                street_1: 644 Fay Vista
                street_2: Suite 842
                city: Richmond
                state: VA
                zip: "23218"
                country: USA
                active: false
                effective_date: 2021-01-01
                courtesy_withholding: true
          schema:
            $ref: '#/components/schemas/Employee-Address'
      description: Example response
    Employee-Address-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 56260b3d-c375-415c-b77a-75d99f717193
                employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                street_1: 644 Fay Vista
                street_2: Suite 842
                city: Richmond
                state: VA
                zip: "23218"
                country: USA
                active: false
                effective_date: 2021-01-01
                courtesy_withholding: true
              - uuid: d9f74049-8769-4fba-8e0f-eceef2da4e6b
                employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                street_1: 100 5th Ave
                street_2: Suite 555
                city: New York
                state: NY
                zip: "10001"
                country: USA
                active: true
                effective_date: 2022-03-03
                courtesy_withholding: true
          schema:
            $ref: '#/components/schemas/EmployeeAddressesGetHomeAddressesResponse'
      description: List of employee addresses
    Employee-Work-Address-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 139f9769a2e543e6a1259173e1ee3b8d
                uuid: fc5b87dc-8d88-400d-b2da-c3587a7e5b15
                employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                location_uuid: d9456c94-f561-40d2-afec-919da5f59196
                effective_date: 2022-01-01
                active: false
                street_1: 800 Adolfo Gardens
                street_2: Suite 419
                city: Bremen
                state: AL
                zip: "35033"
                country: USA
              - version: bbe8d4c741339c6b9e0e2e1c1b120816
                uuid: be1c2e24-af86-4c36-b34e-3a55dbcdbdab
                employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                effective_date: 2023-01-01
                active: true
                street_1: 2216 Icie Villages
                street_2: Apt. 798
                city: Big Delta
                state: AK
                zip: "99737"
                country: USA
          schema:
            $ref: '#/components/schemas/EmployeeAddressesListWorkAddressesResponse'
      description: List of employee work addresses
    Company-Onboarding-Status-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                onboarding_completed: false
                onboarding_steps:
                - title: Add Your Company's Addresses
                  id: add_addresses
                  required: true
                  completed: true
                  skippable: false
                  requirements: []
                - title: Enter Your Federal Tax Information
                  id: federal_tax_setup
                  required: true
                  completed: true
                  skippable: false
                  requirements: []
                - title: Select Industry
                  id: select_industry
                  required: true
                  completed: true
                  skippable: false
                  requirements:
                  - add_addresses
                  - add_employees
                - title: Add Your Bank Account
                  id: add_bank_info
                  required: true
                  completed: true
                  skippable: false
                  requirements: []
                - title: Add Your Employees
                  id: add_employees
                  required: true
                  completed: true
                  skippable: true
                  requirements:
                  - add_addresses
                - title: Enter Your State Tax Information
                  id: state_setup
                  required: true
                  completed: false
                  skippable: false
                  requirements:
                  - add_addresses
                  - add_employees
                - title: Select a Pay Schedule
                  id: payroll_schedule
                  required: true
                  completed: false
                  skippable: false
                  requirements: []
                - title: Sign Documents
                  id: sign_all_forms
                  required: true
                  completed: false
                  skippable: false
                  requirements:
                  - add_employees
                  - federal_tax_setup
                  - state_setup
                  - add_bank_info
                  - payroll_schedule
                - title: Verify Your Bank Account
                  id: verify_bank_info
                  required: true
                  completed: false
                  skippable: false
                  requirements:
                  - add_bank_info
          schema:
            $ref: '#/components/schemas/Company-Onboarding-Status'
      description: Example response
    Webhook-Subscription-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                url: https://the-partner-app.com/subscriber
                status: verified
                subscription_types:
                - BankAccount
                - Company
                - CompanyBenefit
                - Contractor
                - ContractorPayment
                - Employee
                - EmployeeBenefit
                - EmployeeJobCompensation
                - ExternalPayroll
                - Form
                - Location
                - Notification
                - Payroll
                - PaySchedule
                - Signatory
          schema:
            $ref: '#/components/schemas/Webhook-Subscription'
      description: Example response
    Webhook-Subscriptions-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: dcceb38a-46be-4110-9d1d-1b3384c3b906
                url: https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber
                status: pending
                subscription_types:
                - BankAccount
                - Company
                - CompanyBenefit
                - Contractor
                - ContractorPayment
                - Employee
                - EmployeeBenefit
                - EmployeeJobCompensation
                - ExternalPayroll
                - Form
                - Location
                - Notification
                - Payroll
                - PaySchedule
                - Signatory
          schema:
            $ref: '#/components/schemas/WebhooksListSubscriptionsResponse'
      description: Example response
    Company-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                ein: 00-0000001
                entity_type: C-Corporation
                tier: core
                is_suspended: false
                company_status: Approved
                uuid: c7a07c73-a703-4462-9343-1b181182b6e0
                name: Shoppe Studios LLC
                trade_name: Record Shoppe
                is_partner_managed: false
                pay_schedule_type: by_department
                join_date: 2023-03-01
                funding_type: ach
                locations:
                - street_1: 412 Kiera Stravenue
                  street_2: Suite 391
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
                  active: true
                - street_1: 644 Fay Vista
                  street_2: Suite 842
                  city: Richmond
                  state: VA
                  zip: "23218"
                  country: USA
                  active: true
                compensations:
                  hourly:
                  - name: Overtime
                    multiple: 1.5
                  - name: Double overtime
                    multiple: 2
                  - name: Regular
                    multiple: 1
                  - name: Outstanding vacation
                    multiple: 1
                  - name: Holiday
                    multiple: 1
                  - name: Emergency sick - self care
                    multiple: 1
                  - name: Emergency sick - caring for others
                    multiple: 1
                  - name: FMLA Public Health Emergency Leave
                    multiple: 1
                  - name: Regular Hours
                    multiple: 1
                  fixed:
                  - name: Bonus
                  - name: Commission
                  - name: Paycheck Tips
                  - name: Cash Tips
                  - name: Correction Payment
                  - name: Severance
                  - name: Minimum Wage Adjustment
                  - name: Reimbursement
                  paid_time_off:
                  - name: Vacation Hours
                  - name: Sick Hours
                  - name: Holiday Hours
                primary_signatory:
                  first_name: Alda
                  middle_initial: ""
                  last_name: Carter
                  phone: 1-565-710-7558
                  email: louie.hessel7757869450111547@zemlak.biz
                  home_address:
                    street_1: 524 Roob Divide
                    street_2: Suite 565
                    city: San Francisco
                    state: CA
                    zip: "94107"
                    country: USA
                primary_payroll_admin:
                  first_name: Ian
                  last_name: Labadie
                  phone: 1-565-710-7559
                  email: louie.hessel7757869450111547@zemlak.biz
          schema:
            $ref: '#/components/schemas/Company'
      description: Example response
    Signatory-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                title: Owner
                version: 49ea586f528411f5cfadfd54452b2423
                uuid: f8c653dc-0094-41fb-8670-45d6399afade
                first_name: Bob
                last_name: Johnson
                phone: "4239879876"
                birthday: 2002-10-31
                email: olin.okuneva@denesik.us
                is_admin: false
                has_ssn: true
                home_address:
                  street_1: 524 Roob Divide
                  street_2: Suite 565
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
                identity_verification_status: Skipped
          schema:
            $ref: '#/components/schemas/Signatory'
      description: Example response
    Contractor-Address-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 23323096a8015e32d9795fadf1fd300d
                contractor_uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                street_1: 999 Kiera Stravenue
                street_2: Suite 391
                city: San Francisco
                state: CA
                zip: 94107
                country: USA
                active: true
          schema:
            $ref: '#/components/schemas/Contractor-Address'
      description: Example response
    Employment-History-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - hire_date: 2023-05-30
                termination_date: null
                file_new_hire_report: true
                two_percent_shareholder: false
                employment_status: seasonal
              - hire_date: 2021-02-02
                termination_date: 2023-03-01
                file_new_hire_report: false
                two_percent_shareholder: false
                employment_status: full_time
          schema:
            $ref: '#/components/schemas/EmployeeEmploymentsGetHistoryResponse'
      description: Example response
    Rehire-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 2e930d43acbdb241f8f14a2d531fa417
                employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                active: false
                effective_date: 2024-01-01
                file_new_hire_report: false
                work_location_uuid: "d2c80d44-857b-4d4d-bce4-23ae52cc863b,"
                two_percent_shareholder: false
                employment_status: full_time
          schema:
            $ref: '#/components/schemas/Rehire'
      description: Example response
    Unprocessed-Termination-Pay-Period-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - start_date: 2023-01-11
                end_date: 2023-01-24
                check_date: 2023-01-28
                debit_date: 2023-01-26
                employee_name: Mary Warner
                employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
              - start_date: 2023-01-25
                end_date: 2023-02-07
                check_date: 2023-02-10
                debit_date: 2023-02-08
                employee_name: Mary Warner
                employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
          schema:
            $ref: '#/components/schemas/PaySchedulesGetUnprocessedTerminationPayPeriodsResponse'
      description: Example response
    Accruing-Time-Off-Hour-Object:
      content:
        application/json:
          examples:
            Example:
              value:
              - time_off_policy_uuid: c3a15554-f124-415d-b2c4-90b430fd8eb1
                hours: "3.2"
              - time_off_policy_uuid: 386fc48d-52d2-4009-87b3-368f74f6b3df
                hours: "6.0"
          schema:
            $ref: '#/components/schemas/TimeOffPoliciesCalculateAccruingTimeOffHoursResponse'
      description: Example response
    Pay-Schedule-Assignment-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                type: by_employee
                employees:
                  employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                  pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
          schema:
            $ref: '#/components/schemas/Pay-Schedule-Assignment'
      description: Example response
    Pay-Schedule-Assignment-Preview-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                type: hourly_salaried
                employee_changes:
                  employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
                  first_name: Penny
                  last_name: Parker
                  pay_frequency: Twice per month — Salaried pay schedule
                  first_pay_period:
                    pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
                    start_date: 2023-07-01
                    end_date: 2023-08-01
                    check_date: 2023-08-02
                  transition_pay_period:
                    start_date: 2023-06-20
                    end_date: 2023-06-30
          schema:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Preview'
      description: Example response
    Benefit-Summary-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                description: Simple IRA
                start_date: 2022-01-01
                end_date: 2022-12-31
                company_benefit_deduction: 60
                company_benefit_contribution: 30
                employees:
                - uuid: 54b7114f-f5e2-4f4b-911b-5cd5ad9032b0
                  company_benefit_deduction: 60
                  company_benefit_contribution: 30
                  benefit_deduction: 660
                  benefit_contribution: 330
                  gross_pay: 18000
                  payroll_benefits:
                  - payroll_uuid: 8cc3471b-9da5-47df-88ea-f238c7cb968b
                    payroll_type: Regular
                    check_date: 2022-03-01
                    gross_pay: 3000
                    company_benefit_deduction: 10
                    company_benefit_contribution: 5
                    pay_period:
                      start_date: 2022-02-01
                      end_date: 2022-02-28
                  - payroll_uuid: d9d92786-722b-4bf7-bb32-79140418d349
                    payroll_type: Bonus
                    check_date: 2022-12-31
                    gross_pay: 3000
                    company_benefit_deduction: 20
                    company_benefit_contribution: 10
                    pay_period:
                      start_date: nil
                      end_date: nil
          schema:
            $ref: '#/components/schemas/Benefit-Summary'
      description: Benefit summary response
    Company-Benefit-With-Employee-Benefits-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                description: Kaiser Permanente
                version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                active: true
                deletable: true
                supports_percentage_amounts: true
                responsible_for_employer_taxes: false
                responsible_for_employee_w2: false
                employee_benefits:
                - employee_uuid: ae44a0b2-3c89-41e1-91c8-5f8224a779ca
                  company_benefit_uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                  active: true
                  deduct_as_percentage: false
                  employee_deduction: 3
                  company_contribution: 0
                  uuid: 9988f241-9aee-4383-bfca-eac79cf58135
                  contribution:
                    type: amount
                    value: 0
          schema:
            $ref: '#/components/schemas/Company-Benefit-With-Employee-Benefits'
      description: Example response
    Employee-Pay-Stubs-List:
      content:
        application/json:
          examples:
            Example:
              description: OK
              value:
              - uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                check_date: 2023-11-24
                gross_pay: 880
                net_pay: 541.02
                payroll_uuid: a039cafb-745e-4af4-bf1e-935a86fc18e0
                check_amount: 500.2
          schema:
            $ref: '#/components/schemas/PayrollsGetEmployeePayStubsResponse'
      description: Example response
    Signatory-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - title: Owner
                version: 49ea586f528411f5cfadfd54452b2423
                uuid: f8c653dc-0094-41fb-8670-45d6399afade
                first_name: Bob
                last_name: Johnson
                phone: "4239879876"
                birthday: 2002-10-31
                email: olin.okuneva@denesik.us
                is_admin: false
                has_ssn: true
                home_address:
                  street_1: 524 Roob Divide
                  street_2: Suite 565
                  city: San Francisco
                  state: CA
                  zip: "94107"
                  country: USA
                identity_verification_status: Skipped
          schema:
            $ref: '#/components/schemas/SignatoriesGetCompanySignatoriesResponse'
      description: Example response
    External-Payroll-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                check_date: 2022-06-03
                payment_period_start_date: 2022-05-15
                payment_period_end_date: 2022-05-30
                status: unprocessed
                external_payroll_items:
                - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                  earnings:
                  - amount: 10000
                    hours: 0
                    earning_type: CompanyPayType
                    earning_id: 1
                  - amount: 500
                    hours: 0
                    earning_type: CompanyEarningType
                    earning_id: 4
                  benefits:
                  - benefit_id: 22
                    company_contribution_amount: 100
                    employee_deduction_amount: 50
                  - benefit_id: 25
                    company_contribution_amount: 0
                    employee_deduction_amount: 300
                  taxes:
                  - tax_id: 1
                    amount: 400
                  - tax_id: 2
                    amount: 60
                applicable_earnings:
                - earning_type: CompanyPayType
                  earning_id: 1
                  name: Regular Wages
                  input_type: amount
                  category: default
                - earning_type: CompanyEarningType
                  earning_id: 4
                  name: Cash Tips
                  input_type: amount
                  category: default
                applicable_benefits:
                - description: Kaiser
                  id: 22
                  active: true
                - description: HSA
                  id: 25
                  active: true
                applicable_taxes:
                - id: 1
                  name: Federal Income Tax
                  employer_tax: false
                  resident_tax: false
                - id: 2
                  name: Social Security
                  employer_tax: false
                  resident_tax: false
                metadata:
                  deletable: true
          schema:
            $ref: '#/components/schemas/External-Payroll'
      description: Example response
    External-Payroll-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                check_date: 2022-06-03
                payment_period_start_date: 2022-05-15
                payment_period_end_date: 2022-05-30
                status: unprocessed
          schema:
            $ref: '#/components/schemas/ExternalPayrollsListForCompanyResponse'
      description: Example response
    External-Payroll-Tax-Suggestions-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
                tax_suggestions:
                - tax_id: 1
                  amount: 500
                - tax_id: 2
                  amount: 100
                - tax_id: 4
                  amount: 30
          schema:
            $ref: '#/components/schemas/ExternalPayrollsGetTaxSuggestionsResponse'
      description: Example response
    Tax-Liabilities-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - tax_id: 1
                tax_name: Federal Income Tax
                last_unpaid_external_payroll_uuid: null
                possible_liabilities:
                - liability_amount: 0
                  payroll_check_date: null
                  external_payroll_uuid: null
                - liability_amount: 3000
                  payroll_check_date: 2022-06-01
                  external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
              - tax_id: 2
                tax_name: Social Security
                last_unpaid_external_payroll_uuid: null
                possible_liabilities:
                - liability_amount: 0
                  payroll_check_date: null
                  external_payroll_uuid: null
                - liability_amount: 50
                  payroll_check_date: 2022-06-01
                  external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
          schema:
            $ref: '#/components/schemas/ExternalPayrollsGetTaxLiabilitiesResponse'
      description: Example response
    Flow-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                url: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
                expires_at: 2021-12-28 04:25:48
          schema:
            $ref: '#/components/schemas/Flow'
      description: Example response
    Form-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                title: Direct Deposit Authorization
                description: We need you to sign paperwork to authorize us to debit
                  and credit your bank account and file and pay your taxes.
                uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                name: company_direct_deposit
                draft: false
                requires_signing: true
          schema:
            $ref: '#/components/schemas/Form'
      description: Example response
    Form-Object-Pdf:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                document_url: https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020
          schema:
            $ref: '#/components/schemas/Form-Pdf'
      description: Example response
    Form-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - title: Direct Deposit Authorization
                description: We need you to sign paperwork to authorize us to debit
                  and credit your bank account and file and pay your taxes.
                uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                name: company_direct_deposit
                draft: false
                requires_signing: true
          schema:
            $ref: '#/components/schemas/CompanyFormsGetAllFormsResponse'
      description: Example response
    Industry-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                title: Computer Training
                company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                naics_code: "611420"
                sic_codes:
                - "8243"
          schema:
            $ref: '#/components/schemas/Industry'
      description: Example response
    Job-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                title: Account Director
                version: d0e719137f89ca3dd334dd4cc248ffbb
                uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                payment_unit: Year
                primary: true
                compensations:
                - version: 994b75511d1debac5d7e2ddeae13679f
                  uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                  payment_unit: Year
                  flsa_status: Exempt
                  job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                  effective_date: 2021-01-20
                  rate: "78000.00"
                  adjust_for_minimum_wage: false
                  minimum_wages: []
                rate: "78000.00"
                hire_date: 2020-01-20
          schema:
            $ref: '#/components/schemas/Job'
      description: Example response
    Job-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - title: Client Support Director
                version: 6c0ed1521e8b86eb36bd4455a63a2dac
                uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                payment_unit: Year
                primary: true
                compensations:
                - version: 2cd4b18662395eb53bcf80d5b5447f36
                  uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                  payment_unit: Year
                  flsa_status: Exempt
                  job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                  effective_date: 2021-01-20
                  rate: "70000.00"
                  adjust_for_minimum_wage: false
                  minimum_wages: []
                rate: "70000.00"
                hire_date: 2020-01-20
          schema:
            $ref: '#/components/schemas/JobsAndCompensationsGetEmployeeJobsResponse'
      description: Example response
    Employee-Federal-Tax-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 56a489ce86ed6c1b0f0cecc4050a0b01
                filing_status: Single
                extra_withholding: "0.0"
                two_jobs: true
                dependents_amount: "0.0"
                other_income: "0.0"
                deductions: "0.0"
                employee_id: 29
                w4_data_type: rev_2020_w4
          schema:
            $ref: '#/components/schemas/Employee-Federal-Tax'
      description: Example response
    Location-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 7d9753112507b9dda4fb97910f39b06e
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                phone_number: "5825710808"
                uuid: 04552eb9-7829-4b18-ae96-6983552948df
                street_1: 412 Kiera Stravenue
                street_2: Suite 391
                city: San Francisco
                state: CA
                zip: "94107"
                country: USA
                active: true
                filing_address: false
                mailing_address: false
                created_at: 2023-09-12T16:42:25.000-07:00
                updated_at: 2023-09-12T16:42:25.000-07:00
          schema:
            $ref: '#/components/schemas/Location'
      description: Example response
    Location-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 7d9753112507b9dda4fb97910f39b06e
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                phone_number: "5825710808"
                uuid: 04552eb9-7829-4b18-ae96-6983552948df
                street_1: 412 Kiera Stravenue
                street_2: Suite 391
                city: San Francisco
                state: CA
                zip: "94107"
                country: USA
                active: true
                filing_address: false
                mailing_address: false
                created_at: 2023-09-12T16:42:25.000-07:00
                updated_at: 2023-09-12T16:42:25.000-07:00
              - version: 15e6b9680e00f3122729e64e3cef3224
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                phone_number: "2866070827"
                uuid: fa94a2fd-11a8-4024-87ff-85c587d9d2b4
                street_1: 644 Fay Vista
                street_2: Suite 842
                city: Richmond
                state: VA
                zip: "23218"
                country: USA
                active: true
                filing_address: false
                mailing_address: false
                created_at: 2023-09-12T16:42:25.000-07:00
                updated_at: 2023-09-12T16:42:25.000-07:00
          schema:
            $ref: '#/components/schemas/LocationsGetCompanyLocationsResponse'
      description: Example response
    Contractor-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 63859768485e218ccf8a449bb60f14ed
                uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                wage_type: Fixed
                is_active: false
                type: Individual
                first_name: Kory
                last_name: Gottlieb
                middle_initial: P
                business_name: null
                ein: null
                has_ein: false
                has_ssn: true
                department: Backup Dancer
                department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                email: keira.west@mckenzie.org
                start_date: 2022-01-01
                file_new_hire_report: false
                work_state: null
                onboarded: true
                onboarding_status: contractor_onboarding_completed
                address:
                  street_1: 621 Jast Row
                  street_2: Apt. 281
                  city: Coral Springs
                  state: FL
                  zip: "33065"
                  country: USA
                hourly_rate: "0.00"
              - version: 8aab307f1e8ed788697f8986346af559
                uuid: 183a86f4-a803-4b38-9357-cd9b78e2560c
                company_uuid: afdd5d98-581b-4fc0-b988-706b7d23b2a5
                wage_type: Fixed
                is_active: true
                type: Business
                first_name: null
                last_name: null
                middle_initial: null
                business_name: Labadie-Stroman
                ein: XX-XXX0001
                has_ein: true
                has_ssn: false
                email: jonatan@kerluke.info
                start_date: 2022-01-01
                onboarded: true
                onboarding_status: contractor_onboarding_completed
                address:
                  street_1: 1625 Bednar Center
                  street_2: Apt. 480
                  city: Port Charlotte
                  state: FL
                  zip: "33954"
                  country: USA
                hourly_rate: "0.00"
                file_new_hire_report: false
                work_state: null
              - version: b48c46abfed1487b873b442334b3c4ff
                uuid: ea1c2d65-b622-4899-bcb7-5cd0fe0232aa
                id: 7757515807623484
                company_uuid: 281c763d-a2ba-4f51-b9e8-b1ed61576d62
                company_id: 7757616923763477
                wage_type: Fixed
                is_active: true
                type: Individual
                first_name: Chanel
                last_name: Boyle
                middle_initial: X
                business_name: null
                ein: null
                has_ein: false
                has_ssn: true
                email: loyal@hettinger.biz
                file_new_hire_report: true
                work_state: TX
                onboarded: true
                onboarding_status: contractor_onboarding_completed
                address:
                  street_1: 35913 Darrick Run
                  street_2: Apt. 913
                  city: Cypress
                  state: TX
                  zip: "77433"
                  country: USA
                hourly_rate: "0.00"
          schema:
            $ref: '#/components/schemas/ContractorsGetCompanyContractorsResponse'
      description: Example response
    Contractor-Object:
      content:
        application/json:
          examples:
            Individual Contractor:
              value:
                version: 63859768485e218ccf8a449bb60f14ed
                uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                wage_type: Hourly
                start_date: 2022-01-01
                is_active: false
                type: Individual
                first_name: Kory
                last_name: Gottlieb
                middle_initial: P
                business_name: null
                ein: null
                has_ein: false
                has_ssn: true
                department: Stage hand
                department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                email: keira.west@mckenzie.org
                file_new_hire_report: true
                work_state: FL
                onboarded: true
                onboarding_status: onboarding_completed
                address:
                  street_1: 621 Jast Row
                  street_2: Apt. 281
                  city: Coral Springs
                  state: FL
                  zip: "33065"
                  country: USA
                hourly_rate: "60.00"
            Business Contractor:
              value:
                version: 8aab307f1e8ed788697f8986346af559
                uuid: c7c0659c-21a6-4b4e-b74c-9252576fc68c
                company_uuid: 0ec4ae6e-e436-460d-b63c-94a14503d16f
                wage_type: Fixed
                start_date: 2022-01-01
                is_active: true
                type: Business
                first_name: null
                last_name: null
                middle_initial: null
                business_name: Labadie-Stroman
                ein: XX-XXX0001
                has_ein: true
                has_ssn: false
                email: jonatan@kerluke.info
                file_new_hire_report: false
                work_state: null
                onboarded: false
                onboarding_status: admin_onboarding_incomplete
                address:
                  street_1: 1625 Bednar Center
                  street_2: Apt. 480
                  city: Port Charlotte
                  state: FL
                  zip: "33954"
                  country: USA
                hourly_rate: "0.00"
          schema:
            $ref: '#/components/schemas/Contractor'
      description: Example response
    Contractor-Onboarding-Status-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                onboarding_status: admin_onboarding_incomplete
                onboarding_steps:
                - title: Basic details
                  id: basic_details
                  required: true
                  completed: false
                  requirements: []
                - title: Enter compensation details
                  id: compensation_details
                  required: true
                  completed: false
                  requirements: []
                - title: Add an address
                  id: add_address
                  required: true
                  completed: false
                  requirements: []
                - title: Payment details
                  id: payment_details
                  required: true
                  completed: false
                  requirements: []
                - title: Sign and acknowledge documents
                  id: sign_documents
                  required: false
                  completed: false
                  requirements:
                  - "basic_details,"
                  - add_address
                - title: File new hire report
                  id: file_new_hire_report
                  required: false
                  completed: false
                  requirements:
                  - basic_details
          schema:
            $ref: '#/components/schemas/Contractor-Onboarding-Status'
        application/xml:
          examples:
            Example:
              value:
                uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                onboarding_status: admin_onboarding_incomplete
                onboarding_steps:
                - title: Basic details
                  id: basic_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Enter compensation details
                  id: compensation_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Add an address
                  id: add_addressX
                  required: true
                  completed: false
                  requirements: []
                - title: Payment details
                  id: payment_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Sign and acknowledge documents
                  id: sign_documentsX
                  required: false
                  completed: false
                  requirements:
                  - "basic_details,"
                  - add_address
                - title: File new hire report
                  id: file_new_hire_reportX
                  required: false
                  completed: false
                  requirements:
                  - basic_details
          schema:
            $ref: '#/components/schemas/ContractorsGetOnboardingStatusResponse'
      description: Example response.
    Contractor-Payment-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 04552eb9-7829-4b18-ae96-6983552948df
                contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                bonus: "20.0"
                date: 2020-10-19
                hours: "40.0"
                payment_method: Direct Deposit
                reimbursement: "100.0"
                status: Unfunded
                hourly_rate: "18.0"
                may_cancel: true
                wage: "0.0"
                wage_type: Hourly
                wage_total: "740.00"
          schema:
            $ref: '#/components/schemas/Contractor-Payment'
      description: Example response
    Contractor-Payment-Method-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 63859768485e218ccf8a449bb60f14ed
                type: Direct Deposit
                split_by: Percentage
                splits:
                - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                  name: BoA Checking Account
                  priority: 1
                  split_amount: 100
          schema:
            $ref: '#/components/schemas/Contractor-Payment-Method'
      description: Example response
    Compensation-Object:
      content:
        application/json:
          examples:
            Exempt:
              value:
                version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                id: 1363316536327004
                uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                job_id: 1123581321345589
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                rate: "60000.00"
                payment_unit: Year
                flsa_status: Exempt
                effective_date: 2020-12-11
                adjust_for_minimum_wage: false
                minimum_wages: []
            Minimum Wage Adjusted:
              value:
                version: cc59bd3879d655fb940a1f6b675f2ad9
                id: 1363316536327003
                uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                job_id: 1123581321345589
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                rate: "5.00"
                payment_unit: Hour
                flsa_status: Nonexempt
                effective_date: 2018-12-11
                adjust_for_minimum_wage: true
                minimum_wages:
                - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                  wage: "7.25"
                  effective_date: 2018-12-11
          schema:
            $ref: '#/components/schemas/Compensation'
        application/xml:
          examples:
            Exempt:
              value:
                version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                id: 1363316536327004
                uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfde
                job_id: 1123581321345589
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                rate: "60000.00"
                payment_unit: Year
                flsa_status: Exempt
                effective_date: 2020-12-11
                adjust_for_minimum_wage: false
                minimum_wages: []
            Minimum Wage Adjusted:
              value:
                version: cc59bd3879d655fb940a1f6b675f2ad9
                id: 1363316536327003
                uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfd2
                job_id: 1123581321345589
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                rate: "5.00"
                payment_unit: Hour
                flsa_status: Nonexempt
                effective_date: 2018-12-11
                adjust_for_minimum_wage: true
                minimum_wages:
                - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                  wage: "7.25"
                  effective_date: 2018-12-11
          schema:
            $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationResponse'
      description: Example response
    Compensation-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                rate: "70.00"
                payment_unit: Hour
                flsa_status: Nonexempt
                effective_date: 2020-12-11
                adjust_for_minimum_wage: false
                minimum_wages: []
              - version: cc59bd3879d655fb940a1f6b675f2ad9
                id: 1363316536327003
                job_id: 1123581321345589
                uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                payment_unit: Hour
                flsa_status: Nonexempt
                effective_date: 2018-12-11
                rate: "5.00"
                adjust_for_minimum_wage: true
                minimum_wages:
                - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                  wage: "7.25"
                  effective_date: 2018-12-11
          schema:
            $ref: '#/components/schemas/JobsAndCompensationsGetJobCompensationsResponse'
      description: Example response
    Garnishment-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                description: Company loan to employee
                version: 52b7c567242cb7452e89ba2bc02cb476
                uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                active: true
                amount: "8.00"
                court_ordered: false
                times: 5
                recurring: false
                annual_maximum: null
                pay_period_maximum: "100.00"
                deduct_as_percentage: true
          schema:
            $ref: '#/components/schemas/Garnishment'
      description: Example response
    Garnishment-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - description: Child support
                version: 63152767c822d6b0385509b973c49dda
                uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
                employee_uuid: a6b53294-f871-4db2-bbd4-8c3d1fe56440
                active: true
                amount: "100.00"
                court_ordered: true
                times: null
                recurring: true
                annual_maximum: "400.00"
                pay_period_maximum: null
                deduct_as_percentage: false
              - description: Company loan to employee
                version: 52b7c567242cb7452e89ba2bc02cb476
                uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                active: true
                amount: "8.00"
                court_ordered: false
                times: 5
                recurring: false
                annual_maximum: null
                pay_period_maximum: "100.00"
                deduct_as_percentage: true
          schema:
            $ref: '#/components/schemas/GarnishmentsGetEmployeeGarnishmentsResponse'
      description: Example response
    Termination-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: d487dd0b55dfcacdd920ccbdaeafa351
                uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                active: true
                cancelable: true
                effective_date: 2020-03-10
                run_termination_payroll: false
          schema:
            $ref: '#/components/schemas/Termination'
      description: Example Response
    Termination-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: d487dd0b55dfcacdd920ccbdaeafa351
                uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                active: true
                cancelable: true
                effective_date: 2020-03-10
                run_termination_payroll: false
          schema:
            $ref: '#/components/schemas/EmployeeEmploymentsListEmployeeTerminationsResponse'
      description: Example response
    Time-Off-Request-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                id: 1
                status: approved
                employee_note: Vacation at Disney World!
                employer_note: But Universal has Harry Potter World...
                days:
                  "2019-06-01": "4.000"
                  "2019-06-02": "8.000"
                  "2019-06-03": "2.000"
                request_type: vacation
                employee:
                  id: "234567"
                  full_name: Jessica Gusto
                approver:
                  id: "345678"
                  full_name: Karen Gusto
                initiator:
                  id: 234567X
                  full_name: Jessica Gusto
          schema:
            $ref: '#/components/schemas/Time-Off-Request'
      description: Example response
    Time-Off-Request-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - id: 1
                status: approved
                employee_note: Vacation at Disney World!
                employer_note: But Universal has Harry Potter World...
                days:
                  "2019-06-01": "4.000"
                  "2019-06-02": "8.000"
                  "2019-06-03": "2.000"
                request_type: vacation
                employee:
                  id: 234567X
                  full_name: Jessica Gusto
                approver:
                  id: 345678X
                  full_name: Karen Gusto
                initiator:
                  id: 234567X
                  full_name: Jessica Gusto
              - id: 2
                status: pending
                employee_note: Coming down with the flu
                employer_note: ""
                days:
                  "2019-02-01": "8.000"
                request_type: sick
                employee:
                  id: "654321"
                  full_name: James Gusto
                approver: null
                initiator:
                  id: 654321X
                  full_name: James Gusto
          schema:
            items:
              $ref: '#/components/schemas/Time-Off-Request'
            type: array
      description: Example response
    Pay-Period-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - start_date: 2020-01-11
                end_date: 2020-01-24
                pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                payroll:
                  payroll_uuid: bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f
                  check_date: 2020-01-30
                  processed: true
                  payroll_deadline: 2020-01-28
                  payroll_type: regular
              - start_date: 2020-12-12
                end_date: 2020-12-25
                pay_schedule_uuid: cb53db72-612f-4eb1-9b85-389e79cfa510
                payroll:
                  payroll_uuid: 7ed29b45-4bb1-4d38-bd94-4d607d49fd21
                  check_date: 2020-12-30
                  processed: true
                  payroll_deadline: 2020-12-28
                  payroll_type: regular
          schema:
            $ref: '#/components/schemas/PaySchedulesGetPayPeriodsResponse'
      description: Example response
    Pay-Schedule-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
                frequency: Twice per month
                anchor_pay_date: 2020-05-15
                anchor_end_of_pay_period: 2020-05-08
                day_1: 15
                day_2: 31
                name: Engineering
                custom_name: A new monthly pay schedule
                auto_pilot: false
                active: true
          schema:
            $ref: '#/components/schemas/Pay-Schedule'
      description: Example response
    Pay-Schedule-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 2097fe08-407a-46d7-b35c-a32402a2355e
                frequency: Twice per month
                anchor_pay_date: 2020-05-15
                anchor_end_of_pay_period: 2020-05-08
                day_1: 15
                day_2: 31
                name: Engineering
                custom_name: Engineering department pay schedule
                auto_pilot: false
                active: true
              - uuid: 8fc9f556-74fa-4271-97f6-4bfbfc5a5352
                frequency: Monthly
                anchor_pay_date: 2020-05-31
                day_1: 31
                day_2: null
                name: Sales
                custom_name: Sales department monthly schedule
                auto_pilot: false
                active: false
              - uuid: 0e07d35a-af11-4123-bfcb-4dd5f2f12ee1
                frequency: Monthly
                anchor_pay_date: 2020-05-31
                day_1: 31
                day_2: null
                name: Staff
                custom_name: Staff department pay schedule
                auto_pilot: true
                active: false
          schema:
            $ref: '#/components/schemas/PaySchedulesListForCompanyResponse'
      description: Example response
    Benefit-Type-Requirements-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                employee_deduction:
                  required: true
                  editable: true
                  default_value: null
                  choices: null
                contribution:
                  required: true
                  editable: true
                  default_value:
                    type: percentage
                    value: 2
                  choices:
                  - percentage
                deduct_as_percentage:
                  required: true
                  editable: true
                  default_value: null
                  choices: null
                catch_up:
                  required: true
                  editable: true
                  default_value: null
                  choices: null
                limit_option:
                  required: false
                  editable: false
                  default_value: null
                  choices: null
                company_contribution_annual_maximum:
                  required: false
                  editable: false
                  default_value: null
                  choices: null
                coverage_salary_multiplier:
                  required: false
                  editable: false
                  default_value: null
                  choices: null
                coverage_amount:
                  required: false
                  editable: false
                  default_value: null
                  choices: null
          schema:
            $ref: '#/components/schemas/Benefit-Type-Requirements'
      description: Benefit type requirements response
    Supported-Benefit-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                description: Deductions and contributions for Medical Insurance
                benefit_type: 1
                name: Medical Insurance
                pretax: true
                posttax: false
                imputed: false
                healthcare: true
                retirement: false
                yearly_limit: false
          schema:
            $ref: '#/components/schemas/Supported-Benefit'
      description: Supported benefit response
    Supported-Benefit-List:
      content:
        application/json:
          examples:
            Supported Benefits:
              value:
              - description: Deductions and contributions for Medical Insurance
                benefit_type: 1
                name: Medical Insurance
                pretax: true
                posttax: false
                imputed: false
                healthcare: true
                retirement: false
                yearly_limit: false
                category: Health
              - description: Deductions and contributions for Dental Insurance
                benefit_type: 2
                name: Dental Insurance
                pretax: true
                posttax: false
                imputed: false
                healthcare: true
                retirement: false
                yearly_limit: false
                category: Health
              - description: Deductions and contributions for Vision Insurance
                benefit_type: 3
                name: Vision Insurance
                pretax: true
                posttax: false
                imputed: false
                healthcare: true
                retirement: false
                yearly_limit: false
                category: Health
              - description: Health Savings Accounts (HSA) allow employees to be reimbursed
                  for qualified medical expenses. Contributions are pre-tax and lower
                  the total amount of tax paid by employees and the employer. Employers
                  may also make tax-free contributions to employees' HSA. Remaining
                  balances are carried over in next year.
                benefit_type: 6
                name: Health Savings Account
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: true
                category: Health
              - description: Flexible Spending Accounts (FSA) allow employees to be
                  reimbursed for qualified medical expenses. Contributions are pre-tax
                  and lower the total amount of tax paid by employees and the employer.
                  Employers may also make tax-free contributions to employees' FSA.
                  Remaining balances are not carried over in next year.
                benefit_type: 7
                name: Health FSA
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: true
                category: Health
              - description: Dependent Care FSA reimburses employees for expenses
                  to care for dependents while the employee is at work (e.g. Daycares).
                  Contributions are pre-tax and lower the total amount of tax paid
                  by employees and the employer. Employers may also make tax-free
                  contributions to employee FSA. Remaining balances are not carried
                  over to the next year. Single parents or Married couples filing
                  a joint return can elect up to $5000 per year. Married couples filing
                  separate returns are limited to $2500 elections each.
                benefit_type: 11
                name: Dependent Care FSA
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: true
                category: Health
              - description: The SIMPLE IRA is a tax-deferred retirement savings plan
                  for employees. It is often used by small businesses as an alternative
                  to 401(k) due to its relatively low operating cost. Employers are
                  required to contribute a specific percentage to an employee's SIMPLE
                  IRA.
                benefit_type: 8
                name: SIMPLE IRA
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "Roth 401(k) is an after-tax savings plan for employees.\
                  \ The standard maximum is $18,000, or $24,000 for employees over\
                  \ 50 years old."
                benefit_type: 105
                name: Roth 401(k)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "Roth 403(b) is an after-tax savings plan for certain\
                  \ clerics, employees of public schools, and employees of other types\
                  \ of tax-exempt organizations. Contributions made by employees are\
                  \ taxable for federal and state withholding. Often, employers contribute\
                  \ additional pre-tax dollars to the employee’s Roth account to encourage\
                  \ saving for retirement."
                benefit_type: 110
                name: Roth 403(b)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "401(k) is tax-deferred retirement savings plan for employees.\
                  \ The standard maximum is $18,000, or $24,000 for employees over\
                  \ 50 years old."
                benefit_type: 5
                name: 401(k)
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "403(b) is tax-deferred retirement savings plan for certain\
                  \ clerics, employees of public schools, and employees of other types\
                  \ of tax-exempt organizations."
                benefit_type: 9
                name: 403(b)
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "A SEP-IRA is a pre-tax retirement savings plan where\
                  \ only the employer contributes. It is often used by small businesses\
                  \ as an alternative to 401(k) due to its relatively low operating\
                  \ cost. Employers are required to contribute the same percentage\
                  \ to all enrolled employees, with a maximum contribution of 25%\
                  \ of the employee’s compensation."
                benefit_type: 108
                name: SEP-IRA
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "A SARSEP is a pre-tax retirement savings plan used by\
                  \ small businesses as an alternative to 401(k) due to its relatively\
                  \ low operating cost. While new SARSEP plans are not available,\
                  \ there are still some companies that are grandfathered into the\
                  \ plan. Employers are required to contribute the same percentage\
                  \ to all enrolled employees, with a maximum contribution of 25%\
                  \ of the employee’s compensation."
                benefit_type: 109
                name: SARSEP
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: true
                yearly_limit: true
                category: Savings and Retirement
              - description: "Group-Term Life Insurance for coverage in excess of\
                  \ $50,000 per employee is a taxable fringe benefit. See IRS Publication\
                  \ 15-B to determine the dollar value of the excess coverage."
                benefit_type: 107
                name: Group-Term Life Insurance
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Tax-free commuter benefits for transit, vanpooling,\
                  \ bicycling, and work-related parking costs. The annual maximum\
                  \ contribution for this pre-tax benefit is in the IRS publication\
                  \ 15-B."
                benefit_type: 10
                name: Commuter Benefits (pre-tax)
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: "When an employee uses a company-owned car for personal\
                  \ matters, it is considered taxable benefit provided in-kind."
                benefit_type: 106
                name: Personal Use of Company Car
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: 529 College Savings is an after-tax savings plan for
                  employees designed to encourage saving for future college costs.
                  This benefit should be reported as a taxable benefit and will therefore
                  be taxed.
                benefit_type: 111
                name: 529 College Savings
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Other
              - description: Student Loan Repayment is an after-tax savings plan for
                  employees to pay towards their outstanding student loans. An employee
                  can choose to set aside after-tax dollars towards this benefit.
                  These benefits should be reported as a taxable benefit and will
                  therefore be taxed.
                benefit_type: 112
                name: Student Loan Repayment
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Other
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 998
                name: Short Term Disability (post-tax)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 999
                name: Long Term Disability (post-tax)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 996
                name: Short Term Disability (pre-tax)
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 997
                name: Long Term Disability (pre-tax)
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 991
                name: Voluntary Short Term Disability (post-tax)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 992
                name: Voluntary Long Term Disability (post-tax)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Third Party Disability or Third Party Leave are policies\
                  \ offered by employers that pay an employee for a specific life\
                  \ event (maternity leave, injury). All payments made to employees\
                  \ come from a third-party, such as an insurer. For more information\
                  \ on the taxation of these plans, please refer to publication 15-A\
                  \ for more details."
                benefit_type: 993
                name: Voluntary Life (post-tax)
                pretax: false
                posttax: true
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Health
              - description: "Tax-free commuter benefits allow employees to reduce\
                  \ their monthly commuting expenses for transit, carpooling, bicycling,\
                  \ and work-related parking costs. Please note that there is an annual\
                  \ maximum for this pre-tax benefit. The maximum dollar amount is\
                  \ found in IRS Publication 15-B."
                benefit_type: 113
                name: Commuter Parking
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: "Tax-free commuter benefits allow employees to reduce\
                  \ their monthly commuting expenses for transit, carpooling, bicycling,\
                  \ and work-related parking costs. Please note that there is an annual\
                  \ maximum for this pre-tax benefit. The maximum dollar amount is\
                  \ found in IRS Publication 15-B."
                benefit_type: 114
                name: Commuter Transit
                pretax: true
                posttax: false
                imputed: false
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: Other taxable benefit
                benefit_type: 100
                name: Other (taxable)
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Other
              - description: "Employer-sponsored benefits like this are called fringe\
                  \ benefits, and they don’t get special tax treatment—they’ll be\
                  \ reported as taxable wages on your employees’ paystubs."
                benefit_type: 201
                name: Cell Phone (taxable)
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: "Employer-sponsored benefits like this are called fringe\
                  \ benefits, and they don’t get special tax treatment—they’ll be\
                  \ reported as taxable wages on your employees’ paystubs."
                benefit_type: 202
                name: Gym & Fitness (taxable)
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: "Employer-sponsored benefits like this are called fringe\
                  \ benefits, and they don’t get special tax treatment—they’ll be\
                  \ reported as taxable wages on your employees’ paystubs."
                benefit_type: 203
                name: Housing (taxable)
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
              - description: "Employer-sponsored benefits like this are called fringe\
                  \ benefits, and they don’t get special tax treatment—they’ll be\
                  \ reported as taxable wages on your employees’ paystubs."
                benefit_type: 204
                name: Wellness (taxable)
                pretax: false
                posttax: true
                imputed: true
                healthcare: false
                retirement: false
                yearly_limit: false
                category: Transportation
          schema:
            $ref: '#/components/schemas/CompanyBenefitsListSupportedBenefitsResponse'
      description: Example response
    Admin-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                first_name: John
                last_name: Smith
                email: jsmith99@gmail.com
                uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
          schema:
            $ref: '#/components/schemas/Admin'
      description: Example response
    Admin-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - first_name: Katherine
                last_name: Johnson
                email: Katherine@acmecorp.com
                uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
              - first_name: Anita
                last_name: Borg
                email: Anita@acmecorp.com
                uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
          schema:
            $ref: '#/components/schemas/CompaniesGetAllAdminsResponse'
      description: Example response
    Company-Benefit-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                description: Kaiser Permanente
                version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                company_uuid: 881ce3f2-e3e1-49c9-8ad4-0bcf515f5618
                benefit_type: 1
                active: true
                deletable: true
                supports_percentage_amounts: true
                responsible_for_employer_taxes: false
                responsible_for_employee_w2: false
          schema:
            $ref: '#/components/schemas/Company-Benefit'
      description: Example response
    Company-Benefit-List:
      content:
        application/json:
          examples:
            Example:
              description: OK
              value:
              - description: Kaiser Permanente
                version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                company_uuid: 528cc543-8a41-497e-b479-23a4c5ec77ac
                benefit_type: 1
                active: true
                deletable: true
                supports_percentage_amounts: true
                responsible_for_employer_taxes: false
                responsible_for_employee_w2: false
          schema:
            $ref: '#/components/schemas/CompanyBenefitsGetBenefitsForCompanyResponse'
      description: Example response
    Company-Custom-Field-List:
      content:
        application/json:
          examples:
            Example:
              value:
                custom_fields:
                - description: Employee Level
                  uuid: ea7e5d57-6abb-47d7-b654-347c142886c0
                  name: employee_level
                  type: text
                  selection_options: null
                - description: What is your t-shirt size?
                  uuid: 299650e4-e970-4acf-9bf0-6f05585d20ba
                  name: t-shirt size
                  type: text
                  selection_options: null
                - description: Which is your favorite fruit?
                  uuid: 024ec137-6c92-43a3-b061-14a9720531d6
                  name: favorite fruit
                  type: radio
                  selection_options:
                  - apple
                  - banana
                  - orange
          schema:
            $ref: '#/components/schemas/CompaniesGetCustomFieldsResponse'
      description: Example response
    Earning-Type-List:
      content:
        application/json:
          examples:
            Example:
              value:
                default:
                - name: Bonus
                  uuid: b82e35c5-d7c6-4705-9e16-9f87499ade18
                - name: Cash Tips
                  uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
                - name: Commission
                  uuid: 60191999-004a-49d9-b163-630574433653
                - name: Correction Payment
                  uuid: 368226e0-8e8c-48f0-bc91-aee46caafbc9
                - name: Minimum Wage Adjustment
                  uuid: 88a2e519-9ff5-4c19-9071-6a709f3c2939
                - name: Paycheck Tips
                  uuid: a3eaf03d-e712-4144-8f9b-71a85528adcf
                - name: Severance
                  uuid: a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63
                custom:
                - name: Gym Membership Stipend
                  uuid: 6b4a8efb-db90-4c13-a75f-aae11b3f4ff9
          schema:
            $ref: '#/components/schemas/EarningTypesGetAllResponse'
      description: Example response
    Earning-Type-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                name: Gym Membership Stipend
                uuid: f4dc8972-8830-4c07-b623-349a04b040d7
          schema:
            $ref: '#/components/schemas/Earning-Type'
      description: Example response
    Employee-Benefit-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 09j3d29jqdpj92109j9j2d90dq
                employee_uuid: 908123091820398
                company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                active: true
                uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                employee_deduction: "100.00"
                employee_deduction_annual_maximum: "200.00"
                company_contribution_annual_maximum: "200.00"
                limit_option: null
                deduct_as_percentage: false
                catch_up: false
                coverage_amount: null
                deduction_reduces_taxable_income: null
                coverage_salary_multiplier: "0.00"
                contribution:
                  type: amount
                  value: "100.00"
            Tiered example:
              value:
                version: string
                employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                active: true
                uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                employee_deduction: "0.00"
                deduct_as_percentage: false
                employee_deduction_annual_maximum: string
                contribution:
                  type: tiered
                  value:
                    tiers:
                    - rate: "5.0"
                      threshold: "2.0"
                      threshold_delta: "2.0"
                    - rate: "3.0"
                      threshold: "5.0"
                      threshold_delta: "3.0"
                elective: false
                company_contribution_annual_maximum: string
                limit_option: string
                catch_up: false
                coverage_amount: string
                deduction_reduces_taxable_income: unset
                coverage_salary_multiplier: "0.00"
          schema:
            $ref: '#/components/schemas/Employee-Benefit'
      description: Example response
    Employee-Benefit-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - version: 09j3d29jqdpj92109j9j2d90dq
                employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                active: true
                uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                employee_deduction: "100.00"
                company_contribution: "100.00"
                employee_deduction_annual_maximum: "200.00"
                company_contribution_annual_maximum: "200.00"
                limit_option: null
                deduct_as_percentage: false
                contribute_as_percentage: false
                catch_up: false
                coverage_amount: null
                deduction_reduces_taxable_income: null
                coverage_salary_multiplier: "0.00"
          schema:
            $ref: '#/components/schemas/EmployeeBenefitsGetAllForEmployeeResponse'
      description: Example response
    Payroll-Update-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                payroll_deadline: 2022-02-18T22:00:00Z
                check_date: 2021-02-22
                off_cycle: false
                external: false
                processed: false
                processed_date: null
                calculated_at: null
                payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                created_at: 2022-02-01T22:00:00Z
                pay_period:
                  start_date: 2021-02-01
                  end_date: 2021-02-15
                  pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                payroll_status_meta:
                  cancellable: false
                  expected_check_date: 2022-02-22
                  initial_check_date: 2022-02-22
                  expected_debit_time: 2022-02-18T22:00:00Z
                  payroll_late: false
                  initial_debit_cutoff_time: 2022-02-18T22:00:00Z
                employee_compensations:
                - version: 4ba36d23a78c7393b4900ef38019d8ff
                  employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                  excluded: false
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Nonexempt
                  - name: Overtime
                    hours: "15.000"
                    job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                    compensation_multiplier: 1.5
                    flsa_status: Nonexempt
                  - name: Double overtime
                    hours: "0.000"
                    job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                    compensation_multiplier: 2
                    flsa_status: Nonexempt
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                    compensation_multiplier: 1
                    flsa_status: Nonexempt
                  - name: Overtime
                    hours: "5.000"
                    job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                    compensation_multiplier: 1.5
                    flsa_status: Nonexempt
                  - name: Double overtime
                    hours: "0.000"
                    job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                    compensation_multiplier: 2
                    flsa_status: Nonexempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                - version: ff083257a5583291fb86656ad0df1b42
                  employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                  excluded: false
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Commission Only Exempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                - version: 259816479e3729bf855318af9b9adddf
                  employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                  excluded: false
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Exempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                fixed_compensation_types:
                - name: Bonus
                - name: Commission
                - name: Paycheck Tips
                - name: Cash Tips
                - name: Correction Payment
                - name: Anniversary Bonus
                - name: Internet Stipend
                - name: Reimbursement
          schema:
            $ref: '#/components/schemas/Payroll-Prepared'
      description: A prepared payroll
    Payroll-Show-Object:
      content:
        application/json:
          examples:
            Unprocessed:
              value:
                payroll_deadline: 2021-02-18T22:00:00Z
                check_date: 2021-02-22
                off_cycle: false
                external: false
                processed: false
                processed_date: null
                calculated_at: null
                payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                created_at: 2022-02-01T22:00:00Z
                pay_period:
                  start_date: 2021-02-01
                  end_date: 2021-02-15
                  pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                payroll_status_meta:
                  cancellable: false
                  expected_check_date: 2021-02-22
                  initial_check_date: 2021-02-22
                  expected_debit_time: 2021-02-18T22:00:00Z
                  payroll_late: false
                  initial_debit_cutoff_time: 2021-02-18T22:00:00Z
            Processed:
              value:
                payroll_deadline: 2021-02-18T22:00:00Z
                check_date: 2021-02-22
                off_cycle: false
                external: false
                processed: true
                processed_date: 2021-02-18
                calculated_at: 2021-02-18T12:00:00Z
                payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                created_at: 2022-02-01T22:00:00Z
                pay_period:
                  start_date: 2021-02-01
                  end_date: 2021-02-15
                  pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                totals:
                  company_debit: "121747.71"
                  net_pay_debit: "79283.80"
                  tax_debit: "42463.91"
                  reimbursement_debit: "0.00"
                  child_support_debit: "0.00"
                  reimbursements: "0.00"
                  net_pay: "81752.94"
                  gross_pay: "130635.89"
                  employee_bonuses: "0.00"
                  employee_commissions: "18536.37"
                  employee_cash_tips: "0.00"
                  employee_paycheck_tips: "0.00"
                  additional_earnings: "0.00"
                  owners_draw: "0.00"
                  check_amount: "2469.14"
                  employer_taxes: "6917.19"
                  employee_taxes: "35546.72"
                  benefits: "0.00"
                  employee_benefits_deductions: "13336.23"
                  deferred_payroll_taxes: "0.00"
                company_taxes:
                - name: MO Compensation Deduction
                  amount: "-0.92"
                  employer: true
                - name: NY MCTMT
                  amount: "5.00"
                  employer: true
                payroll_status_meta:
                  cancellable: false
                  expected_check_date: 2021-02-22
                  initial_check_date: 2021-02-22
                  expected_debit_time: 2021-02-18T22:00:00Z
                  payroll_late: false
                  initial_debit_cutoff_time: 2021-02-18T22:00:00Z
                employee_compensations:
                - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                  excluded: false
                  gross_pay: "2791.25"
                  net_pay: "1953.31"
                  check_amount: "1953.31"
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Nonexempt
                  - name: Overtime
                    hours: "15.000"
                    job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                    compensation_multiplier: 1.5
                    flsa_status: Nonexempt
                  - name: Double overtime
                    hours: "0.000"
                    job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                    compensation_multiplier: 2
                    flsa_status: Nonexempt
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                    compensation_multiplier: 1
                    flsa_status: Nonexempt
                  - name: Overtime
                    hours: "5.000"
                    job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                    compensation_multiplier: 1.5
                    flsa_status: Nonexempt
                  - name: Double overtime
                    hours: "0.000"
                    job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                    compensation_multiplier: 2
                    flsa_status: Nonexempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                  benefits:
                  - name: Group Term Life
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: true
                  - name: 401K
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: false
                  deductions:
                  - name: Child Support
                    amount: "80.00"
                  taxes:
                  - name: Federal Income Tax
                    employer: false
                    amount: "646.69"
                  - name: Social Security
                    employer: true
                    amount: "191.25"
                - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                  excluded: false
                  gross_pay: "2791.25"
                  net_pay: "1953.31"
                  check_amount: "1953.31"
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Commission Only Exempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                  benefits:
                  - name: Group Term Life
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: true
                  - name: 401K
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: false
                  deductions:
                  - name: Child Support
                    amount: "80.00"
                  taxes:
                  - name: Federal Income Tax
                    employer: false
                    amount: "646.69"
                  - name: Social Security
                    employer: true
                    amount: "191.25"
                - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                  excluded: false
                  gross_pay: "2791.25"
                  net_pay: "1953.31"
                  check_amount: "1953.31"
                  payment_method: Direct Deposit
                  fixed_compensations:
                  - name: Bonus
                    amount: "100.00"
                    job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                  - name: Reimbursement
                    amount: "100.00"
                    job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                  hourly_compensations:
                  - name: Regular Hours
                    hours: "40.000"
                    job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                    compensation_multiplier: 1
                    flsa_status: Exempt
                  paid_time_off:
                  - name: Vacation Hours
                    hours: "20.000"
                  - name: Sick Hours
                    hours: "0.000"
                  - name: Holiday Hours
                    hours: "0.000"
                  benefits:
                  - name: Group Term Life
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: true
                  - name: 401K
                    employee_deduction: "100.00"
                    company_contribution: "50.00"
                    imputed: false
                  deductions:
                  - name: Child Support
                    amount: "80.00"
                  taxes:
                  - name: Federal Income Tax
                    employer: false
                    amount: "646.69"
                  - name: Social Security
                    employer: true
                    amount: "191.25"
          schema:
            $ref: '#/components/schemas/Payroll'
      description: Example response
    Payroll-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - payroll_deadline: 2021-02-18T22:00:00Z
                check_date: 2021-02-22
                off_cycle: false
                external: false
                processed: true
                processed_date: 2021-02-18
                calculated_at: 2021-02-18T12:00:00Z
                payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                created_at: 2021-02-01T22:00:00Z
                pay_period:
                  start_date: 2021-02-01
                  end_date: 2021-02-15
                  pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                totals:
                  company_debit: "121747.71"
                  net_pay_debit: "79283.80"
                  tax_debit: "42463.91"
                  reimbursement_debit: "0.00"
                  child_support_debit: "0.00"
                  reimbursements: "0.00"
                  net_pay: "81752.94"
                  gross_pay: "130635.89"
                  employee_bonuses: "0.00"
                  employee_commissions: "18536.37"
                  employee_cash_tips: "0.00"
                  employee_paycheck_tips: "0.00"
                  additional_earnings: "0.00"
                  owners_draw: "0.00"
                  check_amount: "2469.14"
                  employer_taxes: "6917.19"
                  employee_taxes: "35546.72"
                  benefits: "0.00"
                  employee_benefits_deductions: "13336.23"
                  deferred_payroll_taxes: "0.00"
              - payroll_deadline: 2021-02-28
                check_date: 2021-03-01
                off_cycle: false
                external: false
                processed: false
                processed_date: nil
                calculated_at: nil
                payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                created_at: 2022-02-01T22:00:00Z
                pay_period:
                  start_date: 2021-02-16
                  end_date: 2021-03-01
                  pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
          schema:
            $ref: '#/components/schemas/PayrollsGetCompanyPayrollsResponse'
      description: Example response
    Payment-Configs-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
                fast_payment_limit: "5000"
                payment_speed: 2-day
          schema:
            $ref: '#/components/schemas/Payment-Configs'
      description: Example response
    Company-Bank-Account-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                account_type: Checking
                routing_number: "851070439"
                hidden_account_number: XXXX4087
                verification_status: verified
                verification_type: bank_deposits
                name: Employer Funding Account
          schema:
            $ref: '#/components/schemas/Company-Bank-Account'
      description: Example response
    Company-Bank-Account-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                account_type: Checking
                routing_number: "851070439"
                hidden_account_number: XXXX4087
                verification_status: verified
                verification_type: bank_deposits
                name: Employer Funding Account
          schema:
            $ref: '#/components/schemas/BankAccountsListCompanyBankAccountsResponse'
      description: Example response
    Employee-Bank-Account-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                name: BoA Checking Account
                routing_number: "266905059"
                hidden_account_number: XXXX1207
                account_type: Checking
          schema:
            $ref: '#/components/schemas/Employee-Bank-Account'
      description: Example response
    Employee-Bank-Account-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                name: BoA Checking Account
                routing_number: "266905059"
                hidden_account_number: XXXX1207
                account_type: Checking
          schema:
            $ref: '#/components/schemas/EmployeePaymentMethodListBankAccountsResponse'
      description: Example response
    Employee-Payment-Method-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: 63859768485e218ccf8a449bb60f14ed
                type: Direct Deposit
                split_by: Amount
                splits:
                - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                  name: BoA Checking Account
                  priority: 1
                  split_amount: 500
                - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                  name: Chase Checking Account
                  priority: 2
                  split_amount: 1000
                - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                  name: US Bank Checking Account
                  priority: 3
                  split_amount: null
          schema:
            $ref: '#/components/schemas/Employee-Payment-Method'
      description: Example response
    Federal-Tax-Details-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                version: string
                tax_payer_type: string
                taxable_as_scorp: false
                filing_form: string
                has_ein: true
                ein_verified: true
                legal_name: string
          schema:
            $ref: '#/components/schemas/Federal-Tax-Details'
      description: Example response
    Employee-State-Taxes-List:
      content:
        application/json:
          examples:
            Employee-State-Taxes-List-Example:
              value:
                employee_uuid: 92fa4d30-e284-43d0-a26e-605619c04beb
                file_new_hire_report: false
                is_work_state: true
                state: CA
                questions:
                - description: |
                    The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
                  label: Filing Status
                  key: filing_status
                  input_question_format:
                    type: Select
                    options:
                    - value: S
                      label: Single
                    - value: M
                      label: Married one income
                    - value: MD
                      label: Married dual income
                    - value: H
                      label: Head of household
                    - value: E
                      label: Do Not Withhold
                  answers:
                  - value: S
                    valid_from: 2010-01-01
                    valid_up_to: null
                - description: |
                    This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.
                  label: Withholding Allowance
                  key: withholding_allowance
                  input_question_format:
                    type: Number
                  answers:
                  - value: 1
                    valid_from: 2010-01-01
                    valid_up_to: null
                - description: You can withhold an additional amount of California
                    income taxes here.
                  label: Additional Withholding
                  key: additional_withholding
                  input_question_format:
                    type: Currency
                  answers:
                  - value: "0.0"
                    valid_from: 2010-01-01
                    valid_up_to: null
                - description: State law requires you to file a new hire report within
                    20 days of hiring or re-hiring an employee.
                  label: File a New Hire Report?
                  key: file_new_hire_report
                  input_question_format:
                    type: Select
                  answers:
                  - value: true
                    valid_from: 2010-01-01
                    valid_up_to: null
          schema:
            $ref: '#/components/schemas/EmployeeTaxSetupGetStateTaxesResponse'
      description: Example response
    Employee-Onboarding-Status-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                onboarding_status: admin_onboarding_incomplete
                onboarding_steps:
                - title: Personal details
                  id: personal_details
                  required: true
                  completed: false
                  requirements: []
                - title: Enter compensation details
                  id: compensation_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Add work address
                  id: add_work_address
                  required: true
                  completed: false
                  requirements: []
                - title: Add home address
                  id: add_home_address
                  required: true
                  completed: false
                  requirements: []
                - title: Enter federal tax withholdings
                  id: federal_tax_setupX
                  required: true
                  completed: false
                  requirements: []
                - title: Enter state tax information
                  id: state_tax_setup
                  required: true
                  completed: false
                  requirements:
                  - add_work_address
                  - add_home_address
                - title: Direct deposit setup
                  id: direct_deposit_setup
                  required: false
                  completed: false
                  requirements: []
                - title: Employee form signing
                  id: employee_form_signing
                  required: true
                  completed: false
                  requirements:
                  - federal_tax_setup
                  - state_tax_setup
          schema:
            $ref: '#/components/schemas/Employee-Onboarding-Status'
        application/xml:
          examples:
            Example:
              value:
                uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                onboarding_status: admin_onboarding_incomplete
                onboarding_steps:
                - title: Personal details
                  id: personal_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Enter compensation details
                  id: compensation_detailsX
                  required: true
                  completed: false
                  requirements: []
                - title: Add work address
                  id: add_work_addressX
                  required: true
                  completed: false
                  requirements: []
                - title: Add home address
                  id: add_home_addressX
                  required: true
                  completed: false
                  requirements: []
                - title: Enter federal tax withholdings
                  id: federal_tax_setupX
                  required: true
                  completed: false
                  requirements: []
                - title: Enter state tax information
                  id: state_tax_setupX
                  required: true
                  completed: false
                  requirements:
                  - add_work_address
                  - add_home_address
                - title: Direct deposit setup
                  id: direct_deposit_setupX
                  required: false
                  completed: false
                  requirements: []
                - title: Employee form signing
                  id: employee_form_signingX
                  required: true
                  completed: false
                  requirements:
                  - federal_tax_setup
                  - state_tax_setup
          schema:
            $ref: '#/components/schemas/EmployeesGetOnboardingStatusResponse'
      description: Example response.
    Payroll-Blocker-List:
      content:
        application/json:
          examples:
            Payroll Blockers:
              value:
              - key: wc_pending_approval
                message: Worker's compensation policy needs to be accepted.
              - key: eftps_in_error
                message: We could not make payments to the Electronic Federal Tax
                  Payment System.
              - key: geocode_error
                message: Company or employee address could not be verified. Please
                  ensure all addresses are valid.
              - key: geocode_needed
                message: Company or employee address verification is missing. Please
                  ensure all addresses are entered correctly.
              - key: pay_schedule_setup_not_complete
                message: Some employees don’t have a pay schedule set up yet. Please
                  complete this step to run payroll.
              - key: invalid_signatory
                message: A signatory who is authorized to sign documents on behalf
                  of your company is required. Please ensure their identity verification
                  is successful.
              - key: suspended
                message: Company is suspended and cannot run payroll.
              - key: soft_suspended
                message: Company is placed in a 'soft' suspension state and requires
                  missing/incorrect information to be corrected.
              - key: pending_payroll_review
                message: Payroll is blocked. We are reviewing payroll information
                  in your account. Please contact support if you believe this is an
                  error.
              - key: pending_recovery_case
                message: Payroll is blocked due to an open recovery case. Please contact
                  support if you believe this is an error.
              - key: pending_information_request
                message: Payroll is blocked due to an open information request. Please
                  contact support if you believe this is an error.
              - key: needs_approval
                message: Company needs to be approved to run payroll.
              - key: missing_addresses
                message: Company must add addresses in order to run payroll.
              - key: missing_federal_tax_setup
                message: Company must complete federal tax setup in order to run payroll.
              - key: missing_industry_selection
                message: Company must complete industry selection in order to run
                  payroll.
              - key: missing_bank_info
                message: Company must have a bank account in order to run payroll.
              - key: missing_employee_setup
                message: Company must add employees in order to run payroll.
              - key: missing_state_tax_setup
                message: Company must complete state tax setup in order to run payroll.
              - key: missing_pay_schedule
                message: Company must have a pay schedule in order to run payroll.
              - key: missing_forms
                message: Company forms must be signed in order to run payroll.
              - key: missing_bank_verification
                message: Company bank account must be verified in order to run payroll.
              - key: missing_signatory
                message: Company must have a verified signatory in order to run payroll.
          schema:
            $ref: '#/components/schemas/PayrollsGetAllPayrollBlockersResponse'
      description: Example response
    Generated-Document:
      content:
        application/json:
          examples:
            Example:
              value:
                document_urls:
                - https://document.url.com
                request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                status: succeeded
          schema:
            $ref: '#/components/schemas/Generated-Document'
      description: Example response
    Notification:
      content:
        application/json:
          examples:
            Example:
              value:
                title: "Action required: Additional information needed to process\
                  \ payroll"
                uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
                company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
                message: "If we do not receive this information as soon as possible,\
                  \ your payroll may not be processed on time."
                category: information_request
                actionable: true
                published_at: 2022-01-01T00:00:00.000Z
          schema:
            $ref: '#/components/schemas/Notification'
      description: Example response
    Event-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: f7397a24-57ad-4fae-b011-d258e8232900
                event_type: employee.bank_account.created
                resource_type: Company
                resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                entity_type: BankAccount
                entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                timestamp: 1686784995
          schema:
            $ref: '#/components/schemas/EventsGet30DayEventsResponse'
      description: Example response
    Payroll-Check:
      content:
        application/json:
          examples:
            Example:
              value:
                payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
                printing_format: top
                starting_check_number: "10"
                request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                status: pending
          schema:
            $ref: '#/components/schemas/Payroll-Check'
      description: Example response
    Payroll-Receipt:
      content:
        application/json:
          examples:
            Example:
              value:
                totals:
                  company_debit: "1080.47"
                  net_pay_debit: "748.34"
                  child_support_debit: "100.0"
                  reimbursement_debit: "50.0"
                  tax_debit: "182.13"
                taxes:
                - name: Federal Income Tax
                  amount: "30.36"
                - name: Social Security
                  amount: "104.54"
                - name: Medicare
                  amount: "24.46"
                - name: Additional Medicare
                  amount: "0.0"
                - name: TX SUTA
                  amount: "22.77"
                - name: FUTA
                  amount: "0.0"
                employee_compensations:
                - employee_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                  employee_first_name: Patricia
                  employee_last_name: Hamill
                  payment_method: Direct Deposit
                  net_pay: "748.34"
                  total_tax: "182.13"
                  total_garnishments: "0.0"
                  child_support_garnishment: "100.0"
                  total_reimbursement: "50.0"
                licensee:
                  name: "Gusto, Zenpayroll Inc."
                  address: 525 20th St
                  city: San Francisco
                  state: CA
                  postal_code: "94107"
                  phone_number: "4157778888"
                payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                name_of_sender: Torp and Sons and Sons
                name_of_recipient: Payroll Recipients
                recipient_notice: Payroll recipients include the employees listed
                  below plus the tax agencies for the taxes listed below.
                debit_date: 2022-06-02
                license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter.\
                  \ For more about Gusto’s licenses and your state-specific rights\
                  \ to request information, submit complaints, dispute errors, or\
                  \ cancel transactions, visit our license page."
                license_uri: https://gusto.com/about/licenses
                right_to_refund: https://gusto.com/about/licenses
                liability_of_licensee: https://gusto.com/about/licenses
          schema:
            $ref: '#/components/schemas/Payroll-Receipt'
      description: Example response
    Payroll-Reversal-List:
      content:
        application/json:
          examples:
            Example:
              value:
                reversed_payroll_uuid: 09505984-8d8c-41a3-adbe-5740322ae8e9
                reversal_payroll_uuid: 0424688e-0a2e-4cd0-ac86-42283e788fb3
                reason: Customer Request
                approved_at: null
                category: convert_check_ee_requested
                reversed_employee_uuids:
                - 5f036964-185e-4c85-bbf2-3873e1203b30
          schema:
            $ref: '#/components/schemas/Payroll-Reversal'
      description: Example response
    Gross-Up-Pay:
      content:
        application/json:
          examples:
            Example:
              value:
                net_pay: "1183.25"
          schema:
            $ref: '#/components/schemas/Gross-Up-Pay'
      description: Example response
    Contractor-Payment-Receipt:
      content:
        application/json:
          examples:
            Example:
              value:
                receipt_id: 7757500935137343
                contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                name_of_recipient: Patricia Hamill
                totals:
                  company_debit: "748.34"
                contractor_payments:
                - contractor_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                  contractor_first_name: Patricia
                  contractor_last_name: Hamill
                  contractor_business_name: ""
                  contractor_type: Individual
                  payment_method: Direct Deposit
                  wage: "448.34"
                  bonus: "248.00"
                  reimbursement: "100.00"
                licensee:
                  name: "Gusto, Zenpayroll Inc."
                  address: 525 20th St
                  city: San Francisco
                  state: CA
                  postal_code: "94107"
                  phone_number: "4157778888"
                company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                name_of_sender: Torp and Sons and Sons
                debit_date: 2022-06-02
                license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter.\
                  \ For more about Gusto’s licenses and your state-specific rights\
                  \ to request information, submit complaints, dispute errors, or\
                  \ cancel transactions, visit our license page."
                license_uri: https://gusto.com/about/licenses
                right_to_refund: https://gusto.com/about/licenses
                liability_of_licensee: https://gusto.com/about/licenses
          schema:
            $ref: '#/components/schemas/Contractor-Payment-Receipt'
      description: Example response
    Contractor-Bank-Account-Object:
      content:
        application/json:
          examples:
            Example:
              value:
                uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                name: BoA Checking Account
                routing_number: "266905059"
                hidden_account_number: XXXX1207
                account_type: Checking
          schema:
            $ref: '#/components/schemas/Contractor-Bank-Account'
        application/xml:
          examples:
            Example:
              value:
                uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                name: BoA Checking Account
                routing_number: "266905059"
                hidden_account_number: XXXX1207
                account_type: Checking
          schema:
            $ref: '#/components/schemas/ContractorPaymentMethodCreateBankAccountResponse'
      description: Example response
    Contractor-Bank-Account-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                name: BoA Checking Account
                routing_number: "266905059"
                hidden_account_number: XXXX1207
                account_type: Checking
          schema:
            $ref: '#/components/schemas/ContractorPaymentMethodListBankAccountsResponse'
      description: Example response
    Time-Off-Policy-Object:
      content:
        application/json:
          examples:
            Unlimited Policy:
              value:
                version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                name: Test Vacation Unlimited Policy
                policy_type: vacation
                accrual_method: unlimited
                accrual_rate: null
                accrual_rate_unit: null
                paid_out_on_termination: false
                accrual_waiting_period_days: null
                carryover_limit_hours: null
                max_accrual_hours_per_year: null
                max_hours: null
                is_active: true
                complete: true
                employees:
                - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
            Fixed Policy:
              value:
                version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                name: Test Vacation Fixed Policy
                policy_type: vacation
                accrual_method: per_anniversary_year
                accrual_rate: "120.0"
                accrual_rate_unit: null
                paid_out_on_termination: true
                accrual_waiting_period_days: 0
                carryover_limit_hours: "240.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "300.0"
                is_active: true
                complete: true
                employees:
                - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                  balance: "80.0"
                - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                  balance: "60.0"
            Hourly Policy:
              value:
                version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                name: Test Vacation Hourly Policy
                policy_type: vacation
                accrual_method: per_hour_paid
                accrual_rate: "4.0"
                accrual_rate_unit: "80.0"
                paid_out_on_termination: true
                accrual_waiting_period_days: 30
                carryover_limit_hours: "200.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "240.0"
                is_active: true
                complete: true
                employees:
                - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                  balance: "56.0"
                - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                  balance: "84.0"
          schema:
            $ref: '#/components/schemas/Time-Off-Policy'
      description: Example response
    Time-Off-Policy-List:
      content:
        application/json:
          examples:
            example:
              value:
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                name: Test Vacation Unlimited Policy
                policy_type: vacation
                accrual_method: unlimited
                accrual_rate: null
                accrual_rate_unit: null
                paid_out_on_termination: false
                accrual_waiting_period_days: null
                carryover_limit_hours: null
                max_accrual_hours_per_year: null
                max_hours: null
                is_active: true
                complete: true
                employees:
                - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                name: Test Vacation Fixed Policy
                policy_type: vacation
                accrual_method: per_anniversary_year
                accrual_rate: "120.0"
                accrual_rate_unit: null
                paid_out_on_termination: true
                accrual_waiting_period_days: 0
                carryover_limit_hours: "240.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "300.0"
                is_active: true
                complete: true
                employees:
                - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                  balance: "80.0"
                - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                  balance: "60.0"
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                name: Test Vacation Hourly Policy
                policy_type: vacation
                accrual_method: per_hour_paid
                accrual_rate: "4.0"
                accrual_rate_unit: "80.0"
                paid_out_on_termination: true
                accrual_waiting_period_days: 30
                carryover_limit_hours: "200.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "240.0"
                is_active: true
                complete: true
                employees:
                - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                  balance: "56.0"
                - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                  balance: "84.0"
            x-konfig-original-example:
              value:
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                name: Test Vacation Unlimited Policy
                policy_type: vacation
                accrual_method: unlimited
                accrual_rate: null
                accrual_rate_unit: null
                paid_out_on_termination: false
                accrual_waiting_period_days: null
                carryover_limit_hours: null
                max_accrual_hours_per_year: null
                max_hours: null
                is_active: true
                complete: true
                employees:
                - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                name: Test Vacation Fixed Policy
                policy_type: vacation
                accrual_method: per_anniversary_year
                accrual_rate: "120.0"
                accrual_rate_unit: null
                paid_out_on_termination: true
                accrual_waiting_period_days: 0
                carryover_limit_hours: "240.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "300.0"
                is_active: true
                complete: true
                employees:
                - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                  balance: "80.0"
                - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                  balance: "60.0"
              - version: f5556bce3d75ec2b62bd11990aa7993a
                uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                name: Test Vacation Hourly Policy
                policy_type: vacation
                accrual_method: per_hour_paid
                accrual_rate: "4.0"
                accrual_rate_unit: "80.0"
                paid_out_on_termination: true
                accrual_waiting_period_days: 30
                carryover_limit_hours: "200.0"
                max_accrual_hours_per_year: "120.0"
                max_hours: "240.0"
                is_active: true
                complete: true
                employees:
                - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                  balance: "56.0"
                - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                  balance: "84.0"
          schema:
            $ref: '#/components/schemas/TimeOffPoliciesGetAllPoliciesResponse'
      description: Example response
    Time-Off-Activity-Object:
      content:
        application/json:
          examples:
            example:
              value:
              - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                time_off_type: vacation
                policy_name: Paid Time Off
                event_type: TimeOffEvent::AddToPolicy
                event_description: "Added to policy: Vacation Per Hour Worked"
                effective_time: 2022-09-27T13:43:03.000-07:00
                balance: "0.0"
                balance_change: "0.0"
              - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                time_off_type: vacation
                policy_name: Paid Time Off
                event_type: TimeOffEvent::Accrual
                event_description: Accrual
                effective_time: 2022-09-27T14:43:03.000-07:00
                balance: "2.0"
                balance_change: "2.0"
            x-konfig-original-example:
              value:
              - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                time_off_type: vacation
                policy_name: Paid Time Off
                event_type: TimeOffEvent::AddToPolicy
                event_description: "Added to policy: Vacation Per Hour Worked"
                effective_time: 2022-09-27T13:43:03.000-07:00
                balance: "0.0"
                balance_change: "0.0"
              - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                time_off_type: vacation
                policy_name: Paid Time Off
                event_type: TimeOffEvent::Accrual
                event_description: Accrual
                effective_time: 2022-09-27T14:43:03.000-07:00
                balance: "2.0"
                balance_change: "2.0"
          schema:
            $ref: '#/components/schemas/Time-Off-Activity'
      description: Example response
    Minimum-Wage-Object:
      content:
        application/json:
          examples:
            example:
              value:
                uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                authority: State
                wage: "13.0"
                wage_type: Regular
                effective_date: 2022-01-01
                notes: Employers with 6 or more employees
            x-konfig-original-example:
              value:
                uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                authority: State
                wage: "13.0"
                wage_type: Regular
                effective_date: 2022-01-01
                notes: Employers with 6 or more employees
          schema:
            $ref: '#/components/schemas/Minimum-Wage'
      description: Example response
    Invoice-Data-Object:
      content:
        application/json:
          examples:
            example:
              value:
                active_companies:
                - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                  active_employees: 5
                  active_contractors: 3
                  initial_invoice_period: 2022-01
                - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                  active_employees: 0
                  active_contractors: 1
                  initial_invoice_period: 2023-05
            x-konfig-original-example:
              value:
                active_companies:
                - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                  active_employees: 5
                  active_contractors: 3
                  initial_invoice_period: 2022-01
                - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                  active_employees: 0
                  active_contractors: 1
                  initial_invoice_period: 2023-05
          schema:
            $ref: '#/components/schemas/Invoice-Data'
      description: Example response
    Minimum-Wage-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                authority: State
                wage: "13.0"
                wage_type: Regular
                effective_date: 2022-01-01
                notes: Employers with 6 or more employees
          schema:
            $ref: '#/components/schemas/LocationsGetMinimumWagesResponse'
      description: Example response
    Recovery-Case-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
                company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
                status: open
                latest_error_code: R01
                original_debit_date: 2023-10-11
                check_date: 2023-10-13
                payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
                contractor_payment_uuids: null
                amount_outstanding: 10499.43
                event_total_amount: 5912.07
          schema:
            $ref: '#/components/schemas/RecoveryCasesListForCompanyResponse'
      description: Example response
    Ach-Transaction-List:
      content:
        application/json:
          examples:
            Example:
              value:
              - description: PAY 380654
                uuid: "123e4567-e89b-12d3-a456-426655440000,"
                company_uuid: "456e7890-e12b-34c5-d678-901234567890,"
                payment_event_type: "Payroll,"
                payment_event_uuid: "789e0123-e45f-67ab-c890-123456789012,"
                recipient_type: "Employee,"
                recipient_uuid: "012e3456-f78d-90ab-12cd-345678901234,"
                error_code: "null,"
                transaction_type: "Credit employee pay,"
                payment_status: "submitted,"
                payment_direction: "credit,"
                payment_event_check_date: "2023-10-02,"
                payment_date: "2023-10-17,"
                amount: "123.00,"
          schema:
            $ref: '#/components/schemas/AchTransactionsGetAllForCompanyResponse'
      description: Example response
  schemas:
    Versionable-Required:
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
      required:
      - version
      type: object
    Versionable:
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
      type: object
    Employee-Address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - $ref: '#/components/schemas/Employee_Address_allOf'
      example:
        uuid: 9557fe01-f8f8-4c14-a61c-ca6221a9f118
        employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
        street_1: 333 Kiera Stravenue
        street_2: Suite 391
        city: San Francisco
        state: CA
        zip: "94107"
        country: USA
        active: true
        effective_date: 2021-01-01
        courtesy_withholding: true
      x-konfig-original-example:
        uuid: 9557fe01-f8f8-4c14-a61c-ca6221a9f118
        employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
        street_1: 333 Kiera Stravenue
        street_2: Suite 391
        city: San Francisco
        state: CA
        zip: "94107"
        country: USA
        active: true
        effective_date: 2021-01-01
        courtesy_withholding: true
      x-konfig-is-used-in-successful-response: true
    Employee-Work-Address:
      example:
        version: 6a22da647ed391f184a212e6e83a541d
        uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
        employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
        location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
        effective_date: 2023-05-15
        active: true
        street_1: 977 Marks Viaduct
        street_2: null
        city: Pink Hill
        state: NC
        zip: "28572"
        country: USA
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 6a22da647ed391f184a212e6e83a541d
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-version
        uuid:
          description: The unique identifier of this work address.
          example: 34925ef7-6234-440d-83b8-788a24d0d69a
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-uuid
        effective_date:
          description: The date the employee began working at this location.
          example: 2023-05-15
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-effective_date
        active:
          description: Signifies if this address is the active work address for the
            current date
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-active
        location_uuid:
          description: UUID reference to the company location for this work address.
          example: aba6d0fd-7294-4997-b1a4-bc9268c45932
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-location_uuid
        employee_uuid:
          description: UUID reference to the employee for this work address.
          example: 2363b9c0-6625-4425-9261-47627fd68783
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-employee_uuid
        street_1:
          example: 977 Marks Viaduct
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-street_1
        street_2:
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-street_2
          example: null
        city:
          example: Pink Hill
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-city
        state:
          example: NC
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-state
        zip:
          example: "28572"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-zip
        country:
          default: USA
          example: USA
          readOnly: true
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address-properties-country
      type: object
      x-konfig-original-example:
        version: 6a22da647ed391f184a212e6e83a541d
        uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
        employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
        location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
        effective_date: 2023-05-15
        active: true
        street_1: 977 Marks Viaduct
        city: Pink Hill
        state: NC
        zip: "28572"
        country: USA
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Work-Address
      x-konfig-is-used-in-successful-response: true
    Contractor-Address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - $ref: '#/components/schemas/Contractor_Address_allOf'
      x-konfig-is-used-in-successful-response: true
    Address:
      allOf:
      - $ref: '#/components/schemas/Versionable'
      - $ref: '#/components/schemas/Address_allOf'
      example:
        street_1: 412 Kiera Stravenue
        street_2: Suite 391
        city: San Francisco
        state: CA
        zip: "94107"
        country: USA
        active: true
      type: object
      x-konfig-original-example:
        street_1: 412 Kiera Stravenue
        street_2: Suite 391
        city: San Francisco
        state: CA
        zip: "94107"
        country: USA
        active: true
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Address
    Department:
      allOf:
      - $ref: '#/components/schemas/Versionable'
      - $ref: '#/components/schemas/Department_allOf'
      type: object
      x-konfig-is-used-in-successful-response: true
    Employee:
      description: The representation of an employee in Gusto.
      example:
        company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
        onboarded: true
        garnishments:
        - amount: "8.00"
          court_ordered: false
          times: 1
          pay_period_maximum: pay_period_maximum
          employee_uuid: 6
          recurring: false
          description: Company loan to employee
          active: true
          deduct_as_percentage: false
          annual_maximum: annual_maximum
          version: 52b7c567242cb7452e89ba2bc02cb476
          uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
        - amount: "8.00"
          court_ordered: false
          times: 1
          pay_period_maximum: pay_period_maximum
          employee_uuid: 6
          recurring: false
          description: Company loan to employee
          active: true
          deduct_as_percentage: false
          annual_maximum: annual_maximum
          version: 52b7c567242cb7452e89ba2bc02cb476
          uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
        work_email: vanessa.boehm@example.com
        date_of_birth: 1996-05-08
        middle_initial: M
        uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
        ssn: ""
        terminations:
        - cancelable: true
          employee_uuid: 0
          effective_date: 2020-03-10
          active: true
          run_termination_payroll: false
          version: d487dd0b55dfcacdd920ccbdaeafa351
          uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
        - cancelable: true
          employee_uuid: 0
          effective_date: 2020-03-10
          active: true
          run_termination_payroll: false
          version: d487dd0b55dfcacdd920ccbdaeafa351
          uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
        department: department
        first_name: Nicole
        eligible_paid_time_off:
        - accrual_period: Year
          accrual_rate: "208.0"
          accrual_method: unlimited
          accrual_balance: "64.0"
          paid_at_termination: false
          accrual_unit: Hour
          maximum_accrual_balance: "240.0"
          name: Sick Hours
          policy_name: Sick Policy
          policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
        - accrual_period: Year
          accrual_rate: "208.0"
          accrual_method: unlimited
          accrual_balance: "64.0"
          paid_at_termination: false
          accrual_unit: Hour
          maximum_accrual_balance: "240.0"
          name: Sick Hours
          policy_name: Sick Policy
          policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
        email: kory7757869450111548@barton-hermiston.io
        terminated: false
        payment_method: Check
        current_employment_status: full_time
        onboarding_status: onboarding_completed
        custom_fields:
        - selection_options:
          - selection_options
          - selection_options
          company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
          name: employee_level
          description: Employee Level
          id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          type: null
          value: "2"
        - selection_options:
          - selection_options
          - selection_options
          company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
          name: employee_level
          description: Employee Level
          id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          type: null
          value: "2"
        has_ssn: true
        jobs:
        - compensations:
          - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
            rate: "70.00"
            flsa_status: Nonexempt
            effective_date: 2020-12-11
            payment_unit: Hour
            adjust_for_minimum_wage: false
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            uuid: 910b675b-af99-404e-b8d8-562a72b76b44
          - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
            rate: "70.00"
            flsa_status: Nonexempt
            effective_date: 2020-12-11
            payment_unit: Hour
            adjust_for_minimum_wage: false
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            uuid: 910b675b-af99-404e-b8d8-562a72b76b44
          state_wc_class_code: state_wc_class_code
          two_percent_shareholder: true
          state_wc_covered: true
          hire_date: 2020-01-20
          title: title
          version: d0e719137f89ca3dd334dd4cc248ffbb
          uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
          current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
          employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
          rate: "78000.00"
          payment_unit: Year
          primary: true
        - compensations:
          - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
            rate: "70.00"
            flsa_status: Nonexempt
            effective_date: 2020-12-11
            payment_unit: Hour
            adjust_for_minimum_wage: false
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            uuid: 910b675b-af99-404e-b8d8-562a72b76b44
          - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
            rate: "70.00"
            flsa_status: Nonexempt
            effective_date: 2020-12-11
            payment_unit: Hour
            adjust_for_minimum_wage: false
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            uuid: 910b675b-af99-404e-b8d8-562a72b76b44
          state_wc_class_code: state_wc_class_code
          two_percent_shareholder: true
          state_wc_covered: true
          hire_date: 2020-01-20
          title: title
          version: d0e719137f89ca3dd334dd4cc248ffbb
          uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
          current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
          employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
          rate: "78000.00"
          payment_unit: Year
          primary: true
        two_percent_shareholder: false
        last_name: Boehm
        version: 414dedaca594b77135e0b8d2f398516d
        preferred_first_name: Vanessa
        phone: "1234567890"
        manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
      properties:
        version:
          description: "The current version of the employee. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 414dedaca594b77135e0b8d2f398516d
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-version
        uuid:
          description: The UUID of the employee in Gusto.
          example: 9779767c-6044-48e0-bf68-aeb370b9a2e7
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-uuid
        first_name:
          example: Nicole
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-first_name
        middle_initial:
          example: M
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-middle_initial
        last_name:
          example: Boehm
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-last_name
        email:
          description: The email address of the employee. This is provided to support
            syncing users between our system and yours. You may not use this email
            address for any other purpose (e.g. marketing).
          example: kory7757869450111548@barton-hermiston.io
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-email
        company_uuid:
          description: The UUID of the company the employee is employed by.
          example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-company_uuid
        manager_uuid:
          description: The UUID of the employee's manager.
          example: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-manager_uuid
        department:
          description: The employee's department in the company.
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-department
          example: null
        terminated:
          description: Whether the employee is terminated.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-terminated
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-two_percent_shareholder
        onboarded:
          description: Whether the employee has completed onboarding.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-onboarded
        onboarding_status:
          description: The current onboarding status of the employee
          enum:
          - onboarding_completed
          - admin_onboarding_incomplete
          - self_onboarding_pending_invite
          - self_onboarding_invited
          - self_onboarding_invited_started
          - self_onboarding_invited_overdue
          - self_onboarding_completed_by_employee
          - self_onboarding_awaiting_admin_review
          example: onboarding_completed
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-onboarding_status
        jobs:
          items:
            $ref: '#/components/schemas/Job'
          type: array
        eligible_paid_time_off:
          items:
            $ref: '#/components/schemas/Paid-Time-Off'
          type: array
        terminations:
          items:
            $ref: '#/components/schemas/Termination'
          type: array
        garnishments:
          items:
            $ref: '#/components/schemas/Garnishment'
          type: array
        custom_fields:
          description: Custom fields are only included for the employee if the include
            param has the custom_fields value set
          items:
            $ref: '#/components/schemas/Employee-Custom-Field'
          type: array
        date_of_birth:
          example: 1996-05-08
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-date_of_birth
        has_ssn:
          description: Indicates whether the employee has an SSN in Gusto.
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-has_ssn
        ssn:
          description: Deprecated. This field always returns an empty string.
          example: ""
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-ssn
        phone:
          example: "1234567890"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-phone
        preferred_first_name:
          description: ""
          example: Vanessa
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-preferred_first_name
        payment_method:
          default: Check
          description: The employee's payment method
          enum:
          - Direct Deposit
          - Check
          example: Check
          nullable: false
          type: string
          x-konfig-original-example: Check
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-payment_method
        work_email:
          description: The work email address of the employee. This is provided to
            support syncing users between our system and yours. You may not use this
            email address for any other purpose (e.g. marketing).
          example: vanessa.boehm@example.com
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-properties-work_email
        current_employment_status:
          description: "The current employment status of the employee. Full-time employees\
            \ work 30+ hours per week. Part-time employees are split into two groups:\
            \ those that work 20-29 hours a week, and those that work under 20 hours\
            \ a week. Variable employees have hours that vary each week. Seasonal\
            \ employees are hired for 6 months of the year or less."
          enum:
          - full_time
          - part_time_under_twenty_hours
          - part_time_twenty_plus_hours
          - variable
          - seasonal
          nullable: true
          readOnly: true
          type: string
      readOnly: true
      title: Employee
      type: object
      x-examples:
        Example:
          version: 414dedaca594b77135e0b8d2f398516d
          uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
          first_name: Nicole
          middle_initial: M
          last_name: Boehm
          email: kory7757869450111548@barton-hermiston.io
          company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
          terminated: false
          two_percent_shareholder: false
          onboarded: true
          onboarding_status: onboarding_completed
          jobs:
          - title: Client Support Manager
            version: 91179081a7309c9fbd31bb3cf7b9893e
            uuid: 5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5
            employee_uuid: a987bce1-6d06-43f8-9978-9db886f479fb
            current_compensation_uuid: 798a962f-0fcf-491e-9b71-cfa6a1db114f
            payment_unit: Hour
            primary: true
            compensations:
            - version: 233f0096a8015e62d9795fadf1fd300d
              uuid: 94f17a77-cfe5-436a-af94-422bbf8248ff
              payment_unit: Hour
              flsa_status: Nonexempt
              job_uuid: 64711ac0-83ff-4aaf-bec1-db72f5a44e56
              effective_date: 2021-01-20
              rate: "22.00"
              adjust_for_minimum_wage: false
            rate: "22.00"
            hire_date: 2020-01-20
          eligible_paid_time_off:
          - name: Sick Hours
            policy_name: Sick Policy
            policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
            accrual_unit: Hour
            accrual_rate: "208.0"
            accrual_method: per_hour_worked
            accrual_period: Year
            accrual_balance: "71.0"
            maximum_accrual_balance: "240.0"
            paid_at_termination: false
          - name: Vacation Hours
            policy_name: Vacation Policy
            policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
            accrual_unit: Hour
            accrual_rate: "208.0"
            accrual_period: Year
            accrual_balance: "34.0"
            maximum_accrual_balance: "240.0"
            paid_at_termination: true
          terminations: []
          custom_fields:
          - description: Employee Level
            id: ee515986-f3ca-49da-b576-2691b95262f9
            company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
            name: employee_level
            type: text
            value: "2"
          - description: What is your t-shirt size?
            id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
            company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
            name: t-shirt size
            type: text
            value: md
          garnishments: []
          date_of_birth: 1996-05-08
          has_ssn: true
          ssn: ""
          phone: "1234567890"
          preferred_first_name: Vanessa
          work_email: vanessa.boehm@example.com
      x-tags:
      - Employees
      x-konfig-is-used-in-successful-response: true
    Employee-Onboarding-Status:
      description: The representation of an employee's onboarding status.
      example:
        onboarding_steps:
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          title: title
          required: true
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          title: title
          required: true
        onboarding_status: admin_onboarding_incomplete
        uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
      properties:
        uuid:
          description: Unique identifier for this employee.
          example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Onboarding-Status-properties-uuid
        onboarding_status:
          description: One of the "onboarding_status" enum values.
          example: admin_onboarding_incomplete
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Onboarding-Status-properties-onboarding_status
        onboarding_steps:
          description: List of steps required to onboard an employee.
          items:
            $ref: '#/components/schemas/Onboarding_step'
          type: array
      title: Employee-Onboarding-Status
      type: object
      x-examples:
        Example - Employee Onboarding by Admin:
          uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          onboarding_status: admin_onboarding_incomplete
          onboarding_steps:
          - title: Personal details
            id: personal_details
            required: true
            completed: false
            requirements: []
          - title: Enter compensation details
            id: compensation_details
            required: true
            completed: false
            requirements: []
          - title: Add work address
            id: add_work_address
            required: true
            completed: false
            requirements: []
          - title: Add home address
            id: add_home_address
            required: true
            completed: false
            requirements: []
          - title: Enter federal tax withholdings
            id: federal_tax_setup
            required: true
            completed: false
            requirements: []
          - title: Enter state tax information
            id: state_tax_setup
            required: true
            completed: false
            requirements:
            - add_work_address
            - add_home_address
          - title: Direct deposit setup
            id: direct_deposit_setup
            required: false
            completed: false
            requirements: []
          - title: Employee form signing
            id: employee_form_signing
            required: true
            completed: false
            requirements:
            - federal_tax_setup
            - state_tax_setup
          - title: File new hire report
            id: file_new_hire_report
            required: true
            completed: false
            requirements:
            - add_work_address
        Example - Employee Self-Onboarding:
          uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          onboarding_status: self_onboarding_invited
          onboarding_steps:
          - title: Personal details
            id: personal_details
            required: true
            completed: false
            requirements: []
          - title: Enter compensation details
            id: compensation_details
            required: true
            completed: false
            requirements: []
          - title: Add work address
            id: add_work_address
            required: true
            completed: false
            requirements: []
          - title: Add home address
            id: add_home_address
            required: true
            completed: false
            requirements: []
          - title: Enter federal tax withholdings
            id: federal_tax_setup
            required: true
            completed: false
            requirements: []
          - title: Enter state tax information
            id: state_tax_setup
            required: true
            completed: false
            requirements:
            - add_work_address
            - add_home_address
          - title: Direct deposit setup
            id: direct_deposit_setup
            required: true
            completed: false
            requirements: []
          - title: Employee form signing
            id: employee_form_signing
            required: true
            completed: false
            requirements:
            - federal_tax_setup
            - state_tax_setup
          - title: Admin review
            id: admin_review
            required: true
            completed: false
            requirements:
            - personal_details
            - compensation_details
            - add_home_address
            - add_work_address
            - federal_tax_setup
            - state_tax_setup
      x-tags:
      - Employees
      x-konfig-is-used-in-successful-response: true
    Company-Address:
      description: The representation of a company's address in Gusto.
      example:
        zip: "94107"
        country: USA
        street_1: 412 Kiera Stravenue
        city: San Francisco
        street_2: Suite 391
        active: true
        state: CA
      properties:
        street_1:
          example: 412 Kiera Stravenue
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-street_1
        street_2:
          example: Suite 391
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-street_2
        city:
          example: San Francisco
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-city
        state:
          example: CA
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-state
        zip:
          example: "94107"
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-zip
        country:
          default: USA
          example: USA
          readOnly: false
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-country
        active:
          description: "The status of the location. Inactive locations have been deleted,\
            \ but may still have historical data associated with them."
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Address-properties-active
      title: ""
      type: object
      x-tags:
      - Locations
      x-examples:
        Company Address:
          street_1: 412 Kiera Stravenue
          street_2: Suite 391
          city: San Francisco
          state: CA
          zip: "94107"
          country: USA
          active: true
    Location:
      description: The representation of an address in Gusto.
      example:
        company_uuid: 768a1043-f6bf-4f0b-a606-98465ea01ad7
        zip: "94107"
        country: USA
        city: San Francisco
        active: true
        created_at: 2023-09-12T16:42:25.000-07:00
        version: 7d9753112507b9dda4fb97910f39b06e
        uuid: 064a4107-c9f4-4fad-acbf-f12cd81c0d6c
        mailing_address: true
        street_1: 412 Kiera Stravenue
        updated_at: 2023-09-12T16:42:25.000-07:00
        street_2: Suite 391
        filing_address: true
        phone_number: "5825710808"
        state: CA
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 7d9753112507b9dda4fb97910f39b06e
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-version
        uuid:
          description: The UUID of the location object.
          example: 064a4107-c9f4-4fad-acbf-f12cd81c0d6c
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-uuid
        company_uuid:
          description: The UUID for the company to which the location belongs. Only
            included if the location belongs to a company.
          example: 768a1043-f6bf-4f0b-a606-98465ea01ad7
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-company_uuid
        phone_number:
          description: The phone number for the location. Required for company locations.
            Optional for employee locations.
          example: "5825710808"
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-phone_number
        street_1:
          example: 412 Kiera Stravenue
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-street_1
        street_2:
          example: Suite 391
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-street_2
        city:
          example: San Francisco
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-city
        state:
          example: CA
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-state
        zip:
          example: "94107"
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-zip
        country:
          default: USA
          example: USA
          readOnly: false
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-country
        active:
          description: "The status of the location. Inactive locations have been deleted,\
            \ but may still have historical data associated with them."
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-active
        mailing_address:
          description: Specifies if the location is the company's mailing address.
            Only included if the location belongs to a company.
          nullable: true
          type: boolean
        filing_address:
          description: Specifies if the location is the company's filing address.
            Only included if the location belongs to a company.
          nullable: true
          type: boolean
        created_at:
          description: Datetime for when location is created
          example: 2023-09-12T16:42:25.000-07:00
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-created_at
        updated_at:
          description: Datetime for when location is updated
          example: 2023-09-12T16:42:25.000-07:00
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Location-properties-updated_at
      title: ""
      type: object
      x-examples:
        Company Location:
          version: 7d9753112507b9dda4fb97910f39b06e
          company_uuid: 768a1043-f6bf-4f0b-a606-98465ea01ad7
          phone_number: "5825710808"
          uuid: 064a4107-c9f4-4fad-acbf-f12cd81c0d6c
          street_1: 412 Kiera Stravenue
          street_2: Suite 391
          city: San Francisco
          state: CA
          zip: "94107"
          country: USA
          active: true
          created_at: 2023-09-12T16:42:25.000-07:00
          updated_at: 2023-09-12T16:42:25.000-07:00
      x-tags:
      - Locations
      x-konfig-is-used-in-successful-response: true
    Paid-Time-Off:
      description: The representation of paid time off in Gusto.
      example:
        accrual_period: Year
        accrual_rate: "208.0"
        accrual_method: unlimited
        accrual_balance: "64.0"
        paid_at_termination: false
        accrual_unit: Hour
        maximum_accrual_balance: "240.0"
        name: Sick Hours
        policy_name: Sick Policy
        policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
      properties:
        name:
          description: The name of the paid time off type.
          enum:
          - Vacation Hours
          - Sick Hours
          - Holiday Hours
          example: Sick Hours
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-name
        policy_name:
          description: The name of the time off policy.
          example: Sick Policy
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-policy_name
        policy_uuid:
          description: The UUID of the time off policy.
          example: 8dc8f324-3c03-4b42-8602-02476fa21c1b
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-policy_uuid
        accrual_unit:
          description: The unit the PTO type is accrued in.
          example: Hour
          readOnly: true
          type: string
          x-konfig-original-example: Hour
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_unit
        accrual_rate:
          description: The number of accrual units accrued per accrual period.
          example: "208.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_rate
        accrual_method:
          description: The accrual method of the time off policy
          example: unlimited
          readOnly: true
          type: string
          x-konfig-original-example: unlimited
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_method
        accrual_period:
          description: The frequency at which the PTO type is accrued.
          example: Year
          readOnly: true
          type: string
          x-konfig-original-example: Year
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_period
        accrual_balance:
          description: The number of accrual units accrued.
          example: "64.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_balance
        maximum_accrual_balance:
          description: The maximum number of accrual units allowed. A null value signifies
            no maximum.
          example: "240.0"
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-maximum_accrual_balance
        paid_at_termination:
          description: Whether the accrual balance is paid to the employee upon termination.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Paid-Time-Off-properties-paid_at_termination
      type: object
      x-examples:
        Example:
          name: Sick Hours
          policy_name: Sick Policy
          policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
          accrual_unit: Hour
          accrual_rate: "208.0"
          accrual_period: Year
          accrual_balance: "64.0"
          maximum_accrual_balance: "240.0"
          paid_at_termination: false
      x-tags:
      - Payrolls
    Garnishment:
      description: "Garnishments, or employee deductions, are fixed amounts or percentages\
        \ deducted from an employee’s pay. They can be deducted a specific number\
        \ of times or on a recurring basis. Garnishments can also have maximum deductions\
        \ on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered\
        \ payments for child support or back taxes. Some companies provide loans to\
        \ their employees that are repaid via garnishments."
      example:
        amount: "8.00"
        court_ordered: false
        times: 1
        pay_period_maximum: pay_period_maximum
        employee_uuid: 6
        recurring: false
        description: Company loan to employee
        active: true
        deduct_as_percentage: false
        annual_maximum: annual_maximum
        version: 52b7c567242cb7452e89ba2bc02cb476
        uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
      properties:
        description:
          description: The description of the garnishment.
          example: Company loan to employee
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-description
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 52b7c567242cb7452e89ba2bc02cb476
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-version
        uuid:
          description: The UUID of the garnishment in Gusto.
          example: 4c7841a2-1363-497e-bc0f-664703c7484f
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-uuid
        employee_uuid:
          description: The UUID of the employee to which this garnishment belongs.
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-employee_uuid
        active:
          default: true
          description: Whether or not this garnishment is currently active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-active
        amount:
          description: "The amount of the garnishment. Either a percentage or a fixed\
            \ dollar amount. Represented as a float, e.g. \"8.00\"."
          example: "8.00"
          format: float
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-amount
        court_ordered:
          description: Whether the garnishment is court ordered.
          example: false
          readOnly: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-court_ordered
        times:
          description: The number of times to apply the garnishment. Ignored if recurring
            is true.
          nullable: true
          readOnly: false
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-times
          example: null
        recurring:
          default: false
          description: Whether the garnishment should recur indefinitely.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-recurring
        annual_maximum:
          description: "The maximum deduction per annum. A null value indicates no\
            \ maximum. Represented as a float, e.g. \"200.00\"."
          format: float
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-annual_maximum
          example: null
        pay_period_maximum:
          description: "The maximum deduction per pay period. A null value indicates\
            \ no maximum. Represented as a float, e.g. \"16.00\"."
          format: float
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-pay_period_maximum
          example: null
        deduct_as_percentage:
          default: false
          description: Whether the amount should be treated as a percentage to be
            deducted per pay period.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Garnishment-properties-deduct_as_percentage
      type: object
      x-examples:
        Example:
          description: Company loan to employee
          version: 52b7c567242cb7452e89ba2bc02cb476
          uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
          employee_uuid: a6b53294-f871-4db2-bbd4-8c3d1fe56440
          active: true
          amount: "8.00"
          court_ordered: false
          times: 5
          recurring: false
          pay_period_maximum: "100.00"
          deduct_as_percentage: true
      x-konfig-is-used-in-successful-response: true
    Termination:
      description: The representation of a termination in Gusto.
      example:
        cancelable: true
        employee_uuid: 0
        effective_date: 2020-03-10
        active: true
        run_termination_payroll: false
        version: d487dd0b55dfcacdd920ccbdaeafa351
        uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: d487dd0b55dfcacdd920ccbdaeafa351
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-version
        uuid:
          description: The UUID of the termination object.
          example: da441196-43a9-4d23-ad5d-f37ce6bb99c0
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-uuid
        employee_uuid:
          description: The UUID of the employee to which this termination is attached.
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-employee_uuid
        active:
          description: Whether the employee's termination has gone into effect.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-active
        cancelable:
          description: Whether the employee's termination is cancelable. Cancelable
            is true if `run_termination_payroll` is false and `effective_date` is
            in the future.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-cancelable
        effective_date:
          description: The employee's last day of work.
          example: 2020-03-10
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-effective_date
        run_termination_payroll:
          description: "If true, the employee should receive their final wages via\
            \ an off-cycle payroll. If false, they should receive their final wages\
            \ on their current pay schedule."
          example: false
          readOnly: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Termination-properties-run_termination_payroll
      type: object
      x-examples:
        example-1:
          version: d487dd0b55dfcacdd920ccbdaeafa351
          uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
          employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
          active: true
          cancelable: true
          effective_date: 2020-03-10
          run_termination_payroll: false
      x-tags:
      - Terminations
      x-konfig-is-used-in-successful-response: true
    Rehire-Body:
      properties:
        effective_date:
          description: The day when the employee returns to work.
          type: string
        file_new_hire_report:
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the employee.
          type: boolean
        work_location_uuid:
          description: The uuid of the employee's work location.
          type: string
        employment_status:
          description: The employee's employment status. Supplying an invalid option
            will set the employment_status to *not_set*.
          enum:
          - part_time
          - full_time
          - part_time_eligible
          - variable
          - seasonal
          - not_set
          type: string
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          type: boolean
      required:
      - effective_date
      - file_new_hire_report
      - work_location_uuid
      type: object
    Pay-Schedule-Assignment-Body:
      properties:
        type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          type: string
        hourly_pay_schedule_uuid:
          description: Pay schedule for hourly employees.
          type: string
        salaried_pay_schedule_uuid:
          description: Pay schedule for salaried employees.
          type: string
        default_pay_schedule_uuid:
          description: Default pay schedule for employees.
          type: string
        employees:
          description: List of employees and their pay schedules.
          items:
            $ref: '#/components/schemas/Pay_Schedule_Assignment_Body_employees_inner'
          type: array
        departments:
          description: List of departments and their pay schedules.
          items:
            $ref: '#/components/schemas/Pay_Schedule_Assignment_Body_departments_inner'
          type: array
      required:
      - type
      type: object
    Flsa-Status-Type:
      description: "The FLSA status for this compensation. Salaried ('Exempt') employees\
        \ are paid a fixed salary every pay period. Salaried with overtime ('Salaried\
        \ Nonexempt') employees are paid a fixed salary every pay period, and receive\
        \ overtime pay when applicable. Hourly ('Nonexempt') employees are paid for\
        \ the hours they work, and receive overtime pay when applicable. Commissioned\
        \ employees ('Commission Only Exempt') earn wages based only on commission.\
        \ Commissioned with overtime ('Commission Only Nonexempt') earn wages based\
        \ on commission, and receive overtime pay when applicable. Owners ('Owner')\
        \ are employees that own at least twenty percent of the company. "
      enum:
      - Exempt
      - Salaried Nonexempt
      - Nonexempt
      - Owner
      - Commission Only Exempt
      - Commission Only Nonexempt
      example: Nonexempt
      type: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Flsa-Status-Type
    Compensation:
      description: The representation of compensation in Gusto.
      example:
        job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
        rate: "70.00"
        flsa_status: Nonexempt
        effective_date: 2020-12-11
        payment_unit: Hour
        adjust_for_minimum_wage: false
        version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        uuid: 910b675b-af99-404e-b8d8-562a72b76b44
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-version
        uuid:
          description: The UUID of the compensation in Gusto.
          example: 910b675b-af99-404e-b8d8-562a72b76b44
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-uuid
        job_uuid:
          description: The UUID of the job to which the compensation belongs.
          example: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-job_uuid
        rate:
          description: The dollar amount paid per payment unit.
          example: "70.00"
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-rate
        payment_unit:
          description: "The unit accompanying the compensation rate. If the employee\
            \ is an owner, rate should be 'Paycheck'."
          enum:
          - Hour
          - Week
          - Month
          - Year
          - Paycheck
          example: Hour
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-payment_unit
        flsa_status:
          $ref: '#/components/schemas/Flsa-Status-Type'
        effective_date:
          description: "The effective date for this compensation. For the first compensation,\
            \ this defaults to the job's hire date."
          example: 2020-12-11
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-effective_date
        adjust_for_minimum_wage:
          description: Indicates if the compensation could be adjusted to minimum
            wage during payroll calculation.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Compensation-properties-adjust_for_minimum_wage
      type: object
      x-examples:
        Example:
          version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          uuid: 910b675b-af99-404e-b8d8-562a72b76b44
          job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
          rate: "70.00"
          payment_unit: Hour
          flsa_status: Nonexempt
          effective_date: 2020-12-11
          adjust_for_minimum_wage: false
      x-tags:
      - Jobs and Compensations
      x-konfig-is-used-in-successful-response: true
    Form:
      example:
        year: 0
        requires_signing: true
        draft: true
        name: company_direct_deposit
        description: We need you to sign paperwork to authorize us to debit and credit
          your bank account and file and pay your taxes.
        title: Direct Deposit Authorization
        uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
        quarter: 6
      properties:
        title:
          description: The title of the form
          example: Direct Deposit Authorization
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form-properties-title
        description:
          description: The description of the form
          example: We need you to sign paperwork to authorize us to debit and credit
            your bank account and file and pay your taxes.
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form-properties-description
        uuid:
          description: The UUID of the form
          example: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form-properties-uuid
        name:
          description: The type identifier of the form
          example: company_direct_deposit
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form-properties-name
        draft:
          description: If the form is in a draft state. E.g. End of year tax forms
            may be provided in a draft state prior to being finalized.
          readOnly: true
          type: boolean
        year:
          description: "The year of this form. For some forms, e.g. tax forms, this\
            \ is the year which the form represents. A W2 for January - December 2022\
            \ would be delivered in January 2023 and have a year value of 2022. This\
            \ value is nullable and will not be present on all forms."
          nullable: true
          readOnly: true
          type: integer
        quarter:
          description: "The quarter of this form. For some forms, e.g. tax forms,\
            \ this is the calendar quarter which this form represents. An Employer's\
            \ Quarterly Federal Tax Return (Form 941) for April, May, June 2022 would\
            \ have a quarter value of 2 (and a year value of 2022). This value is\
            \ nullable and will not be present on all forms."
          nullable: true
          readOnly: true
          type: integer
        requires_signing:
          description: A boolean flag that indicates whether the form needs signing
            or not. Note that this value will change after the form is signed.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form-properties-requires_signing
      title: Form
      type: object
      x-examples:
        Example:
          title: Direct Deposit Authorization
          description: We need you to sign paperwork to authorize us to debit and
            credit your bank account and file and pay your taxes.
          uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
          name: company_direct_deposit
          requires_signing: true
      x-tags:
      - Forms
      x-konfig-is-used-in-successful-response: true
    Form_1099:
      example:
        year: 2020
        requires_signing: false
        draft: false
        name: US_1099
        description: Form 1099 records your annual income as a contractor.
        title: "Form 1099: 2020"
        uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
        contractor_uuid: 123dd616-6dbc-4724-938a-403f6217a933
        quarter: 0
      properties:
        title:
          description: The title of the form
          example: "Form 1099: 2020"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-title
        description:
          description: The description of the form
          example: Form 1099 records your annual income as a contractor.
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-description
        uuid:
          description: The UUID of the form
          example: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-uuid
        name:
          description: The type identifier of the form
          example: US_1099
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-name
        draft:
          description: If the form is in a draft state. E.g. End of year tax forms
            may be provided in a draft state prior to being finalized.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-draft
        year:
          description: "The year of this form. For some forms, e.g. tax forms, this\
            \ is the year which the form represents. A 1099 for January - December\
            \ 2022 would be delivered in January 2023 and have a year value of 2022.\
            \ This value is nullable and will not be present on all forms."
          example: 2020
          nullable: true
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-year
        quarter:
          description: The quarter of this form. This value is currently always null
            since it is not present on any contractor forms.
          nullable: true
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-quarter
          example: null
        requires_signing:
          description: A boolean flag that indicates whether the form needs signing
            or not. Note that this value will change after the form is signed.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-requires_signing
        contractor_uuid:
          description: The contractor UUID
          example: 123dd616-6dbc-4724-938a-403f6217a933
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Form_1099-properties-contractor_uuid
      title: Form
      type: object
      x-examples:
        Example:
          title: "Form 1099: 2020"
          description: Form 1099 records your annual income as a contractor.
          uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
          name: US_1099
          draft: false
          requires_signing: false
          year: 2020
          contractor_uuid: 123dd616-6dbc-4724-938a-403f6217a933
      x-tags:
      - Forms
      x-konfig-is-used-in-successful-response: true
    Form-Pdf:
      example:
        uuid: uuid
        document_url: document_url
      properties:
        uuid:
          description: the UUID of the form
          readOnly: true
          type: string
        document_url:
          description: the URL of the form
          type: string
      title: Form Pdf
      type: object
      x-konfig-is-used-in-successful-response: true
    Industry:
      example:
        company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
        naics_code: "611420"
        sic_codes:
        - sic_codes
        - sic_codes
        title: Computer Training
      properties:
        title:
          description: Industry title
          example: Computer Training
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Industry-properties-title
        company_uuid:
          description: Company uuid
          example: 423dd616-6dbc-4724-938a-403f6217a933
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Industry-properties-company_uuid
        naics_code:
          description: North American Industry Classification System (NAICS) is used
            to classify businesses with a six digit number based on the primary type
            of work the business performs.
          example: "611420"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Industry-properties-naics_code
        sic_codes:
          description: "A list of Standard Industrial Classification (SIC) codes,\
            \ which are four digit number that categorize the industries that companies\
            \ belong to based on their business activities."
          items:
            type: string
          readOnly: true
          type: array
      title: Industry
      type: object
      x-examples:
        Example:
          title: Computer Training
          company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
          naics_code: "611420"
          sic_codes:
          - "8243"
      x-tags:
      - Industry
      x-konfig-is-used-in-successful-response: true
    Job:
      description: The representation of a job in Gusto.
      example:
        compensations:
        - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
          rate: "70.00"
          flsa_status: Nonexempt
          effective_date: 2020-12-11
          payment_unit: Hour
          adjust_for_minimum_wage: false
          version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          uuid: 910b675b-af99-404e-b8d8-562a72b76b44
        - job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
          rate: "70.00"
          flsa_status: Nonexempt
          effective_date: 2020-12-11
          payment_unit: Hour
          adjust_for_minimum_wage: false
          version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          uuid: 910b675b-af99-404e-b8d8-562a72b76b44
        state_wc_class_code: state_wc_class_code
        two_percent_shareholder: true
        state_wc_covered: true
        hire_date: 2020-01-20
        title: title
        version: d0e719137f89ca3dd334dd4cc248ffbb
        uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
        current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
        employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
        rate: "78000.00"
        payment_unit: Year
        primary: true
      properties:
        title:
          description: The title for the job.
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-title
          example: null
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: d0e719137f89ca3dd334dd4cc248ffbb
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-version
        uuid:
          description: The UUID of the job.
          example: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-uuid
        employee_uuid:
          description: The UUID of the employee to which the job belongs.
          example: 948daac8-4355-4ece-9e2a-229898accb22
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-employee_uuid
        hire_date:
          description: The date when the employee was hired or rehired for the job.
          example: 2020-01-20
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-hire_date
        primary:
          description: Whether this is the employee's primary job. The value will
            be set to true unless an existing job exists for the employee.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-primary
        rate:
          description: The current compensation rate of the job.
          example: "78000.00"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-rate
        payment_unit:
          description: The payment unit of the current compensation for the job.
          example: Year
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-payment_unit
        current_compensation_uuid:
          description: The UUID of the current compensation of the job.
          example: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Job-properties-current_compensation_uuid
        two_percent_shareholder:
          description: Whether the employee owns at least 2% of the company.
          readOnly: false
          type: boolean
        state_wc_covered:
          description: Whether this job is eligible for workers' compensation coverage
            in the state of Washington (WA).
          readOnly: false
          type: boolean
        state_wc_class_code:
          description: "The risk class code for workers' compensation in Washington\
            \ state. Please visit [Washington state's Risk Class page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)\
            \ to learn more."
          readOnly: false
          type: string
        compensations:
          items:
            $ref: '#/components/schemas/Compensation'
          readOnly: true
          type: array
      title: Job
      type: object
      x-examples:
        Example:
          title: Account Director
          version: d0e719137f89ca3dd334dd4cc248ffbb
          uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
          employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
          current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
          payment_unit: Year
          primary: true
          compensations:
          - version: 994b75511d1debac5d7e2ddeae13679f
            uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
            payment_unit: Year
            flsa_status: Exempt
            job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
            effective_date: 2021-01-20
            rate: "78000.00"
            adjust_for_minimum_wage: false
          rate: "78000.00"
          hire_date: 2020-01-20
      x-tags:
      - Jobs and Compensations
      x-konfig-is-used-in-successful-response: true
    External-Payroll:
      description: The representation of an external payroll.
      example:
        company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
        applicable_taxes:
        - name: name
          resident_tax: true
          id: 2
          employer_tax: true
        - name: name
          resident_tax: true
          id: 2
          employer_tax: true
        external_payroll_items:
        - benefits:
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          earnings:
          - amount: amount
            hours: hours
            earning_id: 0
            earning_type: earning_type
          - amount: amount
            hours: hours
            earning_id: 0
            earning_type: earning_type
          employee_uuid: employee_uuid
          taxes:
          - amount: amount
            tax_id: 1
          - amount: amount
            tax_id: 1
        - benefits:
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          earnings:
          - amount: amount
            hours: hours
            earning_id: 0
            earning_type: earning_type
          - amount: amount
            hours: hours
            earning_id: 0
            earning_type: earning_type
          employee_uuid: employee_uuid
          taxes:
          - amount: amount
            tax_id: 1
          - amount: amount
            tax_id: 1
        applicable_benefits:
        - description: description
          active: true
          id: 5
        - description: description
          active: true
          id: 5
        metadata:
          deletable: true
        applicable_earnings:
        - earning_id: 5.962133916683182
          earning_type: earning_type
          name: name
          input_type: input_type
          category: category
        - earning_id: 5.962133916683182
          earning_type: earning_type
          name: name
          input_type: input_type
          category: category
        check_date: 2022-06-03
        payment_period_start_date: 2022-05-15
        uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
        payment_period_end_date: 2022-05-30
        status: unprocessed
      properties:
        uuid:
          description: The UUID of the external payroll.
          example: c5fdae57-5483-4529-9aae-f0edceed92d4
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-uuid
        company_uuid:
          description: The UUID of the company.
          example: bcb305b0-2855-4025-8d22-e484a9e6b7c9
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-company_uuid
        check_date:
          description: External payroll's check date.
          example: 2022-06-03
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-check_date
        payment_period_start_date:
          description: External payroll's pay period start date.
          example: 2022-05-15
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-payment_period_start_date
        payment_period_end_date:
          description: External payroll's pay period end date.
          example: 2022-05-30
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-payment_period_end_date
        status:
          description: The status of the external payroll. The status will be `unprocessed`
            when the external payroll is created and transition to `processed` once
            tax liabilities are entered and finalized.  Once in the `processed` status
            all actions that can edit an external payroll will be disabled.
          enum:
          - unprocessed
          - processed
          example: unprocessed
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-status
        external_payroll_items:
          description: External payroll items for employees
          items:
            $ref: '#/components/schemas/External_Payroll_external_payroll_items_inner'
          readOnly: true
          type: array
        applicable_earnings:
          description: Applicable earnings based on company provisioning.
          items:
            $ref: '#/components/schemas/External_Payroll_applicable_earnings_inner'
          readOnly: true
          type: array
        applicable_benefits:
          description: Applicable benefits based on company provisioning.
          items:
            $ref: '#/components/schemas/External_Payroll_applicable_benefits_inner'
          readOnly: true
          type: array
        applicable_taxes:
          description: Applicable taxes based on company provisioning.
          items:
            $ref: '#/components/schemas/External_Payroll_applicable_taxes_inner'
          readOnly: true
          type: array
        metadata:
          $ref: '#/components/schemas/External_Payroll_metadata'
      title: ""
      type: object
      x-tags:
      - External Payrolls
      x-examples:
        Example:
          uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
          company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
          check_date: 2022-06-03
          payment_period_start_date: 2022-05-15
          payment_period_end_date: 2022-05-30
          status: unprocessed
          external_payroll_items:
          - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
            earnings:
            - amount: 10000
              hours: 0
              earning_type: CompanyPayType
              earning_id: 1
            - amount: 500
              hours: 0
              earning_type: CompanyEarningType
              earning_id: 4
            benefits:
            - benefit_id: 22
              company_contribution_amount: 100
              employee_deduction_amount: 50
            - benefit_id: 25
              company_contribution_amount: 0
              employee_deduction_amount: 300
            taxes:
            - tax_id: 1
              amount: 400
            - tax_id: 2
              amount: 60
          applicable_earnings:
          - earning_type: CompanyPayType
            earning_id: 1
            name: Regular Wages
            input_type: amount
            category: default
          - earning_type: CompanyEarningType
            earning_id: 4
            name: Cash Tips
            input_type: amount
            category: default
          applicable_benefits:
          - description: Kaiser
            id: 22
            active: true
          - description: HSA
            id: 25
            active: true
          applicable_taxes:
          - id: 1
            name: Federal Income Tax
            employer_tax: false
            resident_tax: false
          - id: 2
            name: Social Security
            employer_tax: false
            resident_tax: false
          metadata:
            deletable: true
      x-konfig-is-used-in-successful-response: true
    Webhook-Subscription:
      description: The representation of webhook subscription.
      example:
        subscription_types:
        - BankAccount
        - BankAccount
        uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
        url: https://partner-app.com/subscriber
        status: verified
      properties:
        uuid:
          description: The UUID of the webhook subscription.
          example: c5fdae57-5483-4529-9aae-f0edceed92d4
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook-Subscription-properties-uuid
        url:
          description: The webhook subscriber URL. Updates will be POSTed to this
            URL.
          example: https://partner-app.com/subscriber
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook-Subscription-properties-url
        status:
          description: The status of the webhook subscription.
          enum:
          - pending
          - verified
          - removed
          example: verified
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Webhook-Subscription-properties-status
        subscription_types:
          description: Receive updates for these types.
          items:
            enum:
            - BankAccount
            - Company
            - CompanyBenefit
            - Contractor
            - ContractorPayment
            - Employee
            - EmployeeBenefit
            - EmployeeJobCompensation
            - ExternalPayroll
            - Form
            - Location
            - Notification
            - Payroll
            - PaySchedule
            - Signatory
            type: string
          readOnly: false
          type: array
      title: ""
      type: object
      x-tags:
      - Webhooks
      x-examples:
        Example:
          uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
          url: https://partner-app.com/subscriber
          status: verified
          subscription_types:
          - BankAccount
          - Company
          - CompanyBenefit
          - Contractor
          - ContractorPayment
          - Employee
          - EmployeeBenefit
          - EmployeeJobCompensation
          - ExternalPayroll
          - Form
          - Location
          - Notification
          - Payroll
          - PaySchedule
          - Signatory
      x-konfig-is-used-in-successful-response: true
    External-Payroll-Basic:
      description: The representation of an external payroll with minimal information.
      example:
        company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
        check_date: 2022-06-03
        payment_period_start_date: 2022-05-15
        uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
        payment_period_end_date: 2022-05-30
        status: unprocessed
      properties:
        uuid:
          description: The UUID of the external payroll.
          example: c5fdae57-5483-4529-9aae-f0edceed92d4
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-uuid
        company_uuid:
          description: The UUID of the company.
          example: bcb305b0-2855-4025-8d22-e484a9e6b7c9
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-company_uuid
        check_date:
          description: External payroll's check date.
          example: 2022-06-03
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-check_date
        payment_period_start_date:
          description: External payroll's pay period start date.
          example: 2022-05-15
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-payment_period_start_date
        payment_period_end_date:
          description: External payroll's pay period end date.
          example: 2022-05-30
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-payment_period_end_date
        status:
          description: The status of the external payroll. The status will be `unprocessed`
            when the external payroll is created and transition to `processed` once
            tax liabilities are entered and finalized.  Once in the `processed` status
            all actions that can edit an external payroll will be disabled.
          enum:
          - unprocessed
          - processed
          readOnly: true
          type: string
      title: ""
      type: object
      x-tags:
      - External Payrolls
      x-examples:
        Example:
          uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
          company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
          check_date: 2022-06-03
          payment_period_start_date: 2022-05-15
          payment_period_end_date: 2022-05-30
    External-Payroll-Tax-Suggestions:
      description: The representation of an external payroll with minimal information.
      example:
        employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
        tax_suggestions:
          amount: amount
          tax_id: 0
      properties:
        employee_uuid:
          description: The UUID of the employee.
          example: d21848d5-446f-48a8-9430-30fbefeabda4
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-Tax-Suggestions-properties-employee_uuid
        tax_suggestions:
          $ref: '#/components/schemas/External_Payroll_Tax_Suggestions_tax_suggestions'
      title: ""
      type: object
      x-tags:
      - External Payrolls
      x-examples:
        Example:
          employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
          tax_suggestions:
          - tax_id: 1
            amount: 500
          - tax_id: 2
            amount: 100
          - tax_id: 4
            amount: 30
    Tax-Liabilities-Selections:
      description: The representation of tax liabilities selections.
      example:
        tax_name: Federal Income Tax
        possible_liabilities:
          payroll_check_date: payroll_check_date
          liability_amount: liability_amount
          external_payroll_uuid: external_payroll_uuid
        last_unpaid_external_payroll_uuid: last_unpaid_external_payroll_uuid
        tax_id: 1
      properties:
        tax_id:
          description: The ID of the tax.
          example: 1
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-tax_id
        tax_name:
          description: The name of the tax.
          example: Federal Income Tax
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-tax_name
        last_unpaid_external_payroll_uuid:
          description: The UUID of last unpaid external payroll.
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-last_unpaid_external_payroll_uuid
          example: null
        possible_liabilities:
          $ref: '#/components/schemas/Tax_Liabilities_Selections_possible_liabilities'
      title: ""
      type: object
      x-tags:
      - External Payrolls
      x-examples:
        Example:
          tax_id: 1
          tax_name: Federal Income Tax
          possible_liabilities:
          - liability_amount: 0
          - liability_amount: 3000
            payroll_check_date: 2022-06-01
            external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
    Admin:
      description: The representation of an admin user in Gusto.
      example:
        last_name: Smith
        uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
        first_name: John
        email: jsmith99@gmail.com
      properties:
        uuid:
          description: The unique id of the admin.
          example: 987058cc-23ee-46e9-81ef-5cee086cceca
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Admin-properties-uuid
        email:
          description: "The email of the admin for Gusto's system. If the email matches\
            \ an existing user, this will create an admin account for them."
          example: jsmith99@gmail.com
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Admin-properties-email
        first_name:
          description: The first name of the admin.
          example: John
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Admin-properties-first_name
        last_name:
          description: The last name of the admin.
          example: Smith
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Admin-properties-last_name
      title: Admin
      type: object
      x-examples:
        Example:
          uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
          first_name: John
          last_name: Smith
          email: jsmith99@gmail.com
      x-tags:
      - Admins
      x-konfig-is-used-in-successful-response: true
    Company:
      description: The representation of a company in Gusto.
      example:
        compensations:
          paid_time_off:
          - name: Vacation Hours
          - name: Vacation Hours
          hourly:
          - name: Overtime
            multiple: 1.5
          - name: Overtime
            multiple: 1.5
          fixed:
          - name: Bonus
          - name: Bonus
        primary_signatory:
          home_address:
            zip: "94107"
            country: USA
            street_1: 524 Roob Divide
            city: San Francisco
            street_2: Suite 565
            state: CA
          phone: phone
          middle_initial: ""
          last_name: Carter
          first_name: Alda
          email: louie.hessel7757869450111547@zemlak.biz
        is_partner_managed: false
        join_date: join_date
        funding_type: ach
        is_suspended: false
        ein: 00-0000001
        uuid: uuid
        trade_name: Record Shoppe
        pay_schedule_type: by_department
        entity_type: C-Corporation
        tier: complete
        primary_payroll_admin:
          phone: 1-565-710-7559
          last_name: Labadie
          first_name: Ian
          email: louie.hessel7757869450111547@zemlak.biz
        name: Shoppe Studios LLC
        company_status: Approved
        locations:
        - zip: "94107"
          country: USA
          street_1: 412 Kiera Stravenue
          city: San Francisco
          street_2: Suite 391
          active: true
          state: CA
        - zip: "94107"
          country: USA
          street_1: 412 Kiera Stravenue
          city: San Francisco
          street_2: Suite 391
          active: true
          state: CA
      properties:
        ein:
          description: The Federal Employer Identification Number of the company.
          example: 00-0000001
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-ein
        entity_type:
          description: The tax payer type of the company.
          enum:
          - C-Corporation
          - S-Corporation
          - Sole proprietor
          - LLC
          - LLP
          - Limited partnership
          - Co-ownership
          - Association
          - Trusteeship
          - General partnership
          - Joint venture
          - Non-Profit
          example: C-Corporation
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-entity_type
        tier:
          description: The Gusto product tier of the company (not applicable to Embedded
            partner managed companies).
          enum:
          - simple
          - plus
          - premium
          - core
          - complete
          - concierge
          - contractor_only
          - basic
          example: complete
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-tier
        is_suspended:
          description: Whether or not the company is suspended in Gusto. Suspended
            companies may not run payroll.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-is_suspended
        company_status:
          description: "The status of the company in Gusto. \"Approved\" companies\
            \ may run payroll with Gusto. \"Not Approved\" companies may not yet run\
            \ payroll with Gusto. In order to run payroll, the company may need to\
            \ complete onboarding or contact support. \"Suspended\" companies may\
            \ not run payroll with Gusto. In order to unsuspend their account, the\
            \ company must contact support."
          enum:
          - Approved
          - Not Approved
          - Suspended
          example: Approved
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-company_status
        uuid:
          description: A unique identifier of the company in Gusto.
          readOnly: true
          type: string
        name:
          description: The name of the company.
          example: Shoppe Studios LLC
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-name
        trade_name:
          description: The trade name of the company.
          example: Record Shoppe
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-trade_name
        is_partner_managed:
          description: Whether the company is fully managed by a partner via the API
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-is_partner_managed
        pay_schedule_type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          example: by_department
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-pay_schedule_type
        join_date:
          description: Company's first invoiceable event date
          readOnly: true
          type: string
        funding_type:
          description: Company's default funding type
          enum:
          - ach
          - reverse_wire
          - wire_in
          - brex
          type: string
        locations:
          description: The locations of the company.
          items:
            $ref: '#/components/schemas/Company-Address'
          readOnly: true
          type: array
          uniqueItems: false
        compensations:
          $ref: '#/components/schemas/Company_compensations'
        primary_signatory:
          $ref: '#/components/schemas/Company_primary_signatory'
        primary_payroll_admin:
          $ref: '#/components/schemas/Company_primary_payroll_admin'
      title: Company
      type: object
      x-examples:
        Example:
          ein: 00-0000001
          entity_type: C-Corporation
          tier: complete
          is_suspended: false
          company_status: Approved
          name: Shoppe Studios LLC
          trade_name: Record Shoppe
          is_partner_managed: false
          pay_schedule_type: by_department
          locations:
          - street_1: 412 Kiera Stravenue
            street_2: Suite 391
            city: San Francisco
            state: CA
            zip: "94107"
            country: USA
            active: true
          - street_1: 644 Fay Vista
            street_2: Suite 842
            city: Richmond
            state: VA
            zip: "23218"
            country: USA
            active: true
          compensations:
            hourly:
            - name: Overtime
              multiple: 1.5
            - name: Double overtime
              multiple: 2
            - name: Regular
              multiple: 1
            - name: Outstanding vacation
              multiple: 1
            - name: Holiday
              multiple: 1
            - name: Emergency sick - self care
              multiple: 1
            - name: Emergency sick - caring for others
              multiple: 1
            - name: FMLA Public Health Emergency Leave
              multiple: 1
            - name: Regular Hours
              multiple: 1
            fixed:
            - name: Bonus
            - name: Commission
            - name: Paycheck Tips
            - name: Cash Tips
            - name: Correction Payment
            - name: Severance
            - name: Minimum Wage Adjustment
            - name: Reimbursement
            paid_time_off:
            - name: Vacation Hours
            - name: Sick Hours
            - name: Holiday Hours
          primary_signatory:
            first_name: Alda
            middle_initial: ""
            last_name: Carter
            email: louie.hessel7757869450111547@zemlak.biz
            home_address:
              street_1: 524 Roob Divide
              street_2: Suite 565
              city: San Francisco
              state: CA
              zip: "94107"
              country: USA
          primary_payroll_admin:
            first_name: Ian
            last_name: Labadie
            phone: 1-565-710-7559
            email: louie.hessel7757869450111547@zemlak.biz
      x-tags:
      - Companies
      x-konfig-is-used-in-successful-response: true
    Company-Onboarding-Status:
      description: The representation of a company's onboarding status
      example:
        onboarding_completed: false
        ? ""
        : "{\"uuid\":\"c44d66dc-c41b-4a60-9e25-5e93ff8583f2\",\"onboarding_completed\"\
          :false,\"onboarding_steps\":[{\"title\":\"Add Your Company's Addresses\"\
          ,\"id\":\"add_addresses\",\"required\":true,\"completed\":true,\"skippable\"\
          :false,\"requirements\":[]},{\"title\":\"Add Your Employees\",\"id\":\"\
          add_employees\",\"required\":true,\"completed\":true,\"skippable\":true,\"\
          requirements\":[\"add_addresses\"]},{\"title\":\"Enter Your Federal Tax\
          \ Information\",\"id\":\"federal_tax_setup\",\"required\":true,\"completed\"\
          :true,\"skippable\":false,\"requirements\":[\"add_addresses\",\"add_employees\"\
          ]},{\"title\":\"Add Your Bank Account\",\"id\":\"add_bank_info\",\"required\"\
          :true,\"completed\":true,\"skippable\":false,\"requirements\":[]},{\"title\"\
          :\"Select a Pay Schedule\",\"id\":\"payroll_schedule\",\"required\":true,\"\
          completed\":false,\"skippable\":false,\"requirements\":[]},{\"title\":\"\
          Sign Documents\",\"id\":\"sign_all_forms\",\"required\":true,\"completed\"\
          :false,\"skippable\":false,\"requirements\":[\"add_employees\",\"federal_tax_setup\"\
          ,\"state_setup\",\"add_bank_info\",\"payroll_schedule\"]},{\"title\":\"\
          Verify Your Bank Account\",\"id\":\"verify_bank_info\",\"required\":true,\"\
          completed\":false,\"skippable\":false,\"requirements\":[\"add_bank_info\"\
          ]}]}"
        onboarding_steps:
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          skippable: true
          title: title
          required: true
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          skippable: true
          title: title
          required: true
        uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
      properties:
        uuid:
          description: the UUID of the company
          example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-uuid
        onboarding_completed:
          description: a boolean flag for the company's onboarding status
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-onboarding_completed
        onboarding_steps:
          description: a list of company onboarding steps
          items:
            $ref: '#/components/schemas/Onboarding_step_1'
          type: array
        ? ""
        : example: "{\"uuid\":\"c44d66dc-c41b-4a60-9e25-5e93ff8583f2\",\"onboarding_completed\"\
            :false,\"onboarding_steps\":[{\"title\":\"Add Your Company's Addresses\"\
            ,\"id\":\"add_addresses\",\"required\":true,\"completed\":true,\"skippable\"\
            :false,\"requirements\":[]},{\"title\":\"Add Your Employees\",\"id\":\"\
            add_employees\",\"required\":true,\"completed\":true,\"skippable\":true,\"\
            requirements\":[\"add_addresses\"]},{\"title\":\"Enter Your Federal Tax\
            \ Information\",\"id\":\"federal_tax_setup\",\"required\":true,\"completed\"\
            :true,\"skippable\":false,\"requirements\":[\"add_addresses\",\"add_employees\"\
            ]},{\"title\":\"Add Your Bank Account\",\"id\":\"add_bank_info\",\"required\"\
            :true,\"completed\":true,\"skippable\":false,\"requirements\":[]},{\"\
            title\":\"Select a Pay Schedule\",\"id\":\"payroll_schedule\",\"required\"\
            :true,\"completed\":false,\"skippable\":false,\"requirements\":[]},{\"\
            title\":\"Sign Documents\",\"id\":\"sign_all_forms\",\"required\":true,\"\
            completed\":false,\"skippable\":false,\"requirements\":[\"add_employees\"\
            ,\"federal_tax_setup\",\"state_setup\",\"add_bank_info\",\"payroll_schedule\"\
            ]},{\"title\":\"Verify Your Bank Account\",\"id\":\"verify_bank_info\"\
            ,\"required\":true,\"completed\":false,\"skippable\":false,\"requirements\"\
            :[\"add_bank_info\"]}]}"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-
      title: ""
      type: object
      x-examples:
        Example:
          uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          onboarding_completed: false
          onboarding_steps:
          - title: Add Your Company's Addresses
            id: add_addresses
            required: true
            completed: true
            skippable: false
            requirements: []
          - title: Add Your Employees
            id: add_employees
            required: true
            completed: true
            skippable: true
            requirements:
            - add_addresses
          - title: Enter Your Federal Tax Information
            id: federal_tax_setup
            required: true
            completed: true
            skippable: false
            requirements:
            - add_addresses
            - add_employees
          - title: Add Your Bank Account
            id: add_bank_info
            required: true
            completed: true
            skippable: false
            requirements: []
          - title: Select a Pay Schedule
            id: payroll_schedule
            required: true
            completed: false
            skippable: false
            requirements: []
          - title: Sign Documents
            id: sign_all_forms
            required: true
            completed: false
            skippable: false
            requirements:
            - add_employees
            - federal_tax_setup
            - state_setup
            - add_bank_info
            - payroll_schedule
          - title: Verify Your Bank Account
            id: verify_bank_info
            required: true
            completed: false
            skippable: false
            requirements:
            - add_bank_info
      x-tags:
      - Companies
      x-konfig-is-used-in-successful-response: true
    Payment-Configs:
      example:
        company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
        partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
        payment_speed: 2-day
        fast_payment_limit: "5000"
      properties:
        company_uuid:
          description: Company uuid
          example: 423dd616-6dbc-4724-938a-403f6217a933
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payment-Configs-properties-company_uuid
        partner_uuid:
          description: Partner uuid
          example: 556f05d0-48e0-4c47-bce5-db9aea923043
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payment-Configs-properties-partner_uuid
        fast_payment_limit:
          description: Payment limit for 1-day or 2-day payroll
          example: "5000"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payment-Configs-properties-fast_payment_limit
        payment_speed:
          description: "Payment speed for 1-day, 2-day, 4-day"
          example: 2-day
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payment-Configs-properties-payment_speed
      title: Payment-Configs
      type: object
      x-examples:
        Example:
          company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
          partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
          fast_payment_limit: "5000"
          payment_speed: 2-day
      x-tags:
      - Payment Configs
      x-konfig-is-used-in-successful-response: true
    Contractor-Body:
      properties:
        type:
          default: Individual
          description: The contractor type.
          enum:
          - Individual
          - Business
          example: Individual
          type: string
          x-konfig-original-example: Individual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-type
        wage_type:
          description: |
            The contractor’s wage type.
          enum:
          - Fixed
          - Hourly
          type: string
        start_date:
          description: |
            The day when the contractor will start working for the company.
          example: 2020-01-11
          type: string
          x-konfig-original-example: 2020-01-11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-start_date
        hourly_rate:
          description: The contractor’s hourly rate. This attribute is required if
            the wage_type is `Hourly`.
          example: "40.0"
          type: string
          x-konfig-original-example: "40.0"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-hourly_rate
        self_onboarding:
          default: false
          description: |-
            Whether the contractor or the payroll admin will complete onboarding in Gusto.
            Self-onboarding is recommended so that contractors receive Gusto accounts.
            If self_onboarding is true, then email is required.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-self_onboarding
        email:
          description: The contractor’s email address.
          type: string
        first_name:
          description: |-
            The contractor’s first name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        last_name:
          description: |-
            The contractor’s last name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        middle_initial:
          description: |-
            The contractor’s middle initial.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        file_new_hire_report:
          default: false
          description: |-
            The boolean flag indicating whether Gusto will file a new hire report for the contractor.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-file_new_hire_report
        work_state:
          description: |-
            State where the contractor will be conducting the majority of their work for the company.
            This value is used when generating the new hire report.
            This attribute is required for `Individual` contractors if `file_new_hire_report` is true and will be ignored for `Business` contractors.
          nullable: true
          type: string
        ssn:
          description: |-
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
            Social security number is needed to file the annual 1099 tax form.
          pattern: "[0-9]{9}"
          type: string
        business_name:
          description: The name of the contractor business. This attribute is required
            for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        ein:
          description: |-
            The employer identification number of the contractor business.
            This attribute is optional for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        is_active:
          description: The status of the contractor.
          type: boolean
      type: object
    Contractor:
      description: The representation of a contractor (individual or business) in
        Gusto.
      example:
        company_uuid: company_uuid
        onboarded: true
        business_name: business_name
        file_new_hire_report: false
        is_active: true
        address:
          zip: zip
          country: country
          street_1: street_1
          city: city
          street_2: street_2
          state: state
        onboarding_status: onboarding_completed
        last_name: last_name
        middle_initial: middle_initial
        has_ein: true
        ein: ein
        type: Individual
        version: version
        uuid: uuid
        work_state: work_state
        hourly_rate: "50.0"
        first_name: first_name
        email: email
        wage_type: Fixed
        start_date: start_date
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        uuid:
          description: The UUID of the contractor in Gusto.
          readOnly: true
          type: string
        company_uuid:
          description: The UUID of the company the contractor is employed by.
          readOnly: true
          type: string
        wage_type:
          description: "The contractor's wage type, either \"Fixed\" or \"Hourly\"\
            ."
          enum:
          - Fixed
          - Hourly
          type: string
        is_active:
          default: true
          description: The status of the contractor with the company.
          example: true
          readOnly: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-properties-is_active
        type:
          description: "The contractor's type, either \"Individual\" or \"Business\"\
            . "
          enum:
          - Individual
          - Business
          type: string
        first_name:
          description: The contractor’s first name. This attribute is required for
            “Individual” contractors and will be ignored for “Business” contractors.
          nullable: true
          type: string
        last_name:
          description: The contractor’s last name. This attribute is required for
            “Individual” contractors and will be ignored for “Business” contractors.
          nullable: true
          type: string
        middle_initial:
          description: The contractor’s middle initial. This attribute is optional
            for “Individual” contractors and will be ignored for “Business” contractors.
          nullable: true
          type: string
        business_name:
          description: The name of the contractor business. This attribute is required
            for “Business” contractors and will be ignored for “Individual” contractors.
          nullable: true
          type: string
        ein:
          description: The Federal Employer Identification Number of the contractor
            business. This attribute is optional for “Business” contractors and will
            be ignored for “Individual” contractors.
          nullable: true
          type: string
        has_ein:
          description: Whether company's Employer Identification Number (EIN) is present
          nullable: true
          type: boolean
        email:
          description: 'The contractor’s email address. This attribute is optional
            for “Individual” contractors and will be ignored for “Business” contractors. '
          nullable: true
          type: string
        start_date:
          description: The contractor's start date.
          readOnly: true
          type: string
        address:
          $ref: '#/components/schemas/Contractor_address'
        hourly_rate:
          description: The contractor’s hourly rate. This attribute is required if
            the wage_type is “Hourly”.
          example: "50.0"
          type: string
          x-konfig-original-example: "50.0"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-properties-hourly_rate
        file_new_hire_report:
          default: false
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the contractor
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-properties-file_new_hire_report
        work_state:
          description: |-
            State where the contractor will be conducting the majority of their work for the company.
            This value is used when generating the new hire report.
          nullable: true
          type: string
        onboarded:
          description: The updated onboarding status for the contractor
          type: boolean
        onboarding_status:
          description: One of the "onboarding_status" enum values.
          enum:
          - onboarding_completed
          - admin_onboarding_review
          - admin_onboarding_incomplete
          type: string
      type: object
      x-tags:
      - Contractors
      x-konfig-is-used-in-successful-response: true
    Contractor-Onboarding-Status:
      description: The representation of an contractor's onboarding status.
      example:
        onboarding_steps:
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          title: title
          required: true
        - requirements:
          - requirements
          - requirements
          id: id
          completed: true
          title: title
          required: true
        onboarding_status: onboarding_completed
        uuid: uuid
      properties:
        uuid:
          description: Unique identifier for this contractor.
          type: string
        onboarding_status:
          description: One of the "onboarding_status" enum values.
          enum:
          - onboarding_completed
          - admin_onboarding_review
          - admin_onboarding_incomplete
          type: string
        onboarding_steps:
          description: List of steps required to onboard a contractor.
          items:
            $ref: '#/components/schemas/Onboarding_step_2'
          type: array
      title: Contractor-Onboarding-Status
      type: object
      x-tags:
      - Contractor
      x-konfig-is-used-in-successful-response: true
    Contractor-Payment:
      description: The representation of a single contractor payment.
      example:
        date: 2020-10-19
        hours: "40.0"
        bonus: "20.0"
        uuid: 04552eb9-7829-4b18-ae96-6983552948df
        contractor_uuid: contractor_uuid
        hourly_rate: "18.0"
        reimbursement: "100.0"
        payment_method: Direct Deposit
        wage_total: "740.00"
        status: Funded
        may_cancel: true
        wage: "0.0"
        wage_type: Hourly
      properties:
        uuid:
          description: The unique identifier of the contractor payment in Gusto.
          example: 04552eb9-7829-4b18-ae96-6983552948df
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-uuid
        contractor_uuid:
          description: The UUID of the contractor.
          readOnly: true
          type: string
        bonus:
          description: The bonus amount in the payment.
          example: "20.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-bonus
        date:
          description: The payment date.
          example: 2020-10-19
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-date
        hours:
          description: The number of hours worked for the payment.
          example: "40.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-hours
        payment_method:
          description: The payment method.
          enum:
          - Direct Deposit
          - Check
          - Historical Payment
          - Correction Payment
          example: Direct Deposit
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-payment_method
        reimbursement:
          description: The reimbursement amount in the payment.
          example: "100.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-reimbursement
        status:
          description: Contractor payment status
          enum:
          - Funded
          - Unfunded
          example: Funded
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-status
        hourly_rate:
          description: The rate per hour worked for the payment.
          example: "18.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-hourly_rate
        may_cancel:
          description: Determine if the contractor payment can be cancelled.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-may_cancel
        wage:
          description: "The fixed wage of the payment, regardless of hours worked."
          example: "0.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage
        wage_type:
          description: The wage type for the payment.
          enum:
          - Hourly
          - Fixed
          example: Hourly
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage_type
        wage_total:
          description: (hours * hourly_rate) + wage + bonus
          example: "740.00"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage_total
      title: Contractor Payment
      type: object
      x-examples:
        Example:
          uuid: 04552eb9-7829-4b18-ae96-6983552948df
          bonus: "20.0"
          date: 2020-10-19
          hours: "40.0"
          payment_method: Direct Deposit
          reimbursement: "100.0"
          hourly_rate: "18.0"
          may_cancel: true
          status: Funded
          wage: "0.0"
          wage_type: Hourly
          wage_total: "740.00"
      x-tags:
      - Contractor Payments
      x-konfig-is-used-in-successful-response: true
    Contractor-Payment-Summary:
      description: The representation of the summary of contractor payments for a
        given company in a given time period.
      properties:
        total:
          $ref: '#/components/schemas/Contractor_Payment_Summary_total'
        contractor_payments:
          description: "The individual contractor payments, within a given time period,\
            \ grouped by contractor."
          items:
            $ref: '#/components/schemas/Contractor_Payment_Summary_contractor_payments_inner'
          readOnly: true
          type: array
          uniqueItems: false
      type: object
      x-examples:
        Example:
          total:
            reimbursements: "110.0"
            wages: "1840.0"
          contractor_payments:
          - contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
            reimbursement_total: "110.0"
            wage_total: "1840.0"
            payments:
            - uuid: 04552eb9-7829-4b18-ae96-6983552948df
              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
              bonus: "20.0"
              date: 2020-10-19
              hours: "40.0"
              payment_method: Direct Deposit
              reimbursement: "100.0"
              hourly_rate: "18.0"
              may_cancel: true
              wage: "0.0"
              wage_type: Hourly
              wage_total: "740.00"
            - uuid: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
              bonus: "100.0"
              date: 2020-10-19
              hours: "0.00"
              payment_method: Direct Deposit
              reimbursement: "10.0"
              hourly_rate: "0.0"
              may_cancel: true
              wage: "1000.0"
              wage_type: Fixed
              wage_total: "1100.0"
      x-tags:
      - Contractor Payments
    Contractor-Payment-Summary-By-Dates:
      description: The representation of the summary of contractor payments for a
        given company in a given time period.
      properties:
        total:
          $ref: '#/components/schemas/Contractor_Payment_Summary_By_Dates_total'
        contractor_payments:
          description: "The individual contractor payments, within a given time period,\
            \ grouped by check date."
          items:
            $ref: '#/components/schemas/Contractor_Payment_Summary_By_Dates_contractor_payments_inner'
          readOnly: true
          type: array
          uniqueItems: false
      type: object
      x-examples:
        Example:
          total:
            reimbursements: "110.0"
            wages: "1840.0"
          contractor_payments:
          - check_date: 2020-10-19
            reimbursement_total: "110.0"
            wage_total: "1840.0"
            payments:
            - uuid: 04552eb9-7829-4b18-ae96-6983552948df
              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
              bonus: "20.0"
              date: 2020-10-19
              hours: "40.0"
              payment_method: Direct Deposit
              reimbursement: "100.0"
              hourly_rate: "18.0"
              wage: "0.0"
              wage_type: Hourly
              wage_total: "740.00"
            - uuid: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
              bonus: "100.0"
              date: 2020-10-19
              hours: "0.00"
              payment_method: Direct Deposit
              reimbursement: "10.0"
              hourly_rate: "0.0"
              wage: "1000.0"
              wage_type: Fixed
              wage_total: "1100.0"
      x-tags:
      - Contractor Payments
    Contractor-Payment-Method:
      description: ""
      example:
        splits:
        - split_amount: 6
          name: name
          hidden_account_number: hidden_account_number
          priority: 0
          uuid: uuid
        - split_amount: 6
          name: name
          hidden_account_number: hidden_account_number
          priority: 0
          uuid: uuid
        split_by: Amount
        type: Direct Deposit
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        type:
          description: "The payment method type. If type is Check, then split_by and\
            \ splits do not need to be populated. If type is Direct Deposit, split_by\
            \ and splits are required."
          enum:
          - Direct Deposit
          - Check
          type: string
        split_by:
          description: "Describes how the payment will be split. If split_by is Percentage,\
            \ then the split amounts must add up to exactly 100. If split_by is Amount,\
            \ then the last split amount must be nil to capture the remainder."
          enum:
          - Amount
          - Percentage
          nullable: true
          type: string
        splits:
          items:
            $ref: '#/components/schemas/Payment-Method-Bank-Account'
          nullable: true
          type: array
      title: Contractor-Payment-Method
      type: object
      x-examples:
        Example-1:
          value:
            version: 63859768485e218ccf8a449bb60f14ed
            type: Direct Deposit
            split_by: Percentage
            splits:
            - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
              name: BoA Checking Account
              priority: 1
              split_amount: 100
        Example-2:
          value:
            version: 63859768485e218ccf8a449bb60f14ed
            type: Check
      x-tags:
      - Contractor Payment Method
      x-konfig-is-used-in-successful-response: true
    Payment-Method-Bank-Account:
      description: Representation of a bank account item
      example:
        split_amount: 6
        name: name
        hidden_account_number: hidden_account_number
        priority: 0
        uuid: uuid
      properties:
        uuid:
          description: The bank account ID
          type: string
        name:
          description: The bank account name
          type: string
        hidden_account_number:
          description: Masked bank account number
          type: string
        priority:
          description: "The order of priority for each payment split, with priority\
            \ 1 being the first bank account paid. Priority must be unique and sequential."
          type: integer
        split_amount:
          description: The cents amount allocated for each payment split
          nullable: true
          type: integer
      type: object
    Time-Off-Request:
      description: 'The representation of a time off request. '
      properties:
        id:
          description: The ID of the time off request.
          example: 1
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-id
        status:
          description: The status of the time off request.
          enum:
          - pending
          - approved
          - denied
          example: approved
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-status
        employee_note:
          description: "A note about the time off request, from the employee to the\
            \ employer."
          example: Vacation at Disney World!
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee_note
        employer_note:
          description: "A note about the time off request, from the employer to the\
            \ employee."
          example: But Universal has Harry Potter World...
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-employer_note
        request_type:
          description: The type of time off request.
          enum:
          - vacation
          - sick
          example: vacation
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-request_type
        days:
          description: "An object that represents the days in the time off request.\
            \ The keys of the object are the dates, formatted as a YYYY-MM-DD string.\
            \ The values of the object are the number of hours requested off for each\
            \ day, formatted as a string representation of a numeric decimal to the\
            \ thousands place."
          readOnly: true
          type: object
        employee:
          $ref: '#/components/schemas/Time_Off_Request_employee'
        initiator:
          $ref: '#/components/schemas/Time_Off_Request_initiator'
        approver:
          $ref: '#/components/schemas/Time_Off_Request_approver'
      title: Time-Off-Request
      type: object
      x-examples:
        Example:
          id: "1"
          status: approved
          employee_note: Vacation at Disney World!
          employer_note: But Universal has Harry Potter World...
          days:
            "2019-06-01": "4.000"
            "2019-06-02": "8.000"
            "2019-06-03": "2.000"
          request_type: vacation
          employee:
            id: "234567"
            full_name: Jessica Gusto
          approver:
            id: "345678"
            full_name: Karen Gusto
          initiator:
            id: "234567"
            full_name: Jessica Gusto
      x-tags:
      - Time Off Requests
    Unprocessable-Entity-Error-Object:
      description: "Unprocessable Entity\n  \nThis may happen when the body of your\
        \ request contains errors such as `invalid_attribute_value`, or the request\
        \ fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)\
        \ guide for more details.\n"
      properties:
        errors:
          items:
            properties:
              error_key:
                description: Specifies where the error occurs. Typically this key
                  identifies the attribute/parameter related to the error.
                type: string
              category:
                description: Specifies the type of error. The category provides error
                  groupings and can be used to build custom error handling in your
                  integration.
                type: string
              message:
                description: Provides details about the error - generally this message
                  can be surfaced to an end user.
                type: string
              metadata:
                description: "Contains relevant data to identify the resource in question\
                  \ when applicable. For example, to identify an entity `entity_type`\
                  \ and `entity_uuid` will be provided."
                type: object
            type: object
          type: array
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    Payroll-Blockers-Error:
      description: |-
        Payroll Blockers Error

        For detailed information, see the [Payroll Blockers guide](https://docs.gusto.com/embedded-payroll/docs/payroll-blockers)
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Payroll_Blockers_Error_errors_inner'
          type: array
      type: object
    Authentication:
      description: ""
      example:
        access_token: access_token
        refresh_token: refresh_token
        scope: scope
        created_at: created_at
        token_type: bearer
        expires_in: 7200
      properties:
        access_token:
          description: A new access token that can be used for subsequent authenticated
            requests
          type: string
        token_type:
          default: bearer
          description: The literal string 'bearer'
          example: bearer
          type: string
          x-konfig-original-example: bearer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Authentication-properties-token_type
        expires_in:
          default: 7200
          description: "The TTL of this token. After this amount of time, you must\
            \ hit the refresh token endpoint to continue making authenticated requests."
          example: 7200
          type: number
          x-konfig-original-example: 7200
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Authentication-properties-expires_in
        refresh_token:
          description: A token that must be passed to the refresh token endpoint to
            get a new authenticated token.
          type: string
        created_at:
          description: Datetime for when the new access token is created.
          type: string
        scope:
          description: All of the scopes for which the access token provides access.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Pay-Schedule:
      description: The representation of a pay schedule.
      example:
        day_2: 31
        day_1: 15
        anchor_pay_date: 2020-05-15
        custom_name: A new monthly pay schedule
        auto_pilot: false
        name: Engineering
        active: true
        uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
        anchor_end_of_pay_period: 2020-05-08
        frequency: Twice per month
      properties:
        uuid:
          description: The unique identifier of the pay schedule in Gusto.
          example: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-uuid
        frequency:
          description: The frequency that employees on this pay schedule are paid
            with Gusto.
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          - Quarterly
          - Annually
          example: Twice per month
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-frequency
        anchor_pay_date:
          description: The first date that employees on this pay schedule are paid
            with Gusto.
          example: 2020-05-15
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-anchor_pay_date
        anchor_end_of_pay_period:
          description: The last date of the first pay period. This can be the same
            date as the anchor pay date.
          example: 2020-05-08
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-anchor_end_of_pay_period
        day_1:
          description: An integer between 1 and 31 indicating the first day of the
            month that employees are paid. This field is only relevant for pay schedules
            with the “Twice per month” and “Monthly” frequencies. It will be null
            for pay schedules with other frequencies.
          example: 15
          nullable: true
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-day_1
        day_2:
          description: "An integer between 1 and 31 indicating the second day of the\
            \ month that employees are paid. This field is the second pay date for\
            \ pay schedules with the \"Twice per month\" frequency. For semi-monthly\
            \ pay schedules, this field should be set to 31. For months shorter than\
            \ 31 days, we will set the second pay date to the last day of the month.\
            \ It will be null for pay schedules with other frequencies."
          example: 31
          nullable: true
          readOnly: true
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-day_2
        name:
          description: "This field will be hourly when the pay schedule is for hourly\
            \ employees, salaried when the pay schedule is for salaried employees,\
            \ the department name if pay schedule is by department, and null when\
            \ the pay schedule is for all employees."
          example: Engineering
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-name
        custom_name:
          description: "A custom name for a pay schedule, defaults to the pay frequency\
            \ description."
          example: A new monthly pay schedule
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-custom_name
        auto_pilot:
          description: "With Autopilot® enabled, payroll will run automatically one\
            \ day before your payroll deadlines."
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-properties-auto_pilot
        active:
          description: Whether this pay schedule is associated with any employees.
            A pay schedule is inactive when it's unassigned.
          readOnly: true
          type: boolean
      title: Pay Schedule
      type: object
      x-examples:
        Example:
          uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
          frequency: Twice per month
          anchor_pay_date: 2020-05-15
          anchor_end_of_pay_period: 2020-05-08
          day_1: 15
          day_2: 31
          name: Engineering
          auto_pilot: false
          custom_name: A new monthly pay schedule
      x-tags:
      - Pay Schedules
      x-konfig-is-used-in-successful-response: true
    Company-Bank-Account:
      description: The company bank account
      example:
        company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
        account_type: Checking
        last_cached_balance: last_cached_balance
        balance_fetched_date: balance_fetched_date
        hidden_account_number: XXXX4087
        name: Employer Funding Account
        verification_type: bank_deposits
        routing_number: "851070439"
        verification_status: verified
        uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
        plaid_status: connected
      properties:
        uuid:
          description: UUID of the bank account
          example: 1263eae5-4411-48d9-bd6d-18ed93082e65
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-uuid
        company_uuid:
          description: UUID of the company
          example: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-company_uuid
        account_type:
          description: Bank account type
          enum:
          - Checking
          - Savings
          example: Checking
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-account_type
        routing_number:
          description: The bank account's routing number
          example: "851070439"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-routing_number
        hidden_account_number:
          description: Masked bank account number
          example: XXXX4087
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-hidden_account_number
        verification_status:
          description: |-
            The verification status of the bank account.

            'awaiting_deposits' means the bank account is just created and money is being transferred.
            'ready_for_verification' means the micro-deposits are completed and the verification process can begin by using the verify endpoint.
            'verified' means the bank account is verified.
          enum:
          - awaiting_deposits
          - ready_for_verification
          - verified
          example: verified
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-verification_status
        verification_type:
          description: |-
            The verification type of the bank account.

            'bank_deposits' means the bank account is connected by entering routing and accounting numbers and verifying through micro-deposits.
            'plaid' means the bank account is connected through Plaid.
          enum:
          - bank_deposits
          - plaid
          - plaid_external
          example: bank_deposits
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-verification_type
        plaid_status:
          description: The Plaid connection status of the bank account. Only applies
            when verification type is Plaid.
          enum:
          - connected
          - disconnected
          type: string
        last_cached_balance:
          description: The last fetch balance for the bank account. Please be aware
            that this amount does not reflect the most up-to-date balance and only
            applies when the verification type is Plaid.
          type: string
        balance_fetched_date:
          description: The balance fetch date associated with the last_cached_balance.
            Only applies when verification type is Plaid.
          type: string
        name:
          description: Name of bank account
          example: Employer Funding Account
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Bank-Account-properties-name
      type: object
      x-examples:
        Example:
          uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
          company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
          account_type: Checking
          routing_number: "851070439"
          hidden_account_number: XXXX4087
          verification_status: verified
          verification_type: bank_deposits
          name: Employer Funding Account
      x-tags:
      - Company Bank Accounts
      x-konfig-is-used-in-successful-response: true
    Benefit-Type-Requirements:
      description: ""
      example:
        limit_option:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        contribution:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        catch_up:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        employee_deduction:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        deduct_as_percentage:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        coverage_salary_multiplier:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        coverage_amount:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
        company_contribution_annual_maximum:
          editable: true
          default_value:
            type: type
            value: value
          choices:
          - choices
          - choices
          required: true
      properties:
        employee_deduction:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        contribution:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        deduct_as_percentage:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        catch_up:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        limit_option:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        company_contribution_annual_maximum:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        coverage_salary_multiplier:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
        coverage_amount:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction'
      type: object
      x-tags:
      - Company Benefits
      x-konfig-is-used-in-successful-response: true
    Benefit-Summary:
      description: ""
      example:
        end_date: end_date
        description: description
        employees:
          benefit_contribution: benefit_contribution
          payroll_benefits:
            payroll_type: payroll_type
            payroll_uuid: payroll_uuid
            check_date: check_date
            pay_period:
              end_date: end_date
              start_date: start_date
            gross_pay: gross_pay
            company_benefit_deduction: company_benefit_deduction
            company_benefit_contribution: company_benefit_contribution
          gross_pay: gross_pay
          uuid: uuid
          benefit_deduction: benefit_deduction
          company_benefit_deduction: company_benefit_deduction
          company_benefit_contribution: company_benefit_contribution
        company_benefit_deduction: company_benefit_deduction
        start_date: start_date
        company_benefit_contribution: company_benefit_contribution
      properties:
        description:
          description: Description of the benefit.
          type: string
        start_date:
          description: The start date of benefit summary.
          type: string
        end_date:
          description: The end date of benefit summary.
          type: string
        company_benefit_deduction:
          description: The aggregate of employee deduction for all employees given
            the period of time and benefit type.
          type: string
        company_benefit_contribution:
          description: The aggregate of company contribution for all employees given
            the period of time and benefit type.
          type: string
        employees:
          $ref: '#/components/schemas/Benefit_Summary_employees'
      type: object
      x-tags:
      - Company Benefits
      x-konfig-is-used-in-successful-response: true
    Supported-Benefit:
      description: ""
      example:
        benefit_type: 1
        posttax: false
        imputed: false
        name: Medical Insurance
        description: Deductions and contributions for Medical Insurance
        yearly_limit: false
        pretax: true
        retirement: false
        category: Health
        healthcare: true
      properties:
        description:
          description: The description of the benefit.
          example: Deductions and contributions for Medical Insurance
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-description
        benefit_type:
          description: The benefit type in Gusto.
          example: 1
          readOnly: true
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-benefit_type
        name:
          description: The name of the benefit.
          example: Medical Insurance
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-name
        pretax:
          description: "Whether the benefit is deducted before tax calculations, thus\
            \ reducing one’s taxable income"
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-pretax
        posttax:
          description: Whether the benefit is deducted after tax calculations.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-posttax
        imputed:
          description: Whether the benefit is considered imputed income.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-imputed
        healthcare:
          description: Whether the benefit is healthcare related.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-healthcare
        retirement:
          description: Whether the benefit is associated with retirement planning.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-retirement
        yearly_limit:
          description: Whether the benefit has a government mandated yearly limit.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-yearly_limit
        category:
          description: Category where the benefit belongs to.
          example: Health
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Supported-Benefit-properties-category
      type: object
      x-examples:
        Example:
          description: Deductions and contributions for Medical Insurance
          benefit_type: 1
          name: Medical Insurance
          pretax: true
          posttax: false
          imputed: false
          healthcare: true
          retirement: false
          yearly_limit: false
          category: Health
      x-konfig-is-used-in-successful-response: true
    Company-Benefit-With-Employee-Benefits:
      description: The representation of a company benefit.
      example:
        benefit_type: 1
        employee_benefits:
        - contribution:
            type: type
            value: ""
          employee_uuid: employee_uuid
          active: true
          company_contribution: company_contribution
          deduct_as_percentage: false
          employee_deduction: "0.00"
          company_benefit_uuid: company_benefit_uuid
          uuid: uuid
        - contribution:
            type: type
            value: ""
          employee_uuid: employee_uuid
          active: true
          company_contribution: company_contribution
          deduct_as_percentage: false
          employee_deduction: "0.00"
          company_benefit_uuid: company_benefit_uuid
          uuid: uuid
        responsible_for_employee_w2: false
        deletable: true
        responsible_for_employer_taxes: false
        description: Kaiser Permanente
        active: true
        version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
        supports_percentage_amounts: true
      properties:
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          example: Kaiser Permanente
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-description
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-version
        uuid:
          description: The UUID of the company benefit.
          example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-uuid
        benefit_type:
          description: The type of the benefit to which the company benefit belongs
            (same as benefit_id).
          example: 1
          readOnly: true
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-benefit_type
        active:
          default: true
          description: Whether this benefit is active for employee participation.
            Company benefits may only be deactivated if no employees are actively
            participating.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-active
        deletable:
          description: "Whether this company benefit can be deleted. Deletable will\
            \ be set to true if the benefit has not been used in payroll, has no employee\
            \ benefits associated, and the benefit is not owned by Gusto or a Partner"
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-deletable
        supports_percentage_amounts:
          description: Whether employee deductions and company contributions can be
            set as percentages of payroll for an individual employee. This is determined
            by the type of benefit and is not configurable by the company.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-supports_percentage_amounts
        responsible_for_employer_taxes:
          description: Whether the employer is subject to pay employer taxes when
            an employee is on leave. Only applicable to third party sick pay benefits.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-responsible_for_employer_taxes
        responsible_for_employee_w2:
          description: Whether the employer is subject to file W-2 forms for an employee
            on leave. Only applicable to third party sick pay benefits.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-responsible_for_employee_w2
        employee_benefits:
          items:
            $ref: '#/components/schemas/Company_Benefit_With_Employee_Benefits_employee_benefits_inner'
          type: array
      type: object
      x-examples:
        Example:
          description: Kaiser Permanente
          version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          benefit_type: 1
          active: true
          deletable: true
          supports_percentage_amounts: true
          responsible_for_employer_taxes: false
          responsible_for_employee_w2: false
      x-konfig-is-used-in-successful-response: true
    Company-Benefit:
      description: The representation of a company benefit.
      example:
        benefit_type: 1
        responsible_for_employee_w2: false
        deletable: true
        responsible_for_employer_taxes: false
        description: Kaiser Permanente
        active: true
        version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
        uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
        supports_percentage_amounts: true
      properties:
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          example: Kaiser Permanente
          minLength: 1
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-description
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-version
        uuid:
          description: The UUID of the company benefit.
          example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-uuid
        benefit_type:
          description: The type of the benefit to which the company benefit belongs.
          example: 1
          readOnly: true
          type: number
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-benefit_type
        active:
          default: true
          description: Whether this benefit is active for employee participation.
            Company benefits may only be deactivated if no employees are actively
            participating.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-active
        deletable:
          description: "Whether this company benefit can be deleted. Deletable will\
            \ be set to true if the benefit has not been used in payroll, has no employee\
            \ benefits associated, and the benefit is not owned by Gusto or a Partner"
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-deletable
        supports_percentage_amounts:
          description: Whether employee deductions and company contributions can be
            set as percentages of payroll for an individual employee. This is determined
            by the type of benefit and is not configurable by the company.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-supports_percentage_amounts
        responsible_for_employer_taxes:
          description: Whether the employer is subject to pay employer taxes when
            an employee is on leave. Only applicable to third party sick pay benefits.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-responsible_for_employer_taxes
        responsible_for_employee_w2:
          description: Whether the employer is subject to file W-2 forms for an employee
            on leave. Only applicable to third party sick pay benefits.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-properties-responsible_for_employee_w2
      type: object
      x-examples:
        Example:
          description: Kaiser Permanente
          version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
          uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          benefit_type: 1
          active: true
          deletable: true
          supports_percentage_amounts: true
          responsible_for_employer_taxes: false
          responsible_for_employee_w2: false
      x-konfig-is-used-in-successful-response: true
    Earning-Type:
      description: ""
      example:
        name: Cash Tips
        uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
      properties:
        name:
          description: The name of the earning type.
          example: Cash Tips
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Earning-Type-properties-name
        uuid:
          description: The ID of the earning type.
          example: f5618c94-ed7d-4366-b2c4-ff05e430064f
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Earning-Type-properties-uuid
      type: object
      x-examples:
        Example:
          name: Cash Tips
          uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
      x-tags:
      - Earning Types
      x-konfig-is-used-in-successful-response: true
    Employee-Benefit:
      description: The representation of an employee benefit.
      example:
        limit_option: limit_option
        employee_deduction_annual_maximum: "200.00"
        active: true
        employee_deduction: "0.00"
        version: 09j3d29jqdpj92109j9j2d90dq
        uuid: e91ca856-a915-4339-9b18-29f9cd66b031
        company_contribution_annual_maximum: "200.00"
        contribution:
          type: amount
          value: ""
        elective: false
        deduction_reduces_taxable_income: unset
        contribute_as_percentage: false
        employee_uuid: 73274962-63ce-4e5c-b689-1df8d4df09f4
        catch_up: false
        company_contribution: "0.00"
        deduct_as_percentage: false
        coverage_amount: coverage_amount
        coverage_salary_multiplier: "0.00"
        company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
        retirement_loan_identifier: retirement_loan_identifier
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          example: 09j3d29jqdpj92109j9j2d90dq
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-version
        employee_uuid:
          description: The UUID of the employee to which the benefit belongs.
          example: 73274962-63ce-4e5c-b689-1df8d4df09f4
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_uuid
        company_benefit_uuid:
          description: The UUID of the company benefit.
          example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_benefit_uuid
        active:
          default: true
          description: Whether the employee benefit is active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-active
        uuid:
          description: The UUID of the employee benefit.
          example: e91ca856-a915-4339-9b18-29f9cd66b031
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-uuid
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_deduction
        deduct_as_percentage:
          default: false
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-deduct_as_percentage
        employee_deduction_annual_maximum:
          description: The maximum employee deduction amount per year. A null value
            signifies no limit.
          example: "200.00"
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_deduction_annual_maximum
        contribution:
          $ref: '#/components/schemas/Employee_Benefit_contribution'
        elective:
          default: false
          description: "Whether the company contribution is elective (aka matching).\
            \ For \"tiered\" contribution types, this is always true."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-elective
        company_contribution_annual_maximum:
          description: The maximum company contribution amount per year. A null value
            signifies no limit.
          example: "200.00"
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_contribution_annual_maximum
        limit_option:
          description: "Some benefits require additional information to determine\
            \ their limit. For example, for an HSA benefit, the limit option should\
            \ be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit,\
            \ the limit option should be either \"Joint Filing or Single\" or \"Married\
            \ and Filing Separately\"."
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-limit_option
          example: null
        catch_up:
          default: false
          description: Whether the employee should use a benefit’s "catch up" rate.
            Only Roth 401k and 401k benefits use this value for employees over 50.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-catch_up
        retirement_loan_identifier:
          description: Identifier for a 401(k) loan assigned by the 401(k) provider
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-retirement_loan_identifier
          example: null
        coverage_amount:
          description: "The amount that the employee is insured for. Note: company\
            \ contribution cannot be present if coverage amount is set."
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-coverage_amount
          example: null
        deduction_reduces_taxable_income:
          default: unset
          description: "Whether the employee deduction reduces taxable income or not.\
            \ Only valid for Group Term Life benefits. Note: when the value is not\
            \ \"unset\", coverage amount and coverage salary multiplier are ignored."
          enum:
          - unset
          - reduces_taxable_income
          - does_not_reduce_taxable_income
          - null
          example: unset
          nullable: true
          type: string
          x-konfig-original-example: unset
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-deduction_reduces_taxable_income
        coverage_salary_multiplier:
          default: "0.00"
          description: "The coverage amount as a multiple of the employee’s salary.\
            \ Only applicable for Group Term Life benefits. Note: cannot be set if\
            \ coverage amount is also set."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-coverage_salary_multiplier
        company_contribution:
          default: "0.00"
          deprecated: true
          description: "The amount to be paid, per pay period, by the company. This\
            \ field will not appear for tiered contribution types."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_contribution
        contribute_as_percentage:
          default: false
          deprecated: true
          description: Whether the company_contribution value should be treated as
            a percentage to be added to each payroll. This field will not appear for
            tiered contribution types.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-contribute_as_percentage
      title: ""
      type: object
      x-examples:
        Example:
          version: 09j3d29jqdpj92109j9j2d90dq
          employee_uuid: 73274962-63ce-4e5c-b689-1df8d4df09f4
          company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          active: true
          uuid: e91ca856-a915-4339-9b18-29f9cd66b031
          employee_deduction: "100.00"
          company_contribution: "100.00"
          employee_deduction_annual_maximum: "200.00"
          company_contribution_annual_maximum: "200.00"
          deduct_as_percentage: false
          contribute_as_percentage: false
          catch_up: false
          coverage_salary_multiplier: "0.00"
          contribution:
            type: amount
            value: "100.00"
          elective: false
        Tiered Example:
          version: 09j3d29jqdpj92109j9j2d90dq
          employee_uuid: 73274962-63ce-4e5c-b689-1df8d4df09f4
          company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
          active: true
          uuid: e91ca856-a915-4339-9b18-29f9cd66b031
          employee_deduction: "100.00"
          employee_deduction_annual_maximum: "200.00"
          company_contribution_annual_maximum: "200.00"
          deduct_as_percentage: false
          catch_up: false
          coverage_salary_multiplier: "0.00"
          elective: true
          contribution:
            type: tiered
            value:
              tiers:
              - rate: "100.0"
                threshold: "2.0"
                threshold_delta: "2.0"
              - rate: "50.0"
                threshold: "5.0"
                threshold_delta: "3.0"
      x-konfig-is-used-in-successful-response: true
    Employee-Pay-Stub:
      description: The representation of an employee pay stub information.
      example:
        net_pay: net_pay
        payroll_uuid: payroll_uuid
        check_date: check_date
        check_amount: check_amount
        gross_pay: gross_pay
        uuid: uuid
      properties:
        uuid:
          description: The UUID of the employee pay stub.
          readOnly: true
          type: string
        check_date:
          description: The check date of the pay stub.
          readOnly: true
          type: string
        gross_pay:
          description: The gross pay amount for the pay stub.
          readOnly: true
          type: string
        net_pay:
          description: The net pay amount for the pay stub.
          readOnly: true
          type: string
        payroll_uuid:
          description: A unique identifier of the payroll to which the pay stub belongs.
          readOnly: true
          type: string
        check_amount:
          description: The check amount for the pay stub.
          readOnly: true
          type: string
      type: object
      x-tags:
      - Payrolls
    Pay-Period:
      description: The representation of a pay period.
      example:
        end_date: end_date
        pay_schedule_uuid: pay_schedule_uuid
        payroll:
          processed: true
          payroll_type: regular
          payroll_uuid: payroll_uuid
          check_date: check_date
          payroll_deadline: 2000-01-23T04:56:07.000+00:00
        start_date: start_date
      properties:
        start_date:
          description: "The start date, inclusive, of the pay period."
          readOnly: true
          type: string
        end_date:
          description: "The end date, inclusive, of the pay period."
          minLength: 1
          type: string
        pay_schedule_uuid:
          description: A unique identifier of the pay schedule to which the pay period
            belongs.
          readOnly: true
          type: string
        payroll:
          $ref: '#/components/schemas/Pay_Period_payroll'
      type: object
      x-tags:
      - Payrolls
    Created-At-Type:
      description: Datetime for when the resource was created.
      format: date-time
      readOnly: true
      type: string
    Off-Cycle-Reason-Type:
      description: The off-cycle reason. Only included for off-cycle payrolls.
      enum:
      - Benefit reversal
      - Bonus
      - Correction
      - Dismissed employee
      - Hired employee
      - Wage correction
      - Tax reconciliation
      - Reversal
      - Disability insurance distribution
      - Transition from old pay schedule
      nullable: true
      readOnly: true
      type: string
    Payroll-Employee-Compensations-Type:
      items:
        $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner'
      type: array
      uniqueItems: false
    Payroll-Totals-Type:
      description: The subtotals for the payroll.
      example:
        benefits: benefits
        deferred_payroll_taxes: deferred_payroll_taxes
        employee_commissions: employee_commissions
        additional_earnings: additional_earnings
        company_debit: company_debit
        reimbursements: reimbursements
        gross_pay: gross_pay
        employer_taxes: employer_taxes
        employee_taxes: employee_taxes
        net_pay: net_pay
        reimbursement_debit: reimbursement_debit
        net_pay_debit: net_pay_debit
        tax_debit: tax_debit
        child_support_debit: child_support_debit
        employee_paycheck_tips: employee_paycheck_tips
        owners_draw: owners_draw
        check_amount: check_amount
        employee_benefits_deductions: employee_benefits_deductions
        employee_bonuses: employee_bonuses
        employee_cash_tips: employee_cash_tips
      properties:
        company_debit:
          description: The total company debit for the payroll.
          readOnly: true
          type: string
        net_pay_debit:
          description: The total company net pay for the payroll.
          minLength: 1
          type: string
        tax_debit:
          description: The total tax debit for the payroll.
          readOnly: true
          type: string
        reimbursement_debit:
          description: The total reimbursement debit for the payroll.
          readOnly: true
          type: string
        child_support_debit:
          description: The total child support debit for the payroll.
          readOnly: true
          type: string
        reimbursements:
          description: The total reimbursements for the payroll.
          readOnly: true
          type: string
        net_pay:
          description: The net pay amount for the payroll.
          readOnly: true
          type: string
        gross_pay:
          description: The gross pay amount for the payroll.
          readOnly: true
          type: string
        employee_bonuses:
          description: The total employee bonuses amount for the payroll.
          readOnly: true
          type: string
        employee_commissions:
          description: The total employee commissions amount for the payroll.
          readOnly: true
          type: string
        employee_cash_tips:
          description: The total employee cash tips amount for the payroll.
          readOnly: true
          type: string
        employee_paycheck_tips:
          description: The total employee paycheck tips amount for the payroll.
          readOnly: true
          type: string
        additional_earnings:
          description: The total additional earnings amount for the payroll.
          readOnly: true
          type: string
        owners_draw:
          description: The total owner's draw for the payroll.
          readOnly: true
          type: string
        check_amount:
          description: The total check amount for the payroll.
          readOnly: true
          type: string
        employer_taxes:
          description: The total amount of employer paid taxes for the payroll.
          readOnly: true
          type: string
        employee_taxes:
          description: The total amount of employee paid taxes for the payroll.
          readOnly: true
          type: string
        benefits:
          description: The total amount of company contributed benefits for the payroll.
          readOnly: true
          type: string
        employee_benefits_deductions:
          description: The total amount of employee deducted benefits for the payroll.
          readOnly: true
          type: string
        deferred_payroll_taxes:
          description: "The total amount of payroll taxes deferred for the payroll,\
            \ such as allowed by the CARES act."
          readOnly: true
          type: string
      readOnly: true
      type: object
    Payroll-Company-Taxes-Type:
      description: An array of taxes applicable to this payroll in addition to taxes
        included in `employee_compensations`. Only included for processed or calculated
        payrolls when `taxes` is present in the `include` parameter.
      items:
        $ref: '#/components/schemas/Payroll_Company_Taxes_Type_inner'
      type: array
      uniqueItems: false
    Payroll-Payment-Speed-Changed-Type:
      description: Only applicable when a payroll is moved to four day processing
        instead of fast ach.
      example:
        reason: reason
        original_check_date: original_check_date
        current_debit_date: current_debit_date
        current_check_date: current_check_date
        original_debit_date: 0.8008281904610115
      properties:
        original_check_date:
          description: Original check date when fast ach applies.
          readOnly: true
          type: string
        current_check_date:
          description: Current check date.
          readOnly: true
          type: string
        original_debit_date:
          description: Original debit date when fast ach applies.
          readOnly: true
          type: number
        current_debit_date:
          description: Current debit date.
          readOnly: true
          type: string
        reason:
          description: The reason why the payroll is moved to four day.
          readOnly: true
          type: string
      type: object
    Payroll-Payroll-Status-Meta-Type:
      description: Information about the payroll's status and expected dates
      example:
        initial_check_date: initial_check_date
        expected_check_date: expected_check_date
        initial_debit_cutoff_time: initial_debit_cutoff_time
        payroll_late: true
        cancellable: true
        expected_debit_time: expected_debit_time
      properties:
        cancellable:
          description: true if the payroll may be cancelled
          readOnly: true
          type: boolean
        expected_check_date:
          description: The date an employee will be paid if the payroll is submitted
            now
          readOnly: true
          type: string
        initial_check_date:
          description: The normal check date for the associated pay period
          readOnly: true
          type: string
        expected_debit_time:
          description: The time the employer's account will be debited if the payroll
            is submitted now
          readOnly: true
          type: string
        payroll_late:
          description: expected_check_date > initial_check_date
          readOnly: true
          type: boolean
        initial_debit_cutoff_time:
          description: Payroll must be submitted at or before this time to avoid late
            payroll
          readOnly: true
          type: string
      type: object
    Payroll-Pay-Period-Type:
      example:
        end_date: end_date
        pay_schedule_uuid: pay_schedule_uuid
        start_date: start_date
      properties:
        start_date:
          description: "The start date, inclusive, of the pay period."
          readOnly: true
          type: string
        end_date:
          description: "The start date, inclusive, of the pay period."
          readOnly: true
          type: string
        pay_schedule_uuid:
          description: The UUID of the pay schedule for the payroll.
          nullable: true
          readOnly: true
          type: string
      readOnly: true
      type: object
    Payroll-Withholding-Pay-Period-Type:
      description: The payment schedule tax rate the payroll is based on. Only included
        for off-cycle payrolls.
      enum:
      - Every week
      - Every other week
      - Twice per month
      - Monthly
      - Quarterly
      - Semiannually
      - Annually
      nullable: false
      readOnly: true
      type: string
    Payroll-Deadline-Type:
      description: A timestamp that is the deadline for the payroll to be run in order
        for employees to be paid on time.
      format: date-time
      readOnly: true
      type: string
    Payroll-Check-Date-Type:
      description: The date on which employees will be paid for the payroll.
      readOnly: true
      type: string
    Payroll-Processed-Type:
      description: "Whether or not the payroll has been successfully processed. Note\
        \ that processed payrolls cannot be updated. Additionally, a payroll is not\
        \ guaranteed to be processed just because the payroll deadline has passed.\
        \ Late payrolls are not uncommon. Conversely, users may choose to run payroll\
        \ before the payroll deadline."
      readOnly: true
      type: boolean
    Payroll-Processed-Date-Type:
      description: The date at which the payroll was processed. Null if the payroll
        isn't processed yet.
      readOnly: true
      type: string
    Payroll-Calculated-At-Type:
      description: A timestamp of the last valid payroll calculation. Null is there
        isn't a valid calculation.
      readOnly: true
      type: string
    Payroll-Payroll-Uuid-Type:
      description: The UUID of the payroll.
      readOnly: true
      type: string
    Payroll-Company-Uuid-Type:
      description: The UUID of the company for the payroll.
      readOnly: true
      type: string
    Payroll-Off-Cycle-Type:
      description: Indicates whether the payroll is an off-cycle payroll
      readOnly: true
      type: boolean
    Payroll-External-Type:
      description: Indicates whether the payroll is an external payroll
      readOnly: true
      type: boolean
    Payroll-Final-Termination-Payroll-Type:
      description: Indicates whether the payroll is the final payroll for a terminated
        employee. Only included for off-cycle payrolls.
      readOnly: true
      type: boolean
    Payroll-Skip-Regular-Deductions-Type:
      description: Block regular deductions and contributions for this payroll.  Only
        included for off-cycle payrolls.
      nullable: false
      readOnly: true
      type: boolean
    Payroll-Fixed-Withholding-Rate-Type:
      description: "Enable taxes to be withheld at the IRS's required rate of 22%\
        \ for federal income taxes. State income taxes will be taxed at the state's\
        \ supplemental tax rate. Otherwise, we'll sum the entirety of the employee's\
        \ wages and withhold taxes on the entire amount at the rate for regular wages.\
        \ Only included for off-cycle payrolls."
      nullable: false
      readOnly: true
      type: boolean
    Payroll-Fixed-Compensation-Types-Type:
      items:
        $ref: '#/components/schemas/Payroll_Fixed_Compensation_Types_Type_inner'
      type: array
    Payroll:
      description: ""
      example:
        company_uuid: company_uuid
        final_termination_payroll: true
        fixed_withholding_rate: true
        processed_date: processed_date
        payroll_uuid: payroll_uuid
        skip_regular_deductions: true
        pay_period:
          end_date: end_date
          pay_schedule_uuid: pay_schedule_uuid
          start_date: start_date
        created_at: 2000-01-23T04:56:07.000+00:00
        off_cycle_reason: null
        totals:
          benefits: benefits
          deferred_payroll_taxes: deferred_payroll_taxes
          employee_commissions: employee_commissions
          additional_earnings: additional_earnings
          company_debit: company_debit
          reimbursements: reimbursements
          gross_pay: gross_pay
          employer_taxes: employer_taxes
          employee_taxes: employee_taxes
          net_pay: net_pay
          reimbursement_debit: reimbursement_debit
          net_pay_debit: net_pay_debit
          tax_debit: tax_debit
          child_support_debit: child_support_debit
          employee_paycheck_tips: employee_paycheck_tips
          owners_draw: owners_draw
          check_amount: check_amount
          employee_benefits_deductions: employee_benefits_deductions
          employee_bonuses: employee_bonuses
          employee_cash_tips: employee_cash_tips
        employee_compensations:
        - benefits:
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          memo: memo
          taxes:
          - amount: amount
            name: name
            employer: true
          - amount: amount
            name: name
            employer: true
          fixed_compensations:
          - job_uuid: job_uuid
            amount: amount
            name: name
          - job_uuid: job_uuid
            amount: amount
            name: name
          gross_pay: gross_pay
          deductions:
          - amount: amount
            name: name
          - amount: amount
            name: name
          version: version
          excluded: true
          net_pay: net_pay
          hourly_compensations:
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          employee_uuid: employee_uuid
          check_amount: check_amount
          payment_method: Check
        - benefits:
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          memo: memo
          taxes:
          - amount: amount
            name: name
            employer: true
          - amount: amount
            name: name
            employer: true
          fixed_compensations:
          - job_uuid: job_uuid
            amount: amount
            name: name
          - job_uuid: job_uuid
            amount: amount
            name: name
          gross_pay: gross_pay
          deductions:
          - amount: amount
            name: name
          - amount: amount
            name: name
          version: version
          excluded: true
          net_pay: net_pay
          hourly_compensations:
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          employee_uuid: employee_uuid
          check_amount: check_amount
          payment_method: Check
        payroll_status_meta:
          initial_check_date: initial_check_date
          expected_check_date: expected_check_date
          initial_debit_cutoff_time: initial_debit_cutoff_time
          payroll_late: true
          cancellable: true
          expected_debit_time: expected_debit_time
        payment_speed_changed:
          reason: reason
          original_check_date: original_check_date
          current_debit_date: current_debit_date
          current_check_date: current_check_date
          original_debit_date: 0.8008281904610115
        processed: true
        off_cycle: true
        withholding_pay_period: null
        external: true
        company_taxes:
        - amount: amount
          name: name
          employer: true
        - amount: amount
          name: name
          employer: true
        check_date: check_date
        payroll_deadline: 2000-01-23T04:56:07.000+00:00
        calculated_at: calculated_at
      properties:
        payroll_deadline:
          description: A timestamp that is the deadline for the payroll to be run
            in order for employees to be paid on time.
          format: date-time
          readOnly: true
          type: string
        check_date:
          description: The date on which employees will be paid for the payroll.
          readOnly: true
          type: string
        processed:
          description: "Whether or not the payroll has been successfully processed.\
            \ Note that processed payrolls cannot be updated. Additionally, a payroll\
            \ is not guaranteed to be processed just because the payroll deadline\
            \ has passed. Late payrolls are not uncommon. Conversely, users may choose\
            \ to run payroll before the payroll deadline."
          readOnly: true
          type: boolean
        processed_date:
          description: The date at which the payroll was processed. Null if the payroll
            isn't processed yet.
          readOnly: true
          type: string
        calculated_at:
          description: A timestamp of the last valid payroll calculation. Null is
            there isn't a valid calculation.
          readOnly: true
          type: string
        payroll_uuid:
          description: The UUID of the payroll.
          readOnly: true
          type: string
        company_uuid:
          description: The UUID of the company for the payroll.
          readOnly: true
          type: string
        off_cycle:
          description: Indicates whether the payroll is an off-cycle payroll
          readOnly: true
          type: boolean
        off_cycle_reason:
          $ref: '#/components/schemas/Off-Cycle-Reason-Type'
        external:
          description: Indicates whether the payroll is an external payroll
          readOnly: true
          type: boolean
        final_termination_payroll:
          description: Indicates whether the payroll is the final payroll for a terminated
            employee. Only included for off-cycle payrolls.
          readOnly: true
          type: boolean
        withholding_pay_period:
          $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
        skip_regular_deductions:
          description: Block regular deductions and contributions for this payroll.  Only
            included for off-cycle payrolls.
          nullable: false
          readOnly: true
          type: boolean
        fixed_withholding_rate:
          description: "Enable taxes to be withheld at the IRS's required rate of\
            \ 22% for federal income taxes. State income taxes will be taxed at the\
            \ state's supplemental tax rate. Otherwise, we'll sum the entirety of\
            \ the employee's wages and withhold taxes on the entire amount at the\
            \ rate for regular wages. Only included for off-cycle payrolls."
          nullable: false
          readOnly: true
          type: boolean
        pay_period:
          $ref: '#/components/schemas/Payroll-Pay-Period-Type'
        payroll_status_meta:
          $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
        totals:
          $ref: '#/components/schemas/Payroll-Totals-Type'
        employee_compensations:
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner'
          type: array
          uniqueItems: false
        company_taxes:
          description: An array of taxes applicable to this payroll in addition to
            taxes included in `employee_compensations`. Only included for processed
            or calculated payrolls when `taxes` is present in the `include` parameter.
          items:
            $ref: '#/components/schemas/Payroll_Company_Taxes_Type_inner'
          type: array
          uniqueItems: false
        payment_speed_changed:
          $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
        created_at:
          description: Datetime for when the resource was created.
          format: date-time
          readOnly: true
          type: string
      type: object
      x-tags:
      - Payrolls
      x-konfig-is-used-in-successful-response: true
    Payroll-Prepared:
      description: ""
      example:
        company_uuid: company_uuid
        final_termination_payroll: true
        fixed_compensation_types:
        - name: name
        - name: name
        fixed_withholding_rate: true
        processed_date: processed_date
        payroll_uuid: payroll_uuid
        skip_regular_deductions: true
        pay_period:
          end_date: end_date
          pay_schedule_uuid: pay_schedule_uuid
          start_date: start_date
        created_at: 2000-01-23T04:56:07.000+00:00
        off_cycle_reason: null
        employee_compensations:
        - benefits:
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          memo: memo
          taxes:
          - amount: amount
            name: name
            employer: true
          - amount: amount
            name: name
            employer: true
          fixed_compensations:
          - job_uuid: job_uuid
            amount: amount
            name: name
          - job_uuid: job_uuid
            amount: amount
            name: name
          gross_pay: gross_pay
          deductions:
          - amount: amount
            name: name
          - amount: amount
            name: name
          version: version
          excluded: true
          net_pay: net_pay
          hourly_compensations:
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          employee_uuid: employee_uuid
          check_amount: check_amount
          payment_method: Check
        - benefits:
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          - imputed: true
            name: name
            company_contribution: company_contribution
            employee_deduction: employee_deduction
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
          memo: memo
          taxes:
          - amount: amount
            name: name
            employer: true
          - amount: amount
            name: name
            employer: true
          fixed_compensations:
          - job_uuid: job_uuid
            amount: amount
            name: name
          - job_uuid: job_uuid
            amount: amount
            name: name
          gross_pay: gross_pay
          deductions:
          - amount: amount
            name: name
          - amount: amount
            name: name
          version: version
          excluded: true
          net_pay: net_pay
          hourly_compensations:
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          - job_uuid: job_uuid
            hours: hours
            amount: amount
            compensation_multiplier: 0.8008281904610115
            name: name
          employee_uuid: employee_uuid
          check_amount: check_amount
          payment_method: Check
        payroll_status_meta:
          initial_check_date: initial_check_date
          expected_check_date: expected_check_date
          initial_debit_cutoff_time: initial_debit_cutoff_time
          payroll_late: true
          cancellable: true
          expected_debit_time: expected_debit_time
        payment_speed_changed:
          reason: reason
          original_check_date: original_check_date
          current_debit_date: current_debit_date
          current_check_date: current_check_date
          original_debit_date: 0.8008281904610115
        processed: true
        off_cycle: true
        withholding_pay_period: null
        external: true
        check_date: check_date
        payroll_deadline: 2000-01-23T04:56:07.000+00:00
        calculated_at: calculated_at
      properties:
        payroll_deadline:
          description: A timestamp that is the deadline for the payroll to be run
            in order for employees to be paid on time.
          format: date-time
          readOnly: true
          type: string
        check_date:
          description: The date on which employees will be paid for the payroll.
          readOnly: true
          type: string
        processed:
          description: "Whether or not the payroll has been successfully processed.\
            \ Note that processed payrolls cannot be updated. Additionally, a payroll\
            \ is not guaranteed to be processed just because the payroll deadline\
            \ has passed. Late payrolls are not uncommon. Conversely, users may choose\
            \ to run payroll before the payroll deadline."
          readOnly: true
          type: boolean
        processed_date:
          description: The date at which the payroll was processed. Null if the payroll
            isn't processed yet.
          readOnly: true
          type: string
        calculated_at:
          description: A timestamp of the last valid payroll calculation. Null is
            there isn't a valid calculation.
          readOnly: true
          type: string
        payroll_uuid:
          description: The UUID of the payroll.
          readOnly: true
          type: string
        company_uuid:
          description: The UUID of the company for the payroll.
          readOnly: true
          type: string
        off_cycle:
          description: Indicates whether the payroll is an off-cycle payroll
          readOnly: true
          type: boolean
        off_cycle_reason:
          $ref: '#/components/schemas/Off-Cycle-Reason-Type'
        external:
          description: Indicates whether the payroll is an external payroll
          readOnly: true
          type: boolean
        final_termination_payroll:
          description: Indicates whether the payroll is the final payroll for a terminated
            employee. Only included for off-cycle payrolls.
          readOnly: true
          type: boolean
        withholding_pay_period:
          $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
        skip_regular_deductions:
          description: Block regular deductions and contributions for this payroll.  Only
            included for off-cycle payrolls.
          nullable: false
          readOnly: true
          type: boolean
        fixed_withholding_rate:
          description: "Enable taxes to be withheld at the IRS's required rate of\
            \ 22% for federal income taxes. State income taxes will be taxed at the\
            \ state's supplemental tax rate. Otherwise, we'll sum the entirety of\
            \ the employee's wages and withhold taxes on the entire amount at the\
            \ rate for regular wages. Only included for off-cycle payrolls."
          nullable: false
          readOnly: true
          type: boolean
        pay_period:
          $ref: '#/components/schemas/Payroll-Pay-Period-Type'
        payroll_status_meta:
          $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
        employee_compensations:
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner'
          type: array
          uniqueItems: false
        payment_speed_changed:
          $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
        created_at:
          description: Datetime for when the resource was created.
          format: date-time
          readOnly: true
          type: string
        fixed_compensation_types:
          items:
            $ref: '#/components/schemas/Payroll_Fixed_Compensation_Types_Type_inner'
          type: array
      type: object
      x-tags:
      - Payrolls
      x-konfig-is-used-in-successful-response: true
    Payroll-Minimal:
      description: ""
      example:
        company_uuid: company_uuid
        final_termination_payroll: true
        fixed_withholding_rate: true
        processed_date: processed_date
        payroll_uuid: payroll_uuid
        skip_regular_deductions: true
        pay_period:
          end_date: end_date
          pay_schedule_uuid: pay_schedule_uuid
          start_date: start_date
        created_at: 2000-01-23T04:56:07.000+00:00
        off_cycle_reason: null
        totals:
          benefits: benefits
          deferred_payroll_taxes: deferred_payroll_taxes
          employee_commissions: employee_commissions
          additional_earnings: additional_earnings
          company_debit: company_debit
          reimbursements: reimbursements
          gross_pay: gross_pay
          employer_taxes: employer_taxes
          employee_taxes: employee_taxes
          net_pay: net_pay
          reimbursement_debit: reimbursement_debit
          net_pay_debit: net_pay_debit
          tax_debit: tax_debit
          child_support_debit: child_support_debit
          employee_paycheck_tips: employee_paycheck_tips
          owners_draw: owners_draw
          check_amount: check_amount
          employee_benefits_deductions: employee_benefits_deductions
          employee_bonuses: employee_bonuses
          employee_cash_tips: employee_cash_tips
        payroll_status_meta:
          initial_check_date: initial_check_date
          expected_check_date: expected_check_date
          initial_debit_cutoff_time: initial_debit_cutoff_time
          payroll_late: true
          cancellable: true
          expected_debit_time: expected_debit_time
        payment_speed_changed:
          reason: reason
          original_check_date: original_check_date
          current_debit_date: current_debit_date
          current_check_date: current_check_date
          original_debit_date: 0.8008281904610115
        processed: true
        off_cycle: true
        withholding_pay_period: null
        external: true
        check_date: check_date
        payroll_deadline: 2000-01-23T04:56:07.000+00:00
        calculated_at: calculated_at
      properties:
        payroll_deadline:
          description: A timestamp that is the deadline for the payroll to be run
            in order for employees to be paid on time.
          format: date-time
          readOnly: true
          type: string
        check_date:
          description: The date on which employees will be paid for the payroll.
          readOnly: true
          type: string
        processed:
          description: "Whether or not the payroll has been successfully processed.\
            \ Note that processed payrolls cannot be updated. Additionally, a payroll\
            \ is not guaranteed to be processed just because the payroll deadline\
            \ has passed. Late payrolls are not uncommon. Conversely, users may choose\
            \ to run payroll before the payroll deadline."
          readOnly: true
          type: boolean
        processed_date:
          description: The date at which the payroll was processed. Null if the payroll
            isn't processed yet.
          readOnly: true
          type: string
        calculated_at:
          description: A timestamp of the last valid payroll calculation. Null is
            there isn't a valid calculation.
          readOnly: true
          type: string
        payroll_uuid:
          description: The UUID of the payroll.
          readOnly: true
          type: string
        company_uuid:
          description: The UUID of the company for the payroll.
          readOnly: true
          type: string
        off_cycle:
          description: Indicates whether the payroll is an off-cycle payroll
          readOnly: true
          type: boolean
        off_cycle_reason:
          $ref: '#/components/schemas/Off-Cycle-Reason-Type'
        external:
          description: Indicates whether the payroll is an external payroll
          readOnly: true
          type: boolean
        final_termination_payroll:
          description: Indicates whether the payroll is the final payroll for a terminated
            employee. Only included for off-cycle payrolls.
          readOnly: true
          type: boolean
        withholding_pay_period:
          $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
        skip_regular_deductions:
          description: Block regular deductions and contributions for this payroll.  Only
            included for off-cycle payrolls.
          nullable: false
          readOnly: true
          type: boolean
        fixed_withholding_rate:
          description: "Enable taxes to be withheld at the IRS's required rate of\
            \ 22% for federal income taxes. State income taxes will be taxed at the\
            \ state's supplemental tax rate. Otherwise, we'll sum the entirety of\
            \ the employee's wages and withhold taxes on the entire amount at the\
            \ rate for regular wages. Only included for off-cycle payrolls."
          nullable: false
          readOnly: true
          type: boolean
        pay_period:
          $ref: '#/components/schemas/Payroll-Pay-Period-Type'
        payroll_status_meta:
          $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
        totals:
          $ref: '#/components/schemas/Payroll-Totals-Type'
        payment_speed_changed:
          $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
        created_at:
          description: Datetime for when the resource was created.
          format: date-time
          readOnly: true
          type: string
      type: object
      x-tags:
      - Payrolls
    Payroll-Blocker:
      example:
        message: message
        key: key
      properties:
        key:
          description: The unique identifier of the reason
          type: string
        message:
          description: User-friendly message describing the payroll blocker.
          type: string
      type: object
    Payroll-Check:
      example:
        payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
        request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
        printing_format: top
        starting_check_number: "10"
        status: pending
      properties:
        payroll_uuid:
          description: A unique identifier of the payroll.
          example: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Check-properties-payroll_uuid
        printing_format:
          description: The format the checks will be printed.
          example: top
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Check-properties-printing_format
        starting_check_number:
          description: The starting check number for the checks being printed.
          example: "10"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Check-properties-starting_check_number
        request_uuid:
          description: A unique identifier of the Generated Document request
          example: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Check-properties-request_uuid
        status:
          description: Current status of the Generated Document
          example: pending
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Check-properties-status
      type: object
      x-examples:
        example-1:
          payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
          printing_format: top
          starting_check_number: "10"
          request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
          status: pending
      x-konfig-is-used-in-successful-response: true
    Generated-Document:
      example:
        request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
        document_urls:
        - document_urls
        - document_urls
        status: succeeded
      properties:
        request_uuid:
          description: A unique identifier of the Generated Document request
          example: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Generated-Document-properties-request_uuid
        status:
          description: Current status of the Generated Document
          example: succeeded
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Generated-Document-properties-status
        document_urls:
          description: The array of urls to access the documents.
          items:
            type: string
          type: array
      type: object
      x-examples:
        example-1:
          status: succeeded
          document_urls:
          - https://document.url.com
          request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
      x-konfig-is-used-in-successful-response: true
    Payroll-Receipt:
      example:
        company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
        license_uri: https://gusto.com/about/licenses
        licensee:
          address: 525 20th St
          city: San Francisco
          name: "Gusto, Zenpayroll Inc."
          phone_number: "4157778888"
          state: CA
          postal_code: "94107"
        payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
        taxes:
        - amount: amount
          name: name
        - amount: amount
          name: name
        totals:
          reimbursement_debit: "50.0"
          net_pay_debit: "748.34"
          tax_debit: tax_debit
          child_support_debit: "100.0"
          company_debit: "1080.47"
        name_of_sender: Torp and Sons and Sons
        debit_date: 2022-06-02
        employee_compensations:
        - net_pay: net_pay
          total_garnishments: total_garnishments
          employee_uuid: employee_uuid
          child_support_garnishment: child_support_garnishment
          employee_last_name: employee_last_name
          total_reimbursement: total_reimbursement
          total_tax: total_tax
          employee_first_name: employee_first_name
          payment_method: payment_method
        - net_pay: net_pay
          total_garnishments: total_garnishments
          employee_uuid: employee_uuid
          child_support_garnishment: child_support_garnishment
          employee_last_name: employee_last_name
          total_reimbursement: total_reimbursement
          total_tax: total_tax
          employee_first_name: employee_first_name
          payment_method: payment_method
        recipient_notice: Payroll recipients include the employees listed below plus
          the tax agencies for the taxes listed below.
        license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
          \ more about Gusto’s licenses and your state-specific rights to request\
          \ information, submit complaints, dispute errors, or cancel transactions,\
          \ visit our license page."
        name_of_recipient: Payroll Recipients
        liability_of_licensee: https://gusto.com/about/licenses
        right_to_refund: https://gusto.com/about/licenses
      properties:
        payroll_uuid:
          description: A unique identifier of the payroll receipt.
          example: afccb970-357e-4013-81f5-85dafc74f9b6
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-payroll_uuid
        company_uuid:
          description: A unique identifier of the company for the payroll.
          example: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-company_uuid
        name_of_sender:
          description: The name of the company by whom the payroll was paid
          example: Torp and Sons and Sons
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-name_of_sender
        name_of_recipient:
          description: Always the fixed string "Payroll Recipients"
          example: Payroll Recipients
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-name_of_recipient
        recipient_notice:
          description: Always the fixed string "Payroll recipients include the employees
            listed below plus the tax agencies for the taxes listed below."
          example: Payroll recipients include the employees listed below plus the
            tax agencies for the taxes listed below.
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-recipient_notice
        debit_date:
          description: The debit or funding date for the payroll
          example: 2022-06-02
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-debit_date
        license:
          description: "Always the fixed string \"ZenPayroll, Inc., dba Gusto is a\
            \ licensed money transmitter. For more about Gusto’s licenses and your\
            \ state-specific rights to request information, submit complaints, dispute\
            \ errors, or cancel transactions, visit our license page.\""
          example: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
            \ more about Gusto’s licenses and your state-specific rights to request\
            \ information, submit complaints, dispute errors, or cancel transactions,\
            \ visit our license page."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-license
        license_uri:
          description: URL for the license information for the licensed payroll processor.
            Always the fixed string "https://gusto.com/about/licenses"
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-license_uri
        right_to_refund:
          description: ""
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-right_to_refund
        liability_of_licensee:
          description: ""
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-liability_of_licensee
        totals:
          $ref: '#/components/schemas/Payroll_Receipt_totals'
        taxes:
          description: An array of totaled employer and employee taxes for the pay
            period.
          items:
            $ref: '#/components/schemas/Payroll_Receipt_taxes_inner'
          type: array
        employee_compensations:
          description: An array of employee compensations and withholdings for this
            payroll
          items:
            $ref: '#/components/schemas/Payroll_Receipt_employee_compensations_inner'
          type: array
        licensee:
          $ref: '#/components/schemas/Payroll_Receipt_licensee'
      type: object
      x-examples:
        example-1:
          totals:
            company_debit: "1080.47"
            net_pay_debit: "748.34"
            child_support_debit: "100.0"
            reimbursement_debit: "50.0"
            tax: "182.13"
          taxes:
          - name: Federal Income Tax
            amount: "30.36"
          - name: Social Security
            amount: "104.54"
          - name: Medicare
            amount: "24.46"
          - name: Additional Medicare
            amount: "0.0"
          - name: TX SUTA
            amount: "22.77"
          - name: FUTA
            amount: "0.0"
          employee_compensations:
          - employee_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
            employee_first_name: Patricia
            employee_last_name: Hamill
            payment_method: Direct Deposit
            net_pay: "748.34"
            total_tax: "182.13"
            total_garnishments: "0.0"
            child_support_garnishment: "100.0"
            total_reimbursement: "50.0"
          licensee:
            name: "Gusto, Zenpayroll Inc."
            address: 525 20th St
            city: San Francisco
            state: CA
            postal_code: "94107"
            phone_number: "4157778888"
          payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
          company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
          name_of_sender: Torp and Sons and Sons
          name_of_recipient: Payroll Recipients
          recipient_notice: Payroll recipients include the employees listed below
            plus the tax agencies for the taxes listed below.
          debit_date: 2022-06-02
          license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
            \ more about Gusto’s licenses and your state-specific rights to request\
            \ information, submit complaints, dispute errors, or cancel transactions,\
            \ visit our license page."
          license_uri: https://gusto.com/about/licenses
          right_to_refund: https://gusto.com/about/licenses
          liability_of_licensee: https://gusto.com/about/licenses
      x-konfig-is-used-in-successful-response: true
    Payroll-Reversal:
      example:
        reason: reason
        reversed_employee_uuids:
        - reversed_employee_uuids
        - reversed_employee_uuids
        approved_at: approved_at
        reversal_payroll_uuid: reversal_payroll_uuid
        category:
        - 0
        - 0
        reversed_payroll_uuid: reversed_payroll_uuid
      properties:
        reversed_payroll_uuid:
          description: The UUID for the payroll run being reversed.
          type: string
        reversal_payroll_uuid:
          description: The UUID of the payroll where the reversal was applied.
          type: string
        reason:
          description: A reason provided by the admin who created the reversal.
          type: string
        approved_at:
          description: Timestamp of when the reversal was approved.
          nullable: true
          type: string
        category:
          description: Category chosen by the admin who requested the reversal.
          items:
            type: integer
          type: array
        reversed_employee_uuids:
          description: Array of affected employee UUIDs.
          items:
            type: string
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    Gross-Up-Pay:
      example:
        gross_up: gross_up
      properties:
        gross_up:
          description: Gross up earnings.
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    Contractor-Payment-Receipt:
      example:
        company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
        license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
          \ more about Gusto’s licenses and your state-specific rights to request\
          \ information, submit complaints, dispute errors, or cancel transactions,\
          \ visit our license page."
        license_uri: https://gusto.com/about/licenses
        name_of_recipient: Patricia Hamill
        licensee:
          address: 525 20th St
          city: San Francisco
          name: "Gusto, Zenpayroll Inc."
          phone_number: "4157778888"
          state: CA
          postal_code: "94107"
        liability_of_licensee: https://gusto.com/about/licenses
        contractor_payments:
        - contractor_business_name: contractor_business_name
          bonus: bonus
          reimbursement: reimbursement
          contractor_first_name: contractor_first_name
          contractor_type: contractor_type
          contractor_uuid: contractor_uuid
          contractor_last_name: contractor_last_name
          payment_method: payment_method
          wage: wage
        - contractor_business_name: contractor_business_name
          bonus: bonus
          reimbursement: reimbursement
          contractor_first_name: contractor_first_name
          contractor_type: contractor_type
          contractor_uuid: contractor_uuid
          contractor_last_name: contractor_last_name
          payment_method: payment_method
          wage: wage
        right_to_refund: https://gusto.com/about/licenses
        totals:
          company_debit: "748.34"
        name_of_sender: Torp and Sons and Sons
        debit_date: 2022-05-30T00:00:00.000+00:00
        contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
      properties:
        contractor_payment_uuid:
          description: A unique identifier of the contractor payment receipt.
          example: afccb970-357e-4013-81f5-85dafc74f9b6
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-contractor_payment_uuid
        company_uuid:
          description: A unique identifier of the company making the contractor payment.
          example: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-company_uuid
        name_of_sender:
          description: The name of the company making the contractor payment.
          example: Torp and Sons and Sons
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-name_of_sender
        name_of_recipient:
          description: The individual or company name of the contractor receiving
            payment.
          example: Patricia Hamill
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-name_of_recipient
        debit_date:
          description: The debit date for the contractor payment.
          example: 2022-05-30
          format: date
          type: string
          x-konfig-original-example: 2022-05-30
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-debit_date
        license:
          description: "Always the fixed string \"ZenPayroll, Inc., dba Gusto is a\
            \ licensed money transmitter. For more about Gusto’s licenses and your\
            \ state-specific rights to request information, submit complaints, dispute\
            \ errors, or cancel transactions, visit our license page.\""
          example: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
            \ more about Gusto’s licenses and your state-specific rights to request\
            \ information, submit complaints, dispute errors, or cancel transactions,\
            \ visit our license page."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-license
        license_uri:
          description: URL for the license information for the licensed payroll processor.
            Always the fixed string "https://gusto.com/about/licenses"
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-license_uri
        right_to_refund:
          description: URL for information related to right to refund. Always the
            fixed string "https://gusto.com/about/licenses"
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-right_to_refund
        liability_of_licensee:
          description: URL for information related to right to liability of licensee.
            Always the fixed string "https://gusto.com/about/licenses"
          example: https://gusto.com/about/licenses
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-liability_of_licensee
        totals:
          $ref: '#/components/schemas/Contractor_Payment_Receipt_totals'
        contractor_payments:
          description: An array of contractor payments for this contractor payment.
          items:
            $ref: '#/components/schemas/Contractor_Payment_Receipt_contractor_payments_inner'
          type: array
        licensee:
          $ref: '#/components/schemas/Contractor_Payment_Receipt_licensee'
      type: object
      x-examples:
        example-1:
          contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
          company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
          name_of_sender: Torp and Sons and Sons
          name_of_recipient: Patricia Hamill
          debit_date: 2022-06-02
          totals:
            company_debit: "748.34"
          contractor_payments:
          - contractor_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
            contractor_first_name: Patricia
            contractor_last_name: Hamill
            contractor_business_name: ""
            contractor_type: Individual
            payment_method: Direct Deposit
            wage: "448.34"
            bonus: "248.00"
            reimbursement: "100.00"
          licensee:
            name: "Gusto, Zenpayroll Inc."
            address: 525 20th St
            city: San Francisco
            state: CA
            postal_code: "94107"
            phone_number: "4157778888"
          license: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For\
            \ more about Gusto’s licenses and your state-specific rights to request\
            \ information, submit complaints, dispute errors, or cancel transactions,\
            \ visit our license page."
          license_uri: https://gusto.com/about/licenses
          right_to_refund: https://gusto.com/about/licenses
          liability_of_licensee: https://gusto.com/about/licenses
      x-konfig-is-used-in-successful-response: true
    Custom-Field-Type:
      description: Input type for the custom field.
      enum:
      - text
      - currency
      - number
      - date
      - radio
      type: string
      x-tags:
      - Custom Fields
    Employee-Custom-Field:
      description: A custom field of an employee
      example:
        selection_options:
        - selection_options
        - selection_options
        company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
        name: employee_level
        description: Employee Level
        id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
        type: null
        value: "2"
      properties:
        description:
          example: Employee Level
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-description
        id:
          example: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-id
        company_custom_field_id:
          description: This is the id of the response object from when you get the
            company custom fields
          example: da84500d-d05c-4e4f-bcf2-43152ca33278
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-company_custom_field_id
        name:
          example: employee_level
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-name
        type:
          $ref: '#/components/schemas/Custom-Field-Type'
        value:
          example: "2"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-value
        selection_options:
          description: "An array of options for fields of type radio. Otherwise, null."
          items:
            type: string
          nullable: true
          type: array
      required:
      - company_custom_field_id
      - id
      - name
      - type
      - value
      type: object
      x-examples:
        Employee Level:
          description: Employee Level
          id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
          name: employee_level
          value: "2"
      x-tags:
      - Custom Fields
    Company-Custom-Field:
      description: A custom field on a company
      example:
        selection_options:
        - selection_options
        - selection_options
        name: name
        description: description
        type: null
        uuid: uuid
      properties:
        description:
          description: Description of the company custom field
          type: string
        uuid:
          description: UUID of the company custom field
          type: string
        name:
          description: Name of the company custom field
          type: string
        type:
          $ref: '#/components/schemas/Custom-Field-Type'
        selection_options:
          description: "An array of options for fields of type radio. Otherwise, null."
          items:
            type: string
          nullable: true
          type: array
      required:
      - name
      - type
      - uuid
      type: object
      x-tags:
      - Custom Fields
    Rehire:
      example:
        file_new_hire_report: false
        employee_uuid: 8c290660-b6c9-4ad7-9f6e-ea146aaf79e8
        effective_date: 2024-06-30
        two_percent_shareholder: false
        active: false
        employment_status: seasonal
        version: 2e930d43acbdb241f8f14a2d531fa417
        work_location_uuid: 8cb87e2e-5b30-4c13-a4f4-bfffcbed1188
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          example: 2e930d43acbdb241f8f14a2d531fa417
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-version
        effective_date:
          description: The day when the employee returns to work.
          example: 2024-06-30
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-effective_date
        file_new_hire_report:
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the employee.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-file_new_hire_report
        work_location_uuid:
          description: The uuid of the employee's work location.
          example: 8cb87e2e-5b30-4c13-a4f4-bfffcbed1188
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-work_location_uuid
        employment_status:
          description: The employee's employment status. Supplying an invalid option
            will set the employment_status to *not_set*.
          enum:
          - part_time
          - full_time
          - part_time_eligible
          - variable
          - seasonal
          - not_set
          example: seasonal
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-employment_status
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-two_percent_shareholder
        employee_uuid:
          description: The UUID of the employee.
          example: 8c290660-b6c9-4ad7-9f6e-ea146aaf79e8
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-employee_uuid
        active:
          description: Whether the employee's rehire has gone into effect.
          example: false
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Rehire-properties-active
      type: object
      x-examples:
        example-1:
          version: 2e930d43acbdb241f8f14a2d531fa417
          employee_uuid: 8c290660-b6c9-4ad7-9f6e-ea146aaf79e8
          active: false
          effective_date: 2024-06-30
          employment_status: seasonal
          file_new_hire_report: false
          work_location_uuid: 8cb87e2e-5b30-4c13-a4f4-bfffcbed1188
          two_percent_shareholder: false
      x-konfig-is-used-in-successful-response: true
    Signatory:
      description: The representation of a company's signatory
      example:
        birthday: birthday
        is_admin: true
        home_address:
          zip: zip
          country: USA
          street_1: street_1
          city: city
          street_2: street_2
          state: state
        phone: phone
        identity_verification_status: Pass
        has_ssn: true
        last_name: last_name
        title: title
        version: version
        uuid: uuid
        first_name: first_name
        email: email
      properties:
        title:
          nullable: true
          type: string
        version:
          description: "The current version of the signatory. See the [versioning\
            \ guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for\
            \ information on how to use this field."
          type: string
        uuid:
          type: string
        first_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          type: string
        birthday:
          nullable: true
          type: string
        is_admin:
          description: Whether or not the signatory is also the payroll admin of the
            company.
          type: boolean
        has_ssn:
          description: Indicates whether the signatory has an SSN in Gusto.
          type: boolean
        identity_verification_status:
          description: |-
            |   |   |
            |---|---|
            |__Status__| __Description__ |
            | Pass | Signatory can sign all forms |
            | Fail | Signatory cannot sign forms |
            | Skipped | Signatory cannot sign Form 8655 until the form is manually uploaded as wet-signed |
            | null | Identity verification process has not been completed |
          enum:
          - Pass
          - Fail
          - Skipped
          nullable: true
          type: string
        home_address:
          $ref: '#/components/schemas/Signatory_home_address'
      title: Signatory
      type: object
      x-tags:
      - Signatories
      x-konfig-is-used-in-successful-response: true
    Flow:
      description: The representation of a flow in Gusto white-label UI.
      example:
        expires_at: 2021-12-28 04:25:48
        url: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
      properties:
        url:
          example: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Flow-properties-url
        expires_at:
          example: 2021-12-28 04:25:48
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Flow-properties-expires_at
      title: Flow
      type: object
      x-examples:
        Example:
          url: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
          expires_at: 2021-12-28 04:25:48
      x-tags:
      - Flows
      x-konfig-is-used-in-successful-response: true
    Unprocessed-Termination-Pay-Period:
      description: The representation of an unprocessed termination pay period.
      example:
        end_date: end_date
        employee_uuid: employee_uuid
        check_date: check_date
        pay_schedule_uuid: pay_schedule_uuid
        employee_name: employee_name
        debit_date: debit_date
        start_date: start_date
      properties:
        start_date:
          description: The start date of the pay period.
          readOnly: true
          type: string
        end_date:
          description: The end date of the pay period.
          type: string
        check_date:
          description: The check date of the pay period.
          readOnly: true
          type: string
        debit_date:
          description: The debit date of the pay period.
          type: string
        employee_name:
          description: The full name of the employee.
          type: string
        employee_uuid:
          description: A unique identifier of the employee.
          type: string
        pay_schedule_uuid:
          description: A unique identifier of the pay schedule to which the pay period
            belongs.
          type: string
      type: object
      x-tags:
      - Employee Employments
    Pay-Schedule-Assignment:
      description: The representation of a pay schedule assignment.
      example:
        hourly_pay_schedule_uuid: hourly_pay_schedule_uuid
        default_pay_schedule_uuid: default_pay_schedule_uuid
        salaried_pay_schedule_uuid: salaried_pay_schedule_uuid
        departments:
        - pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
          department_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
        - pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
          department_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
        type: by_employee
        employees:
        - employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
        - employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
      properties:
        type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          example: by_employee
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-properties-type
        hourly_pay_schedule_uuid:
          description: Pay schedule for hourly employees.
          nullable: true
          readOnly: true
          type: string
        salaried_pay_schedule_uuid:
          description: Pay schedule for salaried employees.
          nullable: true
          readOnly: true
          type: string
        default_pay_schedule_uuid:
          description: Default pay schedule for employees.
          nullable: true
          readOnly: true
          type: string
        employees:
          description: List of employees and their pay schedules.
          items:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Employee'
          nullable: true
          readOnly: true
          type: array
        departments:
          description: List of departments and their pay schedules.
          items:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Department'
          nullable: true
          readOnly: true
          type: array
      type: object
      x-examples:
        example-1:
          type: by_employee
          employees:
            employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
            pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
      x-tags:
      - Pay Schedules
      x-konfig-is-used-in-successful-response: true
    Pay-Schedule-Assignment-Employee:
      example:
        employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
        pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
      properties:
        employee_uuid:
          description: The UUID of the employee.
          example: 43b39ada-dc49-4879-9594-fe95f67ae434
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-properties-employee_uuid
        pay_schedule_uuid:
          description: The employee's pay schedule UUID.
          example: 3f029a58-155d-4c30-8361-cc266b2c1f11
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-properties-pay_schedule_uuid
      type: object
      x-examples:
        example-1:
          employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
      x-tags:
      - Pay Schedules
    Pay-Schedule-Assignment-Department:
      example:
        pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
        department_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
      properties:
        department_uuid:
          description: The UUID of the department.
          example: 43b39ada-dc49-4879-9594-fe95f67ae434
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Department-properties-department_uuid
        pay_schedule_uuid:
          description: The department's pay schedule UUID.
          example: 3f029a58-155d-4c30-8361-cc266b2c1f11
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Department-properties-pay_schedule_uuid
      type: object
      x-examples:
        example-1:
          department_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
      x-tags:
      - Pay Schedules
    Pay-Schedule-Assignment-Preview:
      description: The representation of a pay schedule assignment preview.
      example:
        employee_changes:
        - employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          last_name: Parker
          pay_frequency: Twice per month — Salaried pay schedule
          transition_pay_period:
            end_date: 2023-06-30
            start_date: 2023-06-20
          first_pay_period:
            end_date: 2023-08-01
            check_date: 2023-08-02
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
            start_date: 2023-07-01
          first_name: Penny
        - employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          last_name: Parker
          pay_frequency: Twice per month — Salaried pay schedule
          transition_pay_period:
            end_date: 2023-06-30
            start_date: 2023-06-20
          first_pay_period:
            end_date: 2023-08-01
            check_date: 2023-08-02
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
            start_date: 2023-07-01
          first_name: Penny
        type: hourly_salaried
      properties:
        type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          example: hourly_salaried
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Preview-properties-type
        employee_changes:
          description: A list of pay schedule changes including pay period and transition
            pay period.
          items:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Employee-Change'
          type: array
      type: object
      x-examples:
        example-1:
          type: hourly_salaried
          employee_changes:
            employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
            first_name: Penny
            last_name: Parker
            pay_frequency: Twice per month — Salaried pay schedule
            first_pay_period:
              pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
              start_date: 2023-07-01
              end_date: 2023-08-01
              check_date: 2023-08-02
            transition_pay_period:
              start_date: 2023-06-20
              end_date: 2023-06-30
      x-tags:
      - Pay Schedules
      x-konfig-is-used-in-successful-response: true
    Pay-Schedule-Assignment-Employee-Change:
      example:
        employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
        last_name: Parker
        pay_frequency: Twice per month — Salaried pay schedule
        transition_pay_period:
          end_date: 2023-06-30
          start_date: 2023-06-20
        first_pay_period:
          end_date: 2023-08-01
          check_date: 2023-08-02
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
          start_date: 2023-07-01
        first_name: Penny
      properties:
        employee_uuid:
          description: The UUID of the employee.
          example: 43b39ada-dc49-4879-9594-fe95f67ae434
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-employee_uuid
        first_name:
          description: The employee's first name.
          example: Penny
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-first_name
        last_name:
          description: The employee's last name.
          example: Parker
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-last_name
        pay_frequency:
          description: New pay schedule frequency and name.
          example: Twice per month — Salaried pay schedule
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-pay_frequency
        first_pay_period:
          $ref: '#/components/schemas/Pay-Schedule-Assignment-Pay-Period'
        transition_pay_period:
          $ref: '#/components/schemas/Pay-Schedule-Assignment-Transition-Pay-Period'
      type: object
      x-examples:
        example-1:
          employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
          first_name: Penny
          last_name: Parker
          pay_frequency: Twice per month — Salaried pay schedule
          first_pay_period:
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
            start_date: 2023-07-01
            end_date: 2023-08-01
            check_date: 2023-08-02
          transition_pay_period:
            start_date: 2023-06-20
            end_date: 2023-06-30
      x-tags:
      - Pay Schedules
    Pay-Schedule-Assignment-Pay-Period:
      description: Pay schedule assignment first pay period information.
      example:
        end_date: 2023-08-01
        check_date: 2023-08-02
        pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
        start_date: 2023-07-01
      properties:
        pay_schedule_uuid:
          description: The pay schedule UUID.
          example: 3f029a58-155d-4c30-8361-cc266b2c1f11
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-pay_schedule_uuid
        start_date:
          description: Pay period start date.
          example: 2023-07-01
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-start_date
        end_date:
          description: Pay period end date.
          example: 2023-08-01
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-end_date
        check_date:
          description: Pay period check date.
          example: 2023-08-02
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-check_date
      type: object
      x-examples:
        example-1:
          pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
          start_date: 2023-07-01
          end_date: 2023-08-01
          check_date: 2023-08-02
      x-tags:
      - Pay Schedules
    Pay-Schedule-Assignment-Transition-Pay-Period:
      description: Pay schedule assignment transition pay period information.
      example:
        end_date: 2023-06-30
        start_date: 2023-06-20
      properties:
        start_date:
          description: Pay period start date.
          example: 2023-06-20
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Transition-Pay-Period-properties-start_date
        end_date:
          description: Pay period end date.
          example: 2023-06-30
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Transition-Pay-Period-properties-end_date
      type: object
      x-examples:
        example-1:
          start_date: 2023-07-01
          end_date: 2023-08-01
      x-tags:
      - Pay Schedules
    Accruing-Time-Off-Hour:
      description: The representation of an unprocessed termination pay period.
      example:
        hours: hours
        time_off_policy_uuid: time_off_policy_uuid
      properties:
        time_off_policy_uuid:
          description: A unique identifier of the time off policy.
          type: string
        hours:
          description: Hours accrued during this pay period.
          type: string
      type: object
    Employee-Federal-Tax:
      example:
        filing_status: filing_status
        other_income: other_income
        dependents_amount: dependents_amount
        additional_withholding: true
        extra_withholding: extra_withholding
        federal_withholding_allowance: federal_withholding_allowance
        deductions: deductions
        version: version
        two_jobs: true
        w4_data_type: pre_2020_w4
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        filing_status:
          description: |-
            It determines which tax return form an individual will use and is an important factor in computing taxable income. One of:
            - Single
            - Married
            - Head of Household
            - Exempt from withholding
            - Married, but withhold as Single (does not apply to rev_2020_w4 form)
          type: string
        extra_withholding:
          description: An employee can request an additional amount to be withheld
            from each paycheck.
          type: string
        two_jobs:
          description: "If there are only two jobs (i.e., you and your spouse each\
            \ have a job, or you have two), you can set it to true."
          type: boolean
        dependents_amount:
          description: A dependent is a person other than the taxpayer or spouse who
            entitles the taxpayer to claim a dependency exemption.
          type: string
        other_income:
          description: Other income amount.
          type: string
        deductions:
          type: string
        w4_data_type:
          description: The version of w4 form.
          enum:
          - pre_2020_w4
          - rev_2020_w4
          type: string
        federal_withholding_allowance:
          description: |-
            *does not apply to rev_2020_w4 form*

            An exemption from paying a certain amount of income tax.
          type: string
        additional_withholding:
          description: '*does not apply to rev_2020_w4 form*'
          type: boolean
      title: Employee-Federal-Tax
      type: object
      x-examples:
        Example:
          value:
            version: 56a489ce86ed6c1b0f0cecc4050a0b01
            filing_status: Single
            extra_withholding: "0.0"
            two_jobs: true
            dependents_amount: "0.0"
            other_income: "0.0"
            deductions: "0.0"
            w4_data_type: rev_2020_w4
      x-tags:
      - Employee Tax Setup
      x-konfig-is-used-in-successful-response: true
    Employee-State-Tax:
      example:
        file_new_hire_report: true
        employee_uuid: 2005e601-3c78-410a-9d40-b960ae130383
        is_work_state: true
        questions:
        - input_question_format:
            options:
            - label: label
              value: value
            - label: label
              value: value
            type: Select
          answers:
          - valid_up_to: ""
            valid_from: 2010-01-01
            value: "0.0"
          - valid_up_to: ""
            valid_from: 2010-01-01
            value: "0.0"
          description: |
            The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
          label: Filing Status
          key: filing_status
        - input_question_format:
            options:
            - label: label
              value: value
            - label: label
              value: value
            type: Select
          answers:
          - valid_up_to: ""
            valid_from: 2010-01-01
            value: "0.0"
          - valid_up_to: ""
            valid_from: 2010-01-01
            value: "0.0"
          description: |
            The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
          label: Filing Status
          key: filing_status
        state: CA
      properties:
        employee_uuid:
          description: The employee's uuid
          example: 2005e601-3c78-410a-9d40-b960ae130383
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-properties-employee_uuid
        state:
          description: Two letter US state abbreviation
          example: CA
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-properties-state
        file_new_hire_report:
          type: boolean
        is_work_state:
          type: boolean
        questions:
          items:
            $ref: '#/components/schemas/Employee-State-Tax-Question'
          type: array
      required:
      - employee_uuid
      - questions
      - state
      title: Employee-State-Tax
      type: object
      x-examples:
        example-1:
          employee_uuid: 2005e601-3c78-410a-9d40-b960ae130383
          state: CA
          questions:
          - description: |
              The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
            label: Filing Status
            key: filing_status
            input_question_format:
              type: Select
              options:
              - value: S
                label: Single
              - value: M
                label: Married one income
              - value: MD
                label: Married dual income
              - value: H
                label: Head of household
              - value: E
                label: Do Not Withhold
            answers:
            - value: S
              valid_from: 2010-01-01
          - description: |
              This value is needed to calculate the employee's CA income tax withholding. If unsure, use the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4 form</a> to calculate the value manually.
            label: Withholding Allowance
            key: withholding_allowance
            input_question_format:
              type: Number
            answers:
            - value: 1
              valid_from: 2010-01-01
          - description: You can withhold an additional amount of California income
              taxes here.
            label: Additional Withholding
            key: additional_withholding
            input_question_format:
              type: Currency
            answers:
            - value: "0.0"
              valid_from: 2010-01-01
          - description: State law requires you to file a new hire report within 20
              days of hiring or re-hiring an employee.
            label: File a New Hire Report?
            key: file_new_hire_report
            input_question_format:
              type: Select
            options:
            - value: true
              label: "Yes, file the state new hire report for me."
            - value: false
              label: "No, I have already filed."
            answers:
            - value: true
              valid_from: 2010-01-01
      x-tags:
      - Employee Tax Setup
    Employee-State-Tax-Question:
      example:
        input_question_format:
          options:
          - label: label
            value: value
          - label: label
            value: value
          type: Select
        answers:
        - valid_up_to: ""
          valid_from: 2010-01-01
          value: "0.0"
        - valid_up_to: ""
          valid_from: 2010-01-01
          value: "0.0"
        description: |
          The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
        label: Filing Status
        key: filing_status
      properties:
        description:
          description: An explaination of the question - this may contain inline html
            formatted links.
          example: |
            The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-description
        label:
          description: A short title for the question
          example: Filing Status
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-label
        key:
          description: A unique identifier of the question (for the given state) -
            used for updating the answer.
          example: filing_status
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-key
        input_question_format:
          $ref: '#/components/schemas/Employee-State-Tax-Input-Question-Format'
        answers:
          items:
            $ref: '#/components/schemas/Employee-State-Tax-Answer'
          type: array
      required:
      - answers
      - description
      - input_question_format
      - key
      - label
      title: Employee-State-Tax-Question
      type: object
      x-examples:
        example-1:
          description: |
            The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
          label: Filing Status
          key: filing_status
          input_question_format:
            type: Select
            options:
            - value: S
              label: Single
            - value: M
              label: Married one income
            - value: MD
              label: Married dual income
            - value: H
              label: Head of household
            - value: E
              label: Do Not Withhold
          answers:
          - value: S
            valid_from: 2010-01-01
      x-tags:
      - Employee Tax Setup
    Employee-State-Tax-Answer:
      example:
        valid_up_to: ""
        valid_from: 2010-01-01
        value: "0.0"
      properties:
        value:
          description: "The answer to the corresponding question - this may be a string,\
            \ number, boolean, or null."
          example: "0.0"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Answer-properties-value
        valid_from:
          description: The effective date of the answer - currently always “2010-01-01”.
          example: 2010-01-01
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Answer-properties-valid_from
        valid_up_to:
          description: The effective end date of the answer - currently always null.
          nullable: true
      title: Employee-State-Tax-Answer
      type: object
      x-examples:
        example-1:
          value: "0.0"
          valid_from: 2010-01-01
      x-tags:
      - Employee Tax Setup
    Employee-State-Tax-Input-Question-Format:
      example:
        options:
        - label: label
          value: value
        - label: label
          value: value
        type: Select
      properties:
        type:
          description: "Describes the type of question - Text, Number, Select, Currency,\
            \ Date"
          example: Select
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-State-Tax-Input-Question-Format-properties-type
        options:
          description: "For \"Select\" type questions, the allowed values and display\
            \ labels."
          items:
            $ref: '#/components/schemas/Employee_State_Tax_Input_Question_Format_options_inner'
          type: array
          uniqueItems: true
      required:
      - type
      title: Employee-State-Tax-Input-Question-Format
      type: object
      x-examples:
        select-example:
          type: Select
          options:
          - value: S
            label: Single
          - value: M
            label: Married one income
          - value: MD
            label: Married dual income
          - value: H
            label: Head of household
          - value: E
            label: Do Not Withhold
        number-example:
          type: Number
      x-tags:
      - Employee Tax Setup
    Federal-Tax-Details:
      example:
        has_ein: true
        ein_verified: true
        taxable_as_scorp: true
        legal_name: legal_name
        version: version
        tax_payer_type: tax_payer_type
        filing_form: filing_form
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        tax_payer_type:
          description: |-
            What type of tax entity the company is. One of:
            - C-Corporation
            - S-Corporation
            - Sole proprietor
            - LLC
            - LLP
            - Limited partnership
            - Co-ownership
            - Association
            - Trusteeship
            - General partnership
            - Joint venture
            - Non-Profit
          type: string
        taxable_as_scorp:
          description: |-
            Whether the company is taxed as an S-Corporation. Tax payer types that may be taxed as an S-Corporation include:
            - S-Corporation
            - C-Corporation
            - LLC
          type: boolean
        filing_form:
          description: |-
            The form used by the company for federal tax filing. One of:
            - 941 (Quarterly federal tax return form)
            - 944 (Annual federal tax return form)
          type: string
        has_ein:
          description: Whether company's Employer Identification Number (EIN) is present
          type: boolean
        ein_verified:
          description: 'Whether the EIN was able to be verified as a valid EIN with
            the IRS. '
          type: boolean
        legal_name:
          description: The legal name of the company
          type: string
      title: Federal-Tax-Details
      type: object
      x-examples:
        Example:
          value:
            version: string
            tax_payer_type: string
            taxable_as_scorp: false
            filing_form: string
            has_ein: true
            ein_verified: true
            legal_name: string
      x-tags:
      - Federal Tax Details
      x-konfig-is-used-in-successful-response: true
    Employee-Bank-Account:
      example:
        account_type: Checking
        employee_uuid: employee_uuid
        name: name
        hidden_account_number: hidden_account_number
        routing_number: routing_number
        uuid: uuid
      properties:
        uuid:
          description: UUID of the bank account
          type: string
        employee_uuid:
          description: UUID of the employee
          type: string
        account_type:
          description: Bank account type
          enum:
          - Checking
          - Savings
          type: string
        name:
          description: Name for the bank account
          type: string
        routing_number:
          description: The bank account's routing number
          type: string
        hidden_account_number:
          description: Masked bank account number
          type: string
      title: Employee-Bank-Account
      type: object
      x-examples:
        Example:
          value:
            uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
            employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
            name: BoA Checking Account
            routing_number: "266905059"
            hidden_account_number: XXXX1207
            account_type: Checking
      x-tags:
      - Employee Payment Method
      x-konfig-is-used-in-successful-response: true
    Contractor-Bank-Account:
      example:
        account_type: Checking
        name: name
        hidden_account_number: hidden_account_number
        routing_number: routing_number
        uuid: uuid
        contractor_uuid: contractor_uuid
      properties:
        uuid:
          description: UUID of the bank account
          type: string
        contractor_uuid:
          description: UUID of the employee
          type: string
        account_type:
          description: Bank account type
          enum:
          - Checking
          - Savings
          type: string
        name:
          description: Name for the bank account
          type: string
        routing_number:
          description: The bank account's routing number
          type: string
        hidden_account_number:
          description: Masked bank account number
          type: string
      title: Contractor-Bank-Account
      type: object
      x-examples:
        Example:
          value:
            uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
            employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
            name: BoA Checking Account
            routing_number: "266905059"
            hidden_account_number: XXXX1207
            account_type: Checking
      x-tags:
      - Contractor Payment Method
      x-konfig-is-used-in-successful-response: true
    Employee-Payment-Method:
      description: ""
      example:
        splits:
        - split_amount: 6
          name: name
          hidden_account_number: hidden_account_number
          priority: 0
          uuid: uuid
        - split_amount: 6
          name: name
          hidden_account_number: hidden_account_number
          priority: 0
          uuid: uuid
        split_by: Amount
        type: Direct Deposit
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        type:
          description: "The payment method type. If type is Check, then split_by and\
            \ splits do not need to be populated. If type is Direct Deposit, split_by\
            \ and splits are required."
          enum:
          - Direct Deposit
          - Check
          type: string
        split_by:
          description: "Describes how the payment will be split. If split_by is Percentage,\
            \ then the split amounts must add up to exactly 100. If split_by is Amount,\
            \ then the last split amount must be nil to capture the remainder."
          enum:
          - Amount
          - Percentage
          nullable: true
          type: string
        splits:
          items:
            $ref: '#/components/schemas/Payment-Method-Bank-Account'
          nullable: true
          type: array
      title: Employee-Payment-Method
      type: object
      x-examples:
        Example-1:
          value:
            version: 63859768485e218ccf8a449bb60f14ed
            type: Direct Deposit
            split_by: Amount
            splits:
            - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
              name: BoA Checking Account
              priority: 1
              split_amount: 500
            - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
              name: Chase Checking Account
              priority: 2
              split_amount: 1000
            - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
              name: US Bank Checking Account
              priority: 3
        Example-2:
          value:
            version: 63859768485e218ccf8a449bb60f14ed
            type: Direct Deposit
            split_by: Percentage
            splits:
            - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
              name: BoA Checking Account
              priority: 1
              split_amount: 60
            - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
              name: Chase Checking Account
              priority: 2
              split_amount: 40
        Example-3:
          value:
            version: 63859768485e218ccf8a449bb60f14ed
            type: Check
      x-tags:
      - Employee Payment Method
      x-konfig-is-used-in-successful-response: true
    Tax-Requirement:
      example:
        metadata:
          rate_type: percent
          risk_class_code: risk_class_code
          risk_class_description: risk_class_description
          prefix: prefix
          options:
          - short_label: short_label
            label: label
            value: value
          - short_label: short_label
            label: label
            value: value
          type: account_number
          validation:
            min: min
            max: max
            rates:
            - rates
            - rates
            type: one_of
          mask: '#######-^^'
        description: "If you have run payroll in the past in GA, find your withholding\
          \ number on notices received from the Georgia Department of Revenue, or\
          \ call the agency at (877) 423-6711. If you don’t have a number yet, you\
          \ should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
          \ the business online</a>. The last two characters of your ID must be upper\
          \ case letters."
        applicable_if:
        - value: ""
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        - value: ""
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        label: Withholding Number
        value: 1233214-AB
        key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
      properties:
        description:
          description: A more detailed customer facing description of the requirement
          example: "If you have run payroll in the past in GA, find your withholding\
            \ number on notices received from the Georgia Department of Revenue, or\
            \ call the agency at (877) 423-6711. If you don’t have a number yet, you\
            \ should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
            \ the business online</a>. The last two characters of your ID must be\
            \ upper case letters."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-properties-description
        key:
          description: An identifier for an individual requirement. Uniqueness is
            guaranteed within a requirement set.
          example: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          title: Tax-Requirement-Key
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Key
        applicable_if:
          description: "An array of references to other requirements within the requirement\
            \ set. This requirement is only applicable if all referenced requirements\
            \ have values matching the corresponding `value`. The primary use-case\
            \ is dynamically hiding and showing requirements as values change. E.g.\
            \ Show Requirement-B when Requirement-A has been answered with `false`.\
            \ To be explicit, an empty array means the requirement is applicable."
          items:
            $ref: '#/components/schemas/Tax_Requirement_applicable_if_inner'
          type: array
        label:
          description: A customer facing description of the requirement
          example: Withholding Number
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-properties-label
        value:
          description: The "answer"
          example: 1233214-AB
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-properties-value
        metadata:
          $ref: '#/components/schemas/Tax-Requirement-Metadata'
      type: object
      x-examples:
        ga-withholding-requirement-example:
          description: "If you have run payroll in the past in GA, find your withholding\
            \ number on notices received from the Georgia Department of Revenue, or\
            \ call the agency at (877) 423-6711. If you don’t have a number yet, you\
            \ should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
            \ the business online</a>. The last two characters of your ID must be\
            \ upper case letters."
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          applicable_if: []
          label: Withholding Number
          value: 1233214-AB
          metadata:
            type: account_number
            mask: '#######-^^'
    Tax-Requirement-Metadata:
      description: ""
      example:
        rate_type: percent
        risk_class_code: risk_class_code
        risk_class_description: risk_class_description
        prefix: prefix
        options:
        - short_label: short_label
          label: label
          value: value
        - short_label: short_label
          label: label
          value: value
        type: account_number
        validation:
          min: min
          max: max
          rates:
          - rates
          - rates
          type: one_of
        mask: '#######-^^'
      properties:
        type:
          description: |
            Describes the type of requirement - each type may have additional metadata properties to describe possible values, formats, etc.

            - `text`: free-text input, no additional requirements
            - `currency`: a value representing a dollar amount, e.g. `374.55` representing `$374.55`
            - `radio`: choose one of options provided, see `options`
            - `select`: choose one of options provided, see `options`
            - `percent`: A decimal value representing a percentage, e.g. `0.034` representing `3.4%`
            - `account_number`: An account number for a tax agency, more information provided by `mask` and `prefix`
            - `tax_rate`: A decimal value representing a tax rate, e.g. `0.034` representing a tax rate of `3.4%`, see `validation` for additional validation guidance
            - `workers_compensation_rate`: A decimal value representing a percentage, see `risk_class_code`, `risk_class_description`, and `rate_type`
          enum:
          - text
          - currency
          - radio
          - select
          - percent
          - account_number
          - tax_rate
          - workers_compensation_rate
          example: account_number
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-type
        options:
          description: "[for `select` or `radio`] An array of objects describing the\
            \ possible values."
          items:
            $ref: '#/components/schemas/Tax_Requirement_Metadata_options_inner'
          type: array
        risk_class_code:
          description: "[for `workers_compensation_rate`] The industry risk class\
            \ code for the rate being requested"
          type: string
        risk_class_description:
          description: "[for `workers_compensation_rate`] A description of the industry\
            \ risk class for the rate being requested"
          type: string
        rate_type:
          description: |
            [for `workers_compensation_rate`] The type of rate being collected. Either:
             - `percent`: A percentage formatted as a decimal, e.g. `0.01` for 1%
             - `currency_per_hour`: A dollar amount per hour, e.g. `3.24` for $3.24/hr
          enum:
          - percent
          - currency_per_hour
          type: string
        mask:
          description: |
            [for `account_number`] A pattern describing the format of the account number

            The mask is a sequence of characters representing the requirements of the actual account number. Each character in the mask represents a single character in the account number as follows:
            - `#`: a digit (`\d`)
            - `@`: a upper or lower case letter (`[a-zA-Z]`)
            - `^`: an uppercase letter (`[A-Z]`)
            - `%`: a digit or uppercase letter (`[0-9A-Z]`)
            - any other character represents the literal character

            Examples:
            - mask: `WHT-######` represents `WHT-` followed by 5 digits, e.g. `WHT-33421`
            - mask: `%####-^^` supports values of `75544-AB` and `Z7654-HK`
          example: '#######-^^'
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-mask
        prefix:
          description: "[for `account_number`] A value that precedes the value to\
            \ be collected - useful for display, but should not be submitted as part\
            \ of the value. E.g. some tax agencies use an account number that is a\
            \ company's federal ein plus two digits. In that case the mask would be\
            \ `##` and the prefix `XXXXX1234`."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-prefix
          example: null
        validation:
          $ref: '#/components/schemas/Tax_Requirement_Metadata_validation'
      required:
      - type
      type: object
      x-examples:
        select-example:
          type: select
          options:
          - label: Semiweekly
            value: Semi-weekly
          - label: Monthly
            value: Monthly
          - label: Quarterly
            value: Quarterly
        tax_rate-example:
          metadata:
            type: tax_rate
            validation:
              type: min_max
              min: "0.0004"
              max: "0.081"
        radio-example:
          metadata:
            type: radio
            options:
            - label: "No, we cannot reimburse the state—we have to pay SUI taxes quarterly"
              short_label: Not Reimbursable
              value: false
            - label: "Yes, we can reimburse the state if an employee collects SUI\
                \ benefits—we don’t have to pay SUI taxes quarterly"
              short_label: Reimbursable
              value: true
        account_number-example:
          metadata:
            type: account_number
            mask: '######-##'
    Tax-Requirement-Set:
      description: ""
      example:
        requirements:
        - metadata:
            rate_type: percent
            risk_class_code: risk_class_code
            risk_class_description: risk_class_description
            prefix: prefix
            options:
            - short_label: short_label
              label: label
              value: value
            - short_label: short_label
              label: label
              value: value
            type: account_number
            validation:
              min: min
              max: max
              rates:
              - rates
              - rates
              type: one_of
            mask: '#######-^^'
          description: "If you have run payroll in the past in GA, find your withholding\
            \ number on notices received from the Georgia Department of Revenue, or\
            \ call the agency at (877) 423-6711. If you don’t have a number yet, you\
            \ should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
            \ the business online</a>. The last two characters of your ID must be\
            \ upper case letters."
          applicable_if:
          - value: ""
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - value: ""
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          label: Withholding Number
          value: 1233214-AB
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        - metadata:
            rate_type: percent
            risk_class_code: risk_class_code
            risk_class_description: risk_class_description
            prefix: prefix
            options:
            - short_label: short_label
              label: label
              value: value
            - short_label: short_label
              label: label
              value: value
            type: account_number
            validation:
              min: min
              max: max
              rates:
              - rates
              - rates
              type: one_of
            mask: '#######-^^'
          description: "If you have run payroll in the past in GA, find your withholding\
            \ number on notices received from the Georgia Department of Revenue, or\
            \ call the agency at (877) 423-6711. If you don’t have a number yet, you\
            \ should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
            \ the business online</a>. The last two characters of your ID must be\
            \ upper case letters."
          applicable_if:
          - value: ""
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - value: ""
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          label: Withholding Number
          value: 1233214-AB
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        state: GA
        label: Registrations
        effective_from: effective_from
        key: registrations
      properties:
        state:
          description: One of the two-letter state abbreviations for the fifty United
            States and the District of Columbia (DC)
          example: GA
          title: State
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-State
        key:
          description: An identifier for a set of requirements. A list of requirement
            sets can contain multiple sets with the same `key` and different `effective_from`
            values.
          example: registrations
          title: Tax-Requirement-Set-Key
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Set-Key
        label:
          description: "Customer facing label for the requirement set, e.g. \"Registrations\""
          example: Registrations
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Set-properties-label
        effective_from:
          description: "An ISO 8601 formatted date representing the date values became\
            \ effective. Some requirement sets are effective dated, while others are\
            \ not. Multiple requirement sets for the same state/key can/will exist\
            \ with unique effective dates. If a requirement set is has an `effective_from`\
            \ value, all requirement sets with the same key will also have an `effective_from`\
            \ value."
          nullable: true
          title: Tax-Requirement-Effective-From
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Effective-From
          example: null
        requirements:
          items:
            $ref: '#/components/schemas/Tax-Requirement'
          type: array
      type: object
      x-examples:
        tax-requirements-set-ga-registrations-example:
          state: GA
          key: registrations
          label: Registrations
          requirements:
          - description: "If you have run payroll in the past in GA, find your withholding\
              \ number on notices received from the Georgia Department of Revenue,\
              \ or call the agency at (877) 423-6711. If you don’t have a number yet,\
              \ you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
              \ the business online</a>. The last two characters of your ID must be\
              \ upper case letters."
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            applicable_if: []
            label: Withholding Number
            value: 1233214-AB
            metadata:
              type: account_number
              mask: '#######-^^'
          - description: "If you have run payroll in the past in GA, find your DOL\
              \ account number on notices received from the Georgia Department of\
              \ Labor, or call the agency at (404) 232-3300. If you don’t have an\
              \ account number yet, please <a target='_blank' data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow\
              \ the instructions here</a> to register your business with the Georgia\
              \ Dept. of Labor."
            key: 6c0911ab-5860-412e-bdef-6437cd881df5
            applicable_if: []
            label: DOL Account Number
            value: 474747-88
            metadata:
              type: account_number
              mask: '######-##'
    Tax-Requirements-State:
      description: ""
      example:
        company_uuid: 6c14eac3-0da2-474d-bda1-786b3602d381
        requirement_sets:
        - requirements:
          - metadata:
              rate_type: percent
              risk_class_code: risk_class_code
              risk_class_description: risk_class_description
              prefix: prefix
              options:
              - short_label: short_label
                label: label
                value: value
              - short_label: short_label
                label: label
                value: value
              type: account_number
              validation:
                min: min
                max: max
                rates:
                - rates
                - rates
                type: one_of
              mask: '#######-^^'
            description: "If you have run payroll in the past in GA, find your withholding\
              \ number on notices received from the Georgia Department of Revenue,\
              \ or call the agency at (877) 423-6711. If you don’t have a number yet,\
              \ you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
              \ the business online</a>. The last two characters of your ID must be\
              \ upper case letters."
            applicable_if:
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            label: Withholding Number
            value: 1233214-AB
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - metadata:
              rate_type: percent
              risk_class_code: risk_class_code
              risk_class_description: risk_class_description
              prefix: prefix
              options:
              - short_label: short_label
                label: label
                value: value
              - short_label: short_label
                label: label
                value: value
              type: account_number
              validation:
                min: min
                max: max
                rates:
                - rates
                - rates
                type: one_of
              mask: '#######-^^'
            description: "If you have run payroll in the past in GA, find your withholding\
              \ number on notices received from the Georgia Department of Revenue,\
              \ or call the agency at (877) 423-6711. If you don’t have a number yet,\
              \ you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
              \ the business online</a>. The last two characters of your ID must be\
              \ upper case letters."
            applicable_if:
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            label: Withholding Number
            value: 1233214-AB
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          state: GA
          label: Registrations
          effective_from: effective_from
          key: registrations
        - requirements:
          - metadata:
              rate_type: percent
              risk_class_code: risk_class_code
              risk_class_description: risk_class_description
              prefix: prefix
              options:
              - short_label: short_label
                label: label
                value: value
              - short_label: short_label
                label: label
                value: value
              type: account_number
              validation:
                min: min
                max: max
                rates:
                - rates
                - rates
                type: one_of
              mask: '#######-^^'
            description: "If you have run payroll in the past in GA, find your withholding\
              \ number on notices received from the Georgia Department of Revenue,\
              \ or call the agency at (877) 423-6711. If you don’t have a number yet,\
              \ you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
              \ the business online</a>. The last two characters of your ID must be\
              \ upper case letters."
            applicable_if:
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            label: Withholding Number
            value: 1233214-AB
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - metadata:
              rate_type: percent
              risk_class_code: risk_class_code
              risk_class_description: risk_class_description
              prefix: prefix
              options:
              - short_label: short_label
                label: label
                value: value
              - short_label: short_label
                label: label
                value: value
              type: account_number
              validation:
                min: min
                max: max
                rates:
                - rates
                - rates
                type: one_of
              mask: '#######-^^'
            description: "If you have run payroll in the past in GA, find your withholding\
              \ number on notices received from the Georgia Department of Revenue,\
              \ or call the agency at (877) 423-6711. If you don’t have a number yet,\
              \ you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
              \ the business online</a>. The last two characters of your ID must be\
              \ upper case letters."
            applicable_if:
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            - value: ""
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            label: Withholding Number
            value: 1233214-AB
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          state: GA
          label: Registrations
          effective_from: effective_from
          key: registrations
        state: GA
      properties:
        company_uuid:
          example: 6c14eac3-0da2-474d-bda1-786b3602d381
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirements-State-properties-company_uuid
        state:
          description: One of the two-letter state abbreviations for the fifty United
            States and the District of Columbia (DC)
          example: GA
          title: State
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-State
        requirement_sets:
          items:
            $ref: '#/components/schemas/Tax-Requirement-Set'
          type: array
      title: Tax-Requirements-State
      type: object
      x-examples:
        tax-requirements-state-ga-example:
          company_uuid: 6c14eac3-0da2-474d-bda1-786b3602d381
          state: GA
          requirement_sets:
          - state: GA
            key: registrations
            label: Registrations
            requirements:
            - description: "If you have run payroll in the past in GA, find your withholding\
                \ number on notices received from the Georgia Department of Revenue,\
                \ or call the agency at (877) 423-6711. If you don’t have a number\
                \ yet, you should <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
                \ the business online</a>. The last two characters of your ID must\
                \ be upper case letters."
              key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
              applicable_if: []
              label: Withholding Number
              value: 1233214-AB
              metadata:
                type: account_number
                mask: '#######-^^'
            - description: "If you have run payroll in the past in GA, find your DOL\
                \ account number on notices received from the Georgia Department of\
                \ Labor, or call the agency at (404) 232-3300. If you don’t have an\
                \ account number yet, please <a target='_blank' data-bypass href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow\
                \ the instructions here</a> to register your business with the Georgia\
                \ Dept. of Labor."
              key: 6c0911ab-5860-412e-bdef-6437cd881df5
              applicable_if: []
              label: DOL Account Number
              value: 474747-88
              metadata:
                type: account_number
                mask: '######-##'
          - state: GA
            key: taxrates
            label: Tax Rates
            effective_from: 2022-01-01
            requirements:
            - description: "Instead of paying state unemployment insurance (SUI) taxes\
                \ quarterly, some businesses (like non-profits or government organizations)\
                \ may be allowed to reimburse the state if one of their employees\
                \ collects unemployment benefits."
              key: suireimbursable
              applicable_if: []
              label: SUI Reimburser
              value: false
              metadata:
                type: radio
                options:
                - label: "No, we cannot reimburse the state—we have to pay SUI taxes\
                    \ quarterly"
                  short_label: Not Reimbursable
                  value: false
                - label: "Yes, we can reimburse the state if an employee collects\
                    \ SUI benefits—we don’t have to pay SUI taxes quarterly"
                  short_label: Reimbursable
                  value: true
            - description: Haven't received your assigned rate yet? <a target='_blank'
                data-bypass href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'>Find
                the new employer rate</a> and enter it here.
              key: e0ac2284-8d30-4100-ae23-f85f9574868b
              applicable_if:
              - key: suireimbursable
                value: false
              label: Total Tax Rate
              value: "0.05"
              metadata:
                type: tax_rate
                validation:
                  type: min_max
                  min: "0.0004"
                  max: "0.081"
          - state: GA
            key: depositschedules
            label: Deposit Schedules
            effective_from: 2022-01-01
            requirements:
            - description: "Georgia rejects payments made on the wrong schedule. GA\
                \ employers receive their schedule on a registration verification\
                \ letter after registering with the Georgia Dept. of Revenue. If you\
                \ are unsure, call the agency at (877) 423-6711. If you did not register\
                \ your business yet, please <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'>register\
                \ the business with the Georgia Dept. of Revenue</a>."
              key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
              applicable_if: []
              label: Deposit Schedule
              value: Monthly
              metadata:
                type: select
                options:
                - label: Semiweekly
                  value: Semi-weekly
                - label: Monthly
                  value: Monthly
                - label: Quarterly
                  value: Quarterly
          - state: GA
            key: depositschedules
            label: Deposit Schedules
            effective_from: 2022-07-01
            requirements:
            - description: "Georgia rejects payments made on the wrong schedule. GA\
                \ employers receive their schedule on a registration verification\
                \ letter after registering with the Georgia Dept. of Revenue. If you\
                \ are unsure, call the agency at (877) 423-6711. If you did not register\
                \ your business yet, please <a target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#2'>register\
                \ the business with the Georgia Dept. of Revenue</a>."
              key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
              applicable_if: []
              label: Deposit Schedule
              value: Monthly
              metadata:
                type: select
                options:
                - label: Semiweekly
                  value: Semi-weekly
                - label: Monthly
                  value: Monthly
                - label: Quarterly
                  value: Quarterly
      x-konfig-is-used-in-successful-response: true
    Tax-Requirement-Set-Key:
      description: An identifier for a set of requirements. A list of requirement
        sets can contain multiple sets with the same `key` and different `effective_from`
        values.
      example: registrations
      title: Tax-Requirement-Set-Key
      type: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Set-Key
    Tax-Requirement-Key:
      description: An identifier for an individual requirement. Uniqueness is guaranteed
        within a requirement set.
      example: 71653ec0-00b5-4c66-a58b-22ecf21704c5
      title: Tax-Requirement-Key
      type: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Key
    Tax-Requirement-Effective-From:
      description: "An ISO 8601 formatted date representing the date values became\
        \ effective. Some requirement sets are effective dated, while others are not.\
        \ Multiple requirement sets for the same state/key can/will exist with unique\
        \ effective dates. If a requirement set is has an `effective_from` value,\
        \ all requirement sets with the same key will also have an `effective_from`\
        \ value."
      nullable: true
      title: Tax-Requirement-Effective-From
      type: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Effective-From
      example: null
    State:
      description: One of the two-letter state abbreviations for the fifty United
        States and the District of Columbia (DC)
      example: GA
      title: State
      type: string
      x-konfig-generated-schema: konfig-generated-schema-components-schemas-State
    Time-Off-Policy:
      description: Representation of a Time Off Policy
      example:
        company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
        accrual_method: unlimited
        is_active: true
        accrual_rate_unit: accrual_rate_unit
        accrual_waiting_period_days: 0
        carryover_limit_hours: carryover_limit_hours
        version: version
        uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
        policy_type: vacation
        accrual_rate: accrual_rate
        max_accrual_hours_per_year: max_accrual_hours_per_year
        paid_out_on_termination: true
        name: test policy
        complete: true
        employees:
        - uuid: uuid
        - uuid: uuid
        max_hours: max_hours
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        uuid:
          description: Unique identifier of a time off policy
          example: 3f746cd0-dd08-408f-b712-8180c7c621e9
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-uuid
        company_uuid:
          description: Unique identifier for the company owning the time off policy
          example: de83cff2-8e7a-448e-a28c-14258a9971c3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-company_uuid
        name:
          description: Name of the time off policy
          example: test policy
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-name
        policy_type:
          description: Type of the time off policy
          enum:
          - vacation
          - sick
          example: vacation
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-policy_type
        accrual_method:
          description: Policy time off accrual method
          example: unlimited
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-accrual_method
        accrual_rate:
          description: "The rate at which the time off hours will accrue for an employee\
            \ on the policy. Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        accrual_rate_unit:
          description: "The number of hours an employee has to work or be paid for\
            \ to accrue the number of hours set in the accrual rate. Only used for\
            \ hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,\
            \ per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        paid_out_on_termination:
          description: Boolean representing if an employees accrued time off hours
            will be paid out on termination
          type: boolean
        accrual_waiting_period_days:
          description: Number of days before an employee on the policy will begin
            accruing time off hours
          type: integer
        carryover_limit_hours:
          description: The max number of hours and employee can carryover from one
            year to the next
          format: float
          type: string
        max_accrual_hours_per_year:
          description: The max number of hours and employee can accrue in a year
          format: float
          type: string
        max_hours:
          description: The max number of hours an employee can accrue
          format: float
          type: string
        complete:
          description: boolean representing if a policy has completed configuration
          type: boolean
        is_active:
          description: boolean representing if a policy is active or not
          example: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Policy-properties-is_active
        employees:
          description: List of employee UUIDs under a time off policy
          items:
            $ref: '#/components/schemas/Time_Off_Policy_employees_inner'
          type: array
      required:
      - accrual_method
      - company_uuid
      - employees
      - is_active
      - name
      - policy_type
      - uuid
      type: object
      x-examples:
        example:
          uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
          company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
          name: test policy
          policy_type: vacation
          accrual_method: unlimited
          is_active: true
          employees:
          - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
        x-konfig-original-example:
          uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
          company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
          name: test policy
          policy_type: vacation
          accrual_method: unlimited
          is_active: true
          employees:
          - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
      x-konfig-is-used-in-successful-response: true
    Time-Off-Activity:
      description: Representation of a Time Off Activity
      example:
        effective_time: 2022-09-27T13:43:03.000-07:00
        event_type: TimeOffEvent::AddToPolicy
        time_off_type: vacation
        balance: "0.0"
        event_description: "Added to policy: Vacation Per Hour Worked"
        policy_name: Paid Time Off
        balance_change: "0.0"
        policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
      properties:
        policy_uuid:
          description: unique identifier of a time off policy
          example: a7838f74-4c29-4b70-9bfb-02a4e3e60709
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-policy_uuid
        time_off_type:
          description: Type of the time off activity
          enum:
          - vacation
          - sick
          example: vacation
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-time_off_type
        policy_name:
          description: The name of the time off policy for this activity
          example: Paid Time Off
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-policy_name
        event_type:
          description: The type of the time off event/activity
          example: TimeOffEvent::AddToPolicy
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-event_type
        event_description:
          description: A description for the time off event/activity
          example: "Added to policy: Vacation Per Hour Worked"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-event_description
        effective_time:
          description: The datetime of the time off activity
          example: 2022-09-27T13:43:03.000-07:00
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-effective_time
        balance:
          description: The time off balance at the time of the activity
          example: "0.0"
          format: float
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-balance
        balance_change:
          description: The amount the time off balance changed as a result of the
            activity
          example: "0.0"
          format: float
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Activity-properties-balance_change
      type: object
      x-examples:
        example:
          policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
          time_off_type: vacation
          policy_name: Paid Time Off
          event_type: TimeOffEvent::AddToPolicy
          event_description: "Added to policy: Vacation Per Hour Worked"
          effective_time: 2022-09-27T13:43:03.000-07:00
          balance: "0.0"
          balance_change: "0.0"
        x-konfig-original-example:
          policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
          time_off_type: vacation
          policy_name: Paid Time Off
          event_type: TimeOffEvent::AddToPolicy
          event_description: "Added to policy: Vacation Per Hour Worked"
          effective_time: 2022-09-27T13:43:03.000-07:00
          balance: "0.0"
          balance_change: "0.0"
      x-konfig-is-used-in-successful-response: true
    Holiday-Pay-Policy:
      description: Representation of a Holiday Pay Policy
      example:
        company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
        federal_holidays:
        - memorial_day:
            date: date
            name: name
            selected: true
          presidents_day:
            date: date
            name: name
            selected: true
          independence_day:
            date: date
            name: name
            selected: true
          juneteenth:
            date: date
            name: name
            selected: true
          thanksgiving:
            date: date
            name: name
            selected: true
          mlk_day:
            date: date
            name: name
            selected: true
          new_years_day:
            date: date
            name: name
            selected: true
          columbus_day:
            date: date
            name: name
            selected: true
          labor_day:
            date: date
            name: name
            selected: true
          veterans_day:
            date: date
            name: name
            selected: true
        - memorial_day:
            date: date
            name: name
            selected: true
          presidents_day:
            date: date
            name: name
            selected: true
          independence_day:
            date: date
            name: name
            selected: true
          juneteenth:
            date: date
            name: name
            selected: true
          thanksgiving:
            date: date
            name: name
            selected: true
          mlk_day:
            date: date
            name: name
            selected: true
          new_years_day:
            date: date
            name: name
            selected: true
          columbus_day:
            date: date
            name: name
            selected: true
          labor_day:
            date: date
            name: name
            selected: true
          veterans_day:
            date: date
            name: name
            selected: true
        employees:
        - uuid: uuid
        - uuid: uuid
        version: 1b37938b017c7fd7116bada007072290
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          example: 1b37938b017c7fd7116bada007072290
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Holiday-Pay-Policy-properties-version
        company_uuid:
          description: A unique identifier for the company owning the holiday pay
            policy
          example: b7845189-f12b-4378-918a-d2b9de3dc4ea
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Holiday-Pay-Policy-properties-company_uuid
        federal_holidays:
          description: List of the eleven supported federal holidays and their details
          items:
            $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner'
          type: array
        employees:
          description: List of employee uuids under a time off policy
          items:
            $ref: '#/components/schemas/Time_Off_Policy_employees_inner'
          type: array
      required:
      - company_uuid
      - employees
      - federal_holidays
      - version
      type: object
      x-examples:
        example:
          version: 1b37938b017c7fd7116bada007072290
          company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
          federal_holidays:
            new_years_day:
              selected: true
              name: New Year's Day
              date: January 1
            mlk_day:
              selected: true
              name: "Martin Luther King, Jr. Day"
              date: Third Monday in January
            presidents_day:
              selected: false
              name: Presidents' Day
              date: Third Monday in February
            memorial_day:
              selected: true
              name: Memorial Day
              date: Last Monday in May
            juneteenth:
              selected: false
              name: Juneteenth
              date: June 19
            independence_day:
              selected: true
              name: Independence Day
              date: July 4
            labor_day:
              selected: false
              name: Labor Day
              date: First Monday in September
            columbus_day:
              selected: false
              name: Columbus Day (Indigenous Peoples' Day)
              date: Second Monday in October
            veterans_day:
              selected: true
              name: Veterans Day
              date: November 11
            thanksgiving:
              selected: true
              name: Thanksgiving
              date: Fourth Thursday in November
            christmas_day:
              selected: true
              name: Christmas Day
              date: December 25
          employees:
            uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
        x-konfig-original-example:
          version: 1b37938b017c7fd7116bada007072290
          company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
          federal_holidays:
            new_years_day:
              selected: true
              name: New Year's Day
              date: January 1
            mlk_day:
              selected: true
              name: "Martin Luther King, Jr. Day"
              date: Third Monday in January
            presidents_day:
              selected: false
              name: Presidents' Day
              date: Third Monday in February
            memorial_day:
              selected: true
              name: Memorial Day
              date: Last Monday in May
            juneteenth:
              selected: false
              name: Juneteenth
              date: June 19
            independence_day:
              selected: true
              name: Independence Day
              date: July 4
            labor_day:
              selected: false
              name: Labor Day
              date: First Monday in September
            columbus_day:
              selected: false
              name: Columbus Day (Indigenous Peoples' Day)
              date: Second Monday in October
            veterans_day:
              selected: true
              name: Veterans Day
              date: November 11
            thanksgiving:
              selected: true
              name: Thanksgiving
              date: Fourth Thursday in November
            christmas_day:
              selected: true
              name: Christmas Day
              date: December 25
          employees:
            uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
      x-konfig-is-used-in-successful-response: true
    Paid-Holidays:
      description: Representation of a company's paid holidays as descibed by their
        Holiday Pay Policy
      example:
        schema:
          end_date: end_date
          holiday_key: holiday_key
          holiday_name: holiday_name
          start_date: start_date
      properties:
        schema:
          $ref: '#/components/schemas/Paid_Holidays_schema'
      type: object
      x-konfig-is-used-in-successful-response: true
    Minimum-Wage:
      description: Representation of a Minimum Wage
      example:
        notes: Employers with 6 or more employees
        authority: State
        effective_date: 2022-01-01T00:00:00.000+00:00
        uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
        wage: "13.0"
        wage_type: Regular
      properties:
        uuid:
          description: unique identifier of a minimum wage
          example: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-uuid
        wage:
          description: "The wage rate for a minimum wage record. Represented as a\
            \ float, e.g. \"15.0\"."
          example: "13.0"
          format: float
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-wage
        wage_type:
          description: "The type of wage the minimum wage applies to, e.g. \"Regular\"\
            , \"Regular-Industry-Specific\"."
          example: Regular
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-wage_type
        effective_date:
          description: The date the minimum wage rule is effective on.
          example: 2022-01-01
          format: date
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-effective_date
        authority:
          description: "The governing authority that created the minimum wage, e.g.\
            \ \"City\", \"State\", or \"Federal\"."
          example: State
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-authority
        notes:
          description: Description of parties the minimum wage applies to.
          example: Employers with 6 or more employees
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Minimum-Wage-properties-notes
      required:
      - authority
      - effective_date
      - uuid
      - wage
      - wage_type
      type: object
      x-examples:
        example:
          uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
          authority: State
          wage: "13.0"
          wage_type: Regular
          effective_date: 2022-01-01
          notes: Employers with 6 or more employees
        x-konfig-original-example:
          uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
          authority: State
          wage: "13.0"
          wage_type: Regular
          effective_date: 2022-01-01
          notes: Employers with 6 or more employees
    Notification:
      description: Representation of a notification
      example:
        company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
        actionable: true
        resources:
        - entity_uuid: entity_uuid
          entity_type: entity_type
          reference_type: reference_type
          reference_uuid: reference_uuid
        - entity_uuid: entity_uuid
          entity_type: entity_type
          reference_type: reference_type
          reference_uuid: reference_uuid
        due_at: due_at
        title: "Action required: Additional information needed to process payroll"
        message: "If we do not receive this information as soon as possible, your\
          \ payroll may not be processed on time."
        category: information_request
        published_at: published_at
        uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
      properties:
        title:
          description: The title of the notification. This highlights the actionable
            component of the notification.
          example: "Action required: Additional information needed to process payroll"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Notification-properties-title
        uuid:
          description: Unique identifier of a notification.
          example: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Notification-properties-uuid
        company_uuid:
          description: Unique identifier of the company to which the notification
            belongs.
          example: 88f7cca1-dcad-4d20-84db-7fb80303d69f
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Notification-properties-company_uuid
        message:
          description: The message of the notification. This provides additional context
            for the user and recommends a specific action to resolve the notification.
          example: "If we do not receive this information as soon as possible, your\
            \ payroll may not be processed on time."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Notification-properties-message
        category:
          description: The notification's category.
          example: information_request
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Notification-properties-category
        actionable:
          description: "Indicates whether a notification requires action or not. If\
            \ false, the notification provides critical information only."
          type: boolean
        published_at:
          description: Timestamp of when the notification was published.
          type: string
        due_at:
          description: "Timestamp of when the notification is due. If the notification\
            \ has no due date, this field will be null."
          type: string
        resources:
          description: An array of entities relevant to the notification
          items:
            $ref: '#/components/schemas/Notification_resources_inner'
          type: array
      type: object
      x-examples:
        example:
          title: "Action required: Additional information needed to process payroll"
          uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
          company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
          message: "If we do not receive this information as soon as possible, your\
            \ payroll may not be processed on time."
          category: information_request
          created_at: 2022-01-01T00:00:00.000Z
        x-konfig-original-example:
          title: "Action required: Additional information needed to process payroll"
          uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
          company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
          message: "If we do not receive this information as soon as possible, your\
            \ payroll may not be processed on time."
          category: information_request
          created_at: 2022-01-01T00:00:00.000Z
      x-konfig-is-used-in-successful-response: true
    Event:
      description: Representation of an Event
      example:
        entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
        event_type: employee.bank_account.created
        entity_type: BankAccount
        resource_type: Company
        resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
        uuid: f7397a24-57ad-4fae-b011-d258e8232900
        timestamp: 1686784995
      properties:
        uuid:
          description: Unique identifier for the event.
          example: f7397a24-57ad-4fae-b011-d258e8232900
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-uuid
        event_type:
          description: "Description of the event (e.g., payroll.submitted, or company.form.signed)."
          example: employee.bank_account.created
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-event_type
        resource_type:
          description: Name of the parent resource of the described entity.
          enum:
          - Company
          example: Company
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-resource_type
        resource_uuid:
          description: Unique identifier for the parent resource.
          example: 92a20431-9489-4bde-ad27-6feb20b969d5
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-resource_uuid
        entity_type:
          description: Name of the entity that the event corresponds to.
          example: BankAccount
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-entity_type
        entity_uuid:
          description: Unique identifier for the entity.
          example: 92a20431-9489-4bde-ad27-6feb20b969d5
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-entity_uuid
        timestamp:
          description: Time at which this event was created. Measured in seconds since
            the Unix epoch.
          example: 1686784995
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Event-properties-timestamp
      type: object
      x-examples:
        example:
          uuid: f7397a24-57ad-4fae-b011-d258e8232900
          event_type: employee.bank_account.created
          resource_type: Company
          resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
          entity_type: BankAccount
          entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
          timestamp: 1686784995
        x-konfig-original-example:
          uuid: f7397a24-57ad-4fae-b011-d258e8232900
          event_type: employee.bank_account.created
          resource_type: Company
          resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
          entity_type: BankAccount
          entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
          timestamp: 1686784995
    Invoice-Data:
      description: Representation of a partners invoice data
      example:
        active_companies:
        - company_uuid: company_uuid
          active_contractors: 6
          active_employees: 0
          initial_invoice_period: initial_invoice_period
        - company_uuid: company_uuid
          active_contractors: 6
          active_employees: 0
          initial_invoice_period: initial_invoice_period
      properties:
        active_companies:
          description: The list of companies that are active within the invoice period
          items:
            $ref: '#/components/schemas/Invoice_Data_active_companies_inner'
          type: array
      type: object
      x-examples:
        example:
          active_companies:
          - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
            active_employees: 5
            active_contractors: 3
            initial_invoice_period: 2022-01
          - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
            active_employees: 0
            active_contractors: 1
            initial_invoice_period: 2023-05
        x-konfig-original-example:
          active_companies:
          - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
            active_employees: 5
            active_contractors: 3
            initial_invoice_period: 2022-01
          - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
            active_employees: 0
            active_contractors: 1
            initial_invoice_period: 2023-05
      x-konfig-is-used-in-successful-response: true
    Recovery-Case:
      description: Representation of a recovery case
      example:
        company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
        amount_outstanding: "10499.43"
        payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
        check_date: 2023-10-13
        contractor_payment_uuids:
        - contractor_payment_uuids
        - contractor_payment_uuids
        event_total_amount: "5912.07"
        uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
        original_debit_date: 2023-10-11
        status: open
        latest_error_code: R01
      properties:
        uuid:
          description: Unique identifier of an recovery case
          example: e83d273e-4ae9-4b61-9c71-4030c2f73093
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-uuid
        company_uuid:
          description: Unique identifier of the company to which the recovery case
            belongs
          example: c5e3e3e9-732f-4762-849e-20b5cec9036f
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-company_uuid
        status:
          description: Status of the recovery case
          enum:
          - open
          - redebit_initiated
          - recovered
          - lost
          example: open
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-status
        latest_error_code:
          description: "The latest bank error code for the recovery case. See [this\
            \ article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/)\
            \ for a complete list of ACH return codes."
          example: R01
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-latest_error_code
        original_debit_date:
          description: Date when funds were originally debited from the company's
            bank account
          example: 2023-10-11
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-original_debit_date
        check_date:
          description: Check date for the associated payroll or contractor payments
          example: 2023-10-13
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-check_date
        payroll_uuid:
          description: "The uuid of the associated payroll for which the recovery\
            \ case was created. If the recovery case was created for a contractor\
            \ payment, this field will be null."
          example: 210f2034-fb4a-4059-b109-6c3b5efe499d
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-payroll_uuid
        contractor_payment_uuids:
          description: "The uuids of the associated contractor payments for which\
            \ the recovery case was created. If the recovery case was created for\
            \ a payroll, this field will be null."
          items:
            type: string
          type: array
        amount_outstanding:
          description: Amount outstanding for the recovery case
          example: "10499.43"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-amount_outstanding
        event_total_amount:
          description: Total amount to be debited from the payroll or contractor payments
          example: "5912.07"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Recovery-Case-properties-event_total_amount
      type: object
      x-examples:
        example:
          uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
          company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
          status: open
          latest_error_code: R01
          original_debit_date: 2023-10-11
          check_date: 2023-10-13
          payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
          amount_outstanding: 10499.43
          event_total_amount: 5912.07
        x-konfig-original-example:
          uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
          company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
          status: open
          latest_error_code: R01
          original_debit_date: 2023-10-11
          check_date: 2023-10-13
          payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
          amount_outstanding: 10499.43
          event_total_amount: 5912.07
    Ach-Transaction:
      description: Representation of an ACH transaction
      example:
        company_uuid: "456e7890-e12b-34c5-d678-901234567890,"
        amount: "123.00,"
        payment_direction: "credit,"
        payment_status: "submitted,"
        description: PAY 380654
        transaction_type: "Credit employee pay,"
        uuid: "123e4567-e89b-12d3-a456-426655440000,"
        recipient_type: "Employee,"
        recipient_uuid: "012e3456-f78d-90ab-12cd-345678901234,"
        payment_event_check_date: "2023-10-02,"
        error_code: "null,"
        payment_event_uuid: "789e0123-e45f-67ab-c890-123456789012,"
        payment_event_type: "Payroll,"
        payment_date: "2023-10-17,"
      properties:
        description:
          description: The description of the ACH transaction. Can be used to identify
            the ACH transaction on the recipient's bank statement.
          example: PAY 380654
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-description
        uuid:
          description: Unique identifier of an ACH transaction
          example: "123e4567-e89b-12d3-a456-426655440000,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-uuid
        company_uuid:
          description: Unique identifier of the company to which the ACH transaction
            belongs
          example: "456e7890-e12b-34c5-d678-901234567890,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-company_uuid
        payment_event_type:
          description: The type of payment event associated with the ACH transaction
          enum:
          - Payroll
          - ContractorPayment
          example: "Payroll,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_type
        payment_event_uuid:
          description: Unique identifier for the payment event associated with the
            ACH transaction
          example: "789e0123-e45f-67ab-c890-123456789012,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_uuid
        recipient_type:
          description: The type of recipient associated with the ACH transaction
          enum:
          - Employee
          - Contractor
          example: "Employee,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-recipient_type
        recipient_uuid:
          description: Unique identifier for the recipient associated with the ACH
            transaction
          example: "012e3456-f78d-90ab-12cd-345678901234,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-recipient_uuid
        error_code:
          description: "The error code associated with the ACH transaction, if any.\
            \ If there is no error on the ACH transaction, this field will be nil.\
            \ See [this article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/)\
            \ for a complete list of ACH return codes."
          example: "null,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-error_code
        transaction_type:
          description: The type of transaction associated with the ACH transaction
          example: "Credit employee pay,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-transaction_type
        payment_status:
          description: The status of the ACH transaction
          enum:
          - unsubmitted
          - submitted
          - successful
          - failed
          example: "submitted,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_status
        payment_direction:
          description: The direction of the payment
          enum:
          - credit
          - debit
          example: "credit,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_direction
        payment_event_check_date:
          description: The date of the payment event check associated with the ACH
            transaction
          example: "2023-10-02,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_check_date
        payment_date:
          description: The date of the payment associated with the ACH transaction
          example: "2023-10-17,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_date
        amount:
          description: The amount of money moved by the ACH transaction. This amount
            is always non-negative.
          example: "123.00,"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Ach-Transaction-properties-amount
      type: object
      x-examples:
        example:
          description: PAY 380654
          uuid: "123e4567-e89b-12d3-a456-426655440000,"
          company_uuid: "456e7890-e12b-34c5-d678-901234567890,"
          payment_event_type: "Payroll,"
          payment_event_uuid: "789e0123-e45f-67ab-c890-123456789012,"
          recipient_type: "Employee,"
          recipient_uuid: "012e3456-f78d-90ab-12cd-345678901234,"
          error_code: "null,"
          transaction_type: "Credit employee pay,"
          payment_status: "submitted,"
          payment_direction: "credit,"
          payment_event_check_date: "2023-10-02,"
          payment_date: "2023-10-17,"
          amount: "123.00,"
        x-konfig-original-example:
          description: PAY 380654
          uuid: "123e4567-e89b-12d3-a456-426655440000,"
          company_uuid: "456e7890-e12b-34c5-d678-901234567890,"
          payment_event_type: "Payroll,"
          payment_event_uuid: "789e0123-e45f-67ab-c890-123456789012,"
          recipient_type: "Employee,"
          recipient_uuid: "012e3456-f78d-90ab-12cd-345678901234,"
          error_code: "null,"
          transaction_type: "Credit employee pay,"
          payment_status: "submitted,"
          payment_direction: "credit,"
          payment_event_check_date: "2023-10-02,"
          payment_date: "2023-10-17,"
          amount: "123.00,"
    IntrospectionExchangeRefreshTokenRequest:
      description: ""
      example:
        refresh_token: refresh_token
        grant_type: grant_type
        client_secret: client_secret
        redirect_uri: redirect_uri
        client_id: client_id
      properties:
        client_id:
          description: Your client id
          type: string
        client_secret:
          description: Your client secret
          type: string
        redirect_uri:
          description: The redirect URI you set up via the Developer Portal
          type: string
        refresh_token:
          description: The `refresh_token` being exchanged for an access token code
          type: string
        grant_type:
          description: this should be the literal string 'refresh_token'
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      - refresh_token
      type: object
    CompaniesCreatePartnerManagedCompanyRequest:
      example:
        company:
          name: name
          ein: ein
          trade_name: trade_name
        user:
          phone: phone
          last_name: last_name
          first_name: first_name
          email: email
      properties:
        user:
          $ref: '#/components/schemas/CompaniesCreatePartnerManagedCompanyRequest_user'
        company:
          $ref: '#/components/schemas/CompaniesCreatePartnerManagedCompanyRequest_company'
      required:
      - company
      - user
      type: object
    CompaniesMigrateToEmbeddedPayrollRequest:
      example:
        ip_address: ip_address
        email: email
        external_user_id: external_user_id
      properties:
        email:
          description: "Email of the company signatory who is authorized to accept\
            \ our [Terms of Service](https://flows.gusto.com/terms) and migration\
            \ decision. You can retrieve the signatory email from the `GET /v/1/companies/{company_id}/signatories`\
            \ endpoint."
          type: string
        ip_address:
          description: The IP address of the signatory who viewed and accepted the
            Terms of Service.
          type: string
        external_user_id:
          description: The signatory's user ID on your platform.
          type: string
      required:
      - email
      - external_user_id
      - ip_address
      type: object
    CompaniesAcceptTermsOfServiceRequest:
      example:
        ip_address: ip_address
        email: email
        external_user_id: external_user_id
      properties:
        email:
          description: "The user's email address on Gusto. You can retrieve the user's\
            \ email via company's `/admins`, `/employees`, `/signatories`, and `/contractors`\
            \ endpoints."
          type: string
        ip_address:
          description: The IP address of the user who viewed and accepted the Terms
            of Service.
          type: string
        external_user_id:
          description: The user ID on your platform.
          type: string
      required:
      - email
      - external_user_id
      - ip_address
      type: object
    CompaniesGetTermsOfServiceStatusRequest:
      example:
        email: email
      properties:
        email:
          description: "The user's email address on Gusto. You can retrieve the user's\
            \ email via company's `/admins`, `/employees`, `/signatories`, and `/contractors`\
            \ endpoints."
          type: string
      required:
      - email
      type: object
    FederalTaxDetailsUpdateAttributesRequest:
      example:
        legal_name: legal_name
        ein: ein
        taxable_as_scorp: true
        version: version
        tax_payer_type: C-Corporation
        filing_form: filing_form
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        legal_name:
          description: The legal name of the company
          type: string
        ein:
          description: The EIN of of the company
          type: string
        tax_payer_type:
          description: What type of tax entity the company is
          enum:
          - C-Corporation
          - S-Corporation
          - Sole proprietor
          - LLC
          - LLP
          - Limited partnership
          - Co-ownership
          - Association
          - Trusteeship
          - General partnership
          - Joint venture
          - Non-Profit
          type: string
        filing_form:
          description: |-
            The form used by the company for federal tax filing. One of:
            - 941 (Quarterly federal tax return)
            - 944 (Annual federal tax return)
          type: string
        taxable_as_scorp:
          description: Whether this company should be taxed as an S-Corporation
          type: boolean
      required:
      - version
      type: object
    IndustrySelectionUpdateCompanyIndustrySelectionRequest:
      description: ""
      example:
        naics_code: naics_code
        sic_codes:
        - sic_codes
        - sic_codes
        title: title
      properties:
        title:
          description: Industry title
          type: string
        naics_code:
          description: North American Industry Classification System (NAICS) is used
            to classify businesses with a six digit number based on the primary type
            of work the business performs
          type: string
        sic_codes:
          description: "A list of Standard Industrial Classification (SIC) codes,\
            \ which are four digit number that categorize the industries that companies\
            \ belong to based on their business activities. If sic_codes is not passed\
            \ in, we will perform an internal lookup with naics_code."
          items:
            type: string
          type: array
      required:
      - naics_code
      - title
      type: object
    CompaniesCreateAdminRequest:
      description: ""
      example:
        last_name: last_name
        first_name: first_name
        email: email
      properties:
        first_name:
          description: The first name of the admin.
          type: string
        last_name:
          description: The last name of the admin.
          type: string
        email:
          description: "The email of the admin for Gusto's system. If the email matches\
            \ an existing user, this will create an admin account for them."
          type: string
      required:
      - email
      - first_name
      - last_name
      type: object
    SignatoriesCreateSignatoryWithCompleteInformationRequest:
      description: ""
      example:
        birthday: birthday
        home_address:
          zip: zip
          street_1: street_1
          city: city
          street_2: street_2
          state: state
        phone: phone
        middle_initial: middle_initial
        last_name: last_name
        title: title
        first_name: first_name
        email: email
        ssn: ssn
      properties:
        title:
          type: string
        ssn:
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
        birthday:
          type: string
        home_address:
          $ref: '#/components/schemas/SignatoriesCreateSignatoryWithCompleteInformationRequest_home_address'
      required:
      - birthday
      - email
      - first_name
      - home_address
      - last_name
      - phone
      - ssn
      - title
      type: object
    SignatoriesCreateInviteRequest:
      example:
        last_name: last_name
        title: title
        first_name: first_name
        email: email
      properties:
        title:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
      required:
      - email
      type: object
    SignatoriesUpdateRequest:
      example:
        birthday: birthday
        home_address:
          zip: zip
          street_1: street_1
          city: city
          street_2: street_2
          state: state
        phone: phone
        middle_initial: middle_initial
        last_name: last_name
        title: title
        version: version
        first_name: first_name
        ssn: ssn
      properties:
        title:
          type: string
        version:
          description: The current version of the object. See the versioning guide
            for information on how to use this field.
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        phone:
          type: string
        birthday:
          type: string
        ssn:
          type: string
        home_address:
          $ref: '#/components/schemas/SignatoriesUpdateRequest_home_address'
      type: object
    FlowsGenerateLinkRequest:
      example:
        entity_uuid: entity_uuid
        flow_type: flow_type
        entity_type: Company
      properties:
        flow_type:
          description: flow type
          type: string
        entity_uuid:
          description: "UUID of the target entity applicable to the flow. This field\
            \ is optional for company flows, please refer to the flow_types table\
            \ above for more details."
          type: string
        entity_type:
          description: "the type of target entity applicable to the flow. This field\
            \ is optional for company flows, please refer to the flow_types table\
            \ above for more details."
          enum:
          - Company
          - Employee
          type: string
      required:
      - flow_type
      type: object
    LocationsCreateCompanyLocationRequest:
      description: ""
      example:
        zip: zip
        mailing_address: true
        country: USA
        street_1: street_1
        city: city
        street_2: street_2
        filing_address: true
        phone_number: phone_number
        state: state
      properties:
        phone_number:
          pattern: "[0-9]{10}"
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          default: USA
          example: USA
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LocationsCreateCompanyLocationRequest-properties-country
        mailing_address:
          description: Specify if this location is the company's mailing address.
          type: boolean
        filing_address:
          description: Specify if this location is the company's filing address.
          type: boolean
      required:
      - city
      - phone_number
      - state
      - street_1
      - zip
      type: object
    LocationsCreateCompanyLocationRequest1:
      description: ""
      properties:
        phone_number:
          minLength: 1
          type: string
        street_1:
          minLength: 1
          type: string
        street_2:
          minLength: 1
          nullable: true
          type: string
        city:
          minLength: 1
          type: string
        state:
          minLength: 1
          type: string
        zip:
          minLength: 1
          type: string
        country:
          minLength: 1
          type: string
      required:
      - city
      - country
      - phone_number
      - state
      - street_1
      - street_2
      - zip
      type: object
    LocationsUpdateLocationRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/LocationsUpdateLocationRequest_allOf'
    BankAccountsCreateVerificationDepositsRequest:
      description: ""
      example:
        account_number: account_number
        account_type: Checking
        routing_number: routing_number
      properties:
        routing_number:
          description: The bank routing number
          nullable: false
          type: string
        account_number:
          description: The bank account number
          nullable: false
          type: string
        account_type:
          description: The bank account type
          enum:
          - Checking
          - Savings
          nullable: false
          type: string
      type: object
    BankAccountsVerifyMicroDepositsRequest:
      description: ""
      example:
        deposit_2: 6.027456183070403
        deposit_1: 0.8008281904610115
      properties:
        deposit_1:
          description: The dollar amount of the first micro-deposit
          nullable: false
          type: number
        deposit_2:
          description: The dollar amount of the second micro-deposit
          nullable: false
          type: number
      type: object
    ExternalPayrollsCreateNewPayrollRequest:
      description: ""
      example:
        check_date: check_date
        payment_period_start_date: payment_period_start_date
        payment_period_end_date: payment_period_end_date
      properties:
        check_date:
          description: External payroll's check date.
          type: string
        payment_period_start_date:
          description: External payroll's pay period start date.
          type: string
        payment_period_end_date:
          description: External payroll's pay period end date.
          type: string
      required:
      - check_date
      - payment_period_end_date
      - payment_period_start_date
      type: object
    ExternalPayrollsUpdatePayrollItemsRequest:
      example:
        external_payroll_items:
        - benefits:
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          earnings:
          - hours: hours
            amount: amount
            earning_id: 0
            earning_type: CompanyPayType
          - hours: hours
            amount: amount
            earning_id: 0
            earning_type: CompanyPayType
          employee_uuid: employee_uuid
          taxes:
          - amount: amount
            tax_id: 1
          - amount: amount
            tax_id: 1
        - benefits:
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          - employee_deduction_amount: employee_deduction_amount
            benefit_id: 6
            company_contribution_amount: company_contribution_amount
          earnings:
          - hours: hours
            amount: amount
            earning_id: 0
            earning_type: CompanyPayType
          - hours: hours
            amount: amount
            earning_id: 0
            earning_type: CompanyPayType
          employee_uuid: employee_uuid
          taxes:
          - amount: amount
            tax_id: 1
          - amount: amount
            tax_id: 1
        replace_fields: true
      properties:
        replace_fields:
          description: "Patch update external payroll items when set to true, otherwise\
            \ it will overwrite the previous changes."
          type: boolean
        external_payroll_items:
          items:
            $ref: '#/components/schemas/ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner'
          type: array
      type: object
    ExternalPayrollsUpdateTaxLiabilitiesRequest:
      example:
        liability_selections:
        - unpaid_liability_amount: 6.027456183070403
          last_unpaid_external_payroll_uuid: last_unpaid_external_payroll_uuid
          tax_id: 0
        - unpaid_liability_amount: 6.027456183070403
          last_unpaid_external_payroll_uuid: last_unpaid_external_payroll_uuid
          tax_id: 0
      properties:
        liability_selections:
          items:
            $ref: '#/components/schemas/ExternalPayrollsUpdateTaxLiabilitiesRequest_liability_selections_inner'
          type: array
      type: object
    PaymentConfigsUpdateCompanyPaymentConfigsRequest:
      description: ""
      example:
        payment_speed: 1-day
        fast_payment_limit: fast_payment_limit
      properties:
        fast_payment_limit:
          description: Fast payment limit. This limit is an aggregate of all fast
            payrolls amount.
          type: string
        payment_speed:
          description: "Gusto Embedded supports three payment speeds (1-day, 2-day,\
            \ and 4-day). For next-day payments, funds are deposited in your team's\
            \ bank account by the end of the next business day. Most people will see\
            \ the funds arrive the next afternoon, but payments may arrive as late\
            \ as the end of the business day."
          enum:
          - 1-day
          - 2-day
          - 4-day
          type: string
      required:
      - fast_payment_limit
      - payment_speed
      type: object
    PaySchedulesCreateNewRequest:
      description: ""
      example:
        day_2: 6
        day_1: 0
        anchor_pay_date: 2020-05-15
        custom_name: custom_name
        anchor_end_of_pay_period: 2020-05-08
        frequency: Every week
      properties:
        frequency:
          description: The frequency that employees on this pay schedule are paid
            with Gusto.
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        anchor_pay_date:
          description: The first date that employees on this pay schedule are paid
            with Gusto.
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_pay_date
        anchor_end_of_pay_period:
          description: The last date of the first pay period. This can be the same
            date as the anchor pay date.
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_end_of_pay_period
        day_1:
          description: An integer between 1 and 31 indicating the first day of the
            month that employees are paid. This field is only relevant for pay schedules
            with the “Twice per month” and “Monthly” frequencies. It will be null
            for pay schedules with other frequencies.
          nullable: true
          type: integer
        day_2:
          description: "An integer between 1 and 31 indicating the second day of the\
            \ month that employees are paid. This field is the second pay date for\
            \ pay schedules with the \"Twice per month\" frequency. For semi-monthly\
            \ pay schedules, set this field to 31. For months shorter than 31 days,\
            \ we will set the second pay date to the last day of the month. It will\
            \ be null for pay schedules with other frequencies."
          nullable: true
          type: integer
        custom_name:
          description: "A custom pay schedule name, defaults to the pay frequency\
            \ description."
          type: string
      required:
      - anchor_end_of_pay_period
      - anchor_pay_date
      - frequency
      type: object
    PaySchedulesUpdatePayScheduleRequest:
      description: ""
      example:
        day_2: 6
        day_1: 0
        anchor_pay_date: 2020-05-15
        custom_name: custom_name
        auto_pilot: true
        version: version
        anchor_end_of_pay_period: 2020-05-08
        frequency: Every week
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        frequency:
          description: The frequency that employees on this pay schedule are paid
            with Gusto.
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        anchor_pay_date:
          description: The first date that employees on this pay schedule are paid
            with Gusto.
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_pay_date
        anchor_end_of_pay_period:
          description: The last date of the first pay period. This can be the same
            date as the anchor pay date.
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_end_of_pay_period
        day_1:
          description: An integer between 1 and 31 indicating the first day of the
            month that employees are paid. This field is only relevant for pay schedules
            with the “Twice per month” and “Monthly” frequencies. It will be null
            for pay schedules with other frequencies.
          nullable: true
          type: integer
        day_2:
          description: "An integer between 1 and 31 indicating the second day of the\
            \ month that employees are paid. This field is the second pay date for\
            \ pay schedules with the \"Twice per month\" frequency. For semi-monthly\
            \ pay schedules, set this field to 31. For months shorter than 31 days,\
            \ we will set the second pay date to the last day of the month. It will\
            \ be null for pay schedules with other frequencies."
          nullable: true
          type: integer
        custom_name:
          description: A custom pay schedule name.
          type: string
        auto_pilot:
          description: "With Autopilot® enabled, payroll will run automatically one\
            \ day before your payroll deadlines."
          type: boolean
      required:
      - version
      type: object
    EmployeesListCompanyEmployeesRequest:
      properties: {}
      type: object
    EmployeesCreateEmployeeRequest:
      description: ""
      example:
        date_of_birth: date_of_birth
        middle_initial: middle_initial
        last_name: last_name
        first_name: first_name
        email: email
        self_onboarding: true
        ssn: ssn
      properties:
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
        email:
          type: string
        ssn:
          pattern: "[0-9]{9}"
          type: string
        self_onboarding:
          description: "If true, employee is expected to self-onboard. If false, payroll\
            \ admin is expected to enter in the employee's onboarding information"
          type: boolean
      required:
      - first_name
      - last_name
      type: object
    DepartmentsCreateDepartmentRequest:
      example:
        title: title
      properties:
        title:
          type: string
      type: object
    DepartmentsUpdateDepartmentRequest:
      example:
        title: title
        version: version
      properties:
        title:
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
      required:
      - version
      type: object
    DepartmentsAddPeopleToDepartmentRequest:
      example:
        contractors:
        - uuid: uuid
        - uuid: uuid
        employees:
        - uuid: uuid
        - uuid: uuid
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        employees:
          description: Array of employees to add to the department
          items:
            $ref: '#/components/schemas/DepartmentsAddPeopleToDepartmentRequest_employees_inner'
          type: array
        contractors:
          description: Array of contractors to add to the department
          items:
            $ref: '#/components/schemas/DepartmentsAddPeopleToDepartmentRequest_employees_inner'
          type: array
      type: object
    DepartmentsRemovePeopleFromDepartmentRequest:
      example:
        contractors:
        - uuid: uuid
        - uuid: uuid
        employees:
        - uuid: uuid
        - uuid: uuid
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        employees:
          description: Array of employees to remove from a department
          items:
            $ref: '#/components/schemas/DepartmentsAddPeopleToDepartmentRequest_employees_inner'
          type: array
        contractors:
          description: Array of contractors to remove from a department
          items:
            $ref: '#/components/schemas/DepartmentsAddPeopleToDepartmentRequest_employees_inner'
          type: array
      type: object
    EmployeesUpdateEmployeeRequest:
      description: ""
      example:
        date_of_birth: date_of_birth
        two_percent_shareholder: true
        middle_initial: middle_initial
        last_name: last_name
        version: version
        first_name: first_name
        email: email
        ssn: ssn
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
        email:
          type: string
        ssn:
          pattern: "[0-9]{9}"
          type: string
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          type: boolean
      required:
      - version
      type: object
    EmployeeEmploymentsCreateTerminationRequest:
      description: ""
      example:
        effective_date: effective_date
        run_termination_payroll: true
      properties:
        effective_date:
          description: The employee's last day of work.
          type: string
        run_termination_payroll:
          description: "If true, the employee should receive their final wages via\
            \ an off-cycle payroll. If false, they should receive their final wages\
            \ on their current pay schedule."
          type: boolean
      required:
      - effective_date
      type: object
    EmployeeEmploymentsUpdateTerminationRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/EmployeeEmploymentsUpdateTerminationRequest_allOf'
    EmployeeEmploymentsUpdateRehireRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/Rehire-Body'
    EmployeeAddressesCreateHomeAddressRequest:
      description: ""
      example:
        zip: zip
        street_1: street_1
        courtesy_withholding: true
        city: city
        street_2: street_2
        effective_date: 2000-01-23
        state: state
      properties:
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        effective_date:
          format: date
          type: string
        courtesy_withholding:
          type: boolean
      required:
      - version
      type: object
    EmployeeAddressesUpdateHomeAddressRequest:
      description: ""
      example:
        zip: zip
        street_1: street_1
        courtesy_withholding: true
        city: city
        street_2: street_2
        effective_date: 2000-01-23
        state: state
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        effective_date:
          format: date
          type: string
        courtesy_withholding:
          type: boolean
      required:
      - version
      type: object
    EmployeeAddressesCreateWorkAddressRequest:
      description: ""
      example:
        effective_date: 2000-01-23
        location_uuid: location_uuid
      properties:
        location_uuid:
          description: Reference to a company location
          type: string
        effective_date:
          description: Date the employee began working at the company location
          format: date
          type: string
      type: object
    EmployeeAddressesUpdateWorkAddressRequest:
      description: ""
      example:
        effective_date: 2000-01-23
        version: version
        location_uuid: location_uuid
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        location_uuid:
          description: Reference to a company location
          type: string
        effective_date:
          format: date
          type: string
      type: object
    EmployeesUpdateOnboardingStatusRequest:
      example:
        onboarding_status: onboarding_status
      properties:
        onboarding_status:
          description: The updated onboarding status for the employee
          type: string
      required:
      - onboarding_status
      type: object
    EmployeeTaxSetupUpdateFederalTaxesRequest:
      description: ""
      example:
        filing_status: filing_status
        other_income: other_income
        dependents_amount: dependents_amount
        extra_withholding: extra_withholding
        deductions: deductions
        version: version
        two_jobs: true
        w4_data_type: w4_data_type
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        filing_status:
          type: string
        extra_withholding:
          nullable: true
          type: string
        two_jobs:
          type: boolean
        dependents_amount:
          type: string
        other_income:
          type: string
        deductions:
          type: string
        w4_data_type:
          type: string
      required:
      - version
      type: object
    EmployeeTaxSetupUpdateStateTaxesRequest:
      description: ""
      example:
        states:
        - questions:
          - answers:
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            key: key
          - answers:
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            key: key
          state: state
        - questions:
          - answers:
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            key: key
          - answers:
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            - valid_up_to: ""
              valid_from: valid_from
              value: value
            key: key
          state: state
      properties:
        states:
          items:
            $ref: '#/components/schemas/EmployeeTaxSetupUpdateStateTaxesRequest_states_inner'
          type: array
          uniqueItems: true
      required:
      - states
      type: object
      x-examples:
        example-1:
          states:
          - state: CA
            questions:
            - key: filing_status
              answers:
              - value: M
                valid_from: 2010-01-01
            - key: withholding_allowance
              answers:
              - value: 2
                valid_from: 2010-01-01
            - key: additional_withholding
              answers:
              - value: "25.0"
                valid_from: 2010-01-01
    EmployeePaymentMethodListBankAccountsRequest:
      properties: {}
      type: object
    EmployeePaymentMethodCreateBankAccountRequest:
      example:
        account_number: account_number
        account_type: Checking
        name: name
        routing_number: routing_number
      properties:
        name:
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        account_type:
          enum:
          - Checking
          - Savings
          type: string
      required:
      - account_number
      - account_type
      - name
      - routing_number
      type: object
    EmployeePaymentMethodUpdatePaymentMethodRequest:
      example:
        splits:
        - split_amount: 6
          name: name
          priority: 0
          uuid: uuid
        - split_amount: 6
          name: name
          priority: 0
          uuid: uuid
        split_by: Amount
        type: Direct Deposit
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        type:
          description: "The payment method type. If type is Check, then split_by and\
            \ splits do not need to be populated. If type is Direct Deposit, split_by\
            \ and splits are required."
          enum:
          - Direct Deposit
          - Check
          type: string
        split_by:
          description: "Describes how the payment will be split. If split_by is Percentage,\
            \ then the split amounts must add up to exactly 100. If split_by is Amount,\
            \ then the last split amount must be nil to capture the remainder."
          enum:
          - Amount
          - Percentage
          type: string
        splits:
          items:
            $ref: '#/components/schemas/EmployeePaymentMethodUpdatePaymentMethodRequest_splits_inner'
          type: array
      required:
      - type
      - version
      type: object
    JobsAndCompensationsCreateJobRequest:
      description: ""
      example:
        state_wc_class_code: state_wc_class_code
        two_percent_shareholder: true
        state_wc_covered: true
        hire_date: hire_date
        title: title
      properties:
        title:
          description: The job title
          type: string
        hire_date:
          description: The date when the employee was hired or rehired for the job.
          type: string
        two_percent_shareholder:
          description: Whether the employee owns at least 2% of the company.
          type: boolean
        state_wc_covered:
          description: Whether this job is eligible for workers' compensation coverage
            in the state of Washington (WA).
          type: boolean
        state_wc_class_code:
          description: "The risk class code for workers' compensation in Washington\
            \ state. Please visit [Washington state's Risk Class page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)\
            \ to learn more."
          type: string
      required:
      - hire_date
      - title
      type: object
    JobsAndCompensationsUpdateJobRequest:
      description: ""
      example:
        state_wc_class_code: state_wc_class_code
        two_percent_shareholder: true
        state_wc_covered: true
        hire_date: hire_date
        title: title
        version: version
      properties:
        title:
          description: The job title
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        hire_date:
          description: The date when the employee was hired or rehired for the job.
          type: string
        two_percent_shareholder:
          description: Whether the employee owns at least 2% of the company.
          type: boolean
        state_wc_covered:
          description: Whether this job is eligible for workers' compensation coverage
            in the state of Washington (WA).
          type: boolean
        state_wc_class_code:
          description: "The risk class code for workers' compensation in Washington\
            \ state. Please visit [Washington state's Risk Class page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)\
            \ to learn more."
          type: string
      required:
      - version
      type: object
    JobsAndCompensationsCreateCompensationRequest:
      description: ""
      example:
        rate: rate
        flsa_status: Nonexempt
        effective_date: effective_date
        payment_unit: Hour
        adjust_for_minimum_wage: true
        minimum_wages:
        - uuid: uuid
        - uuid: uuid
      properties:
        rate:
          description: The dollar amount paid per payment unit.
          type: string
        payment_unit:
          description: "The unit accompanying the compensation rate. If the employee\
            \ is an owner, rate should be 'Paycheck'."
          enum:
          - Hour
          - Week
          - Month
          - Year
          - Paycheck
          type: string
        effective_date:
          description: The date when the compensation takes effect.
          type: string
        flsa_status:
          $ref: '#/components/schemas/Flsa-Status-Type'
        adjust_for_minimum_wage:
          description: Determines whether the compensation should be adjusted for
            minimum wage. Only applies to Nonexempt employees.
          type: boolean
        minimum_wages:
          items:
            $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationRequest_minimum_wages_inner'
          type: array
      required:
      - flsa_status
      - payment_unit
      type: object
    JobsAndCompensationsUpdateCompensationRequest:
      description: ""
      example:
        rate: rate
        flsa_status: Nonexempt
        payment_unit: Hour
        adjust_for_minimum_wage: true
        version: version
        minimum_wages:
        - uuid: uuid
        - uuid: uuid
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        rate:
          description: The dollar amount paid per payment unit.
          type: string
        payment_unit:
          description: "The unit accompanying the compensation rate. If the employee\
            \ is an owner, rate should be 'Paycheck'."
          enum:
          - Hour
          - Week
          - Month
          - Year
          - Paycheck
          type: string
        flsa_status:
          $ref: '#/components/schemas/Flsa-Status-Type'
        adjust_for_minimum_wage:
          description: Determines whether the compensation should be adjusted for
            minimum wage. Only applies to Nonexempt employees.
          type: boolean
        minimum_wages:
          items:
            $ref: '#/components/schemas/JobsAndCompensationsCreateCompensationRequest_minimum_wages_inner'
          type: array
      required:
      - version
      type: object
    EarningTypesCreateCustomEarningTypeRequest:
      example:
        name: name
      properties:
        name:
          description: The name of the custom earning type.
          type: string
      required:
      - name
      type: object
    EarningTypesUpdateTypeRequest:
      example:
        name: name
      properties:
        name:
          description: The name of the custom earning type.
          type: string
      type: object
    ContractorsCreateNewContractorRequest:
      allOf:
      - $ref: '#/components/schemas/Contractor-Body'
      - required:
        - start_date
        - type
        - wage_type
    ContractorsUpdateContractorRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/Contractor-Body'
    ContractorPaymentMethodCreateBankAccountRequest:
      example:
        account_number: account_number
        account_type: Checking
        name: name
        routing_number: routing_number
      properties:
        name:
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        account_type:
          enum:
          - Checking
          - Savings
          type: string
      required:
      - account_number
      - account_type
      - name
      - routing_number
      type: object
    WebhooksCreateSubscriptionRequest:
      description: ""
      example:
        subscription_types:
        - BankAccount
        - BankAccount
        url: url
      properties:
        url:
          type: string
        subscription_types:
          items:
            enum:
            - BankAccount
            - Company
            - CompanyBenefit
            - Contractor
            - ContractorPayment
            - Employee
            - EmployeeBenefit
            - EmployeeJobCompensation
            - ExternalPayroll
            - Form
            - Location
            - Notification
            - Payroll
            - PaySchedule
            - Signatory
            type: string
          type: array
      required:
      - subscription_types
      - url
      type: object
    WebhooksUpdateSubscriptionRequest:
      description: ""
      example:
        subscription_types:
        - BankAccount
        - BankAccount
      properties:
        subscription_types:
          items:
            enum:
            - BankAccount
            - Company
            - CompanyBenefit
            - Contractor
            - ContractorPayment
            - Employee
            - EmployeeBenefit
            - EmployeeJobCompensation
            - ExternalPayroll
            - Form
            - Location
            - Notification
            - Payroll
            - PaySchedule
            - Signatory
            type: string
          type: array
      required:
      - subscription_types
      type: object
    WebhooksVerifySubscriptionTokenRequest:
      description: ""
      example:
        verification_token: verification_token
      properties:
        verification_token:
          description: The token POSTed to the Subscription URL.
          type: string
      required:
      - verification_token
      type: object
    ContractorFormsCreate1099FormRequest:
      example:
        contractor_id: contractor_id
        year: 0
      properties:
        contractor_id:
          description: The contractor UUID.
          type: string
        year:
          description: |
            Must be equal to or more recent than 2015. If not specified, defaults to the previous year.
          type: integer
      required:
      - contractor_id
      type: object
    EmployeeFormsGenerateW2DocumentRequest:
      example:
        year: 0
        employee_id: employee_id
      properties:
        employee_id:
          description: The employee UUID.
          type: string
        year:
          description: |
            Must be equal to or more recent than 2015. If not specified, defaults to the previous year.
          type: integer
      required:
      - employee_id
      type: object
    ContractorPaymentMethodUpdateBankAccountRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/ContractorPaymentMethodUpdateBankAccountRequest_allOf'
    ContractorsChangeOnboardingStatusRequest:
      example:
        onboarding_status: onboarding_completed
      properties:
        onboarding_status:
          default: onboarding_completed
          description: The updated onboarding status for the employee
          enum:
          - onboarding_completed
          example: onboarding_completed
          type: string
          x-konfig-original-example: onboarding_completed
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorsChangeOnboardingStatusRequest-properties-onboarding_status
      required:
      - onboarding_status
      type: object
    ContractorsUpdateAddressRequest:
      allOf:
      - $ref: '#/components/schemas/Versionable-Required'
      - $ref: '#/components/schemas/ContractorsUpdateAddressRequest_allOf'
    PayrollsCreateOffCyclePayrollRequest:
      example:
        end_date: end_date
        off_cycle: true
        withholding_pay_period: Every week
        fixed_withholding_rate: true
        check_date: check_date
        skip_regular_deductions: true
        pay_schedule_uuid: pay_schedule_uuid
        employee_uuids:
        - employee_uuids
        - employee_uuids
        off_cycle_reason: Bonus
        start_date: start_date
      properties:
        off_cycle:
          description: Whether it is an off cycle payroll.
          type: boolean
        off_cycle_reason:
          description: An off cycle payroll reason. Select one from the following
            list.
          enum:
          - Bonus
          - Correction
          - Dismissed employee
          - Transition from old pay schedule
          type: string
        start_date:
          description: Pay period start date.
          type: string
        end_date:
          description: Pay period end date.
          type: string
        pay_schedule_uuid:
          description: A pay schedule is required for Transition from old pay schedule
            payroll to identify the matching transition pay period.
          type: string
        employee_uuids:
          description: A list of employee uuids to include on the payroll.
          items:
            type: string
          type: array
        check_date:
          description: Payment date.
          type: string
        withholding_pay_period:
          description: The payment schedule tax rate the payroll is based on
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          - Quarterly
          - Semiannually
          - Annually
          type: string
        skip_regular_deductions:
          description: Block regular deductions and contributions for this payroll.
          type: boolean
        fixed_withholding_rate:
          description: "Enable taxes to be withheld at the IRS's required rate of\
            \ 22% for federal income taxes. State income taxes will be taxed at the\
            \ state's supplemental tax rate. Otherwise, we'll sum the entirety of\
            \ the employee's wages and withhold taxes on the entire amount at the\
            \ rate for regular wages."
          type: boolean
      required:
      - end_date
      - off_cycle
      - off_cycle_reason
      - start_date
      type: object
    PayrollsUpdatePayrollByIdRequest:
      example:
        employee_compensations:
        - excluded: true
          hourly_compensations:
          - job_uuid: 6
            hours: hours
            name: name
          - job_uuid: 6
            hours: hours
            name: name
          employee_uuid: employee_uuid
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
            policy_uuid: policy_uuid
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
            policy_uuid: policy_uuid
          memo: memo
          fixed_compensations:
          - job_uuid: 0
            amount: amount
            name: name
          - job_uuid: 0
            amount: amount
            name: name
          version: version
          payment_method: Direct Deposit
        - excluded: true
          hourly_compensations:
          - job_uuid: 6
            hours: hours
            name: name
          - job_uuid: 6
            hours: hours
            name: name
          employee_uuid: employee_uuid
          paid_time_off:
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
            policy_uuid: policy_uuid
          - hours: hours
            final_payout_unused_hours_input: final_payout_unused_hours_input
            name: name
            policy_uuid: policy_uuid
          memo: memo
          fixed_compensations:
          - job_uuid: 0
            amount: amount
            name: name
          - job_uuid: 0
            amount: amount
            name: name
          version: version
          payment_method: Direct Deposit
      properties:
        employee_compensations:
          items:
            $ref: '#/components/schemas/PayrollsUpdatePayrollByIdRequest_employee_compensations_inner'
          type: array
      required:
      - employee_compensations
      type: object
    TimeOffPoliciesCalculateAccruingTimeOffHoursRequest:
      description: ""
      example:
        double_overtime_hours_worked: 1.4658129805029452
        regular_hours_worked: 0.8008281904610115
        overtime_hours_worked: 6.027456183070403
        pto_hours_used: 5.962133916683182
        sick_hours_used: 5.637376656633329
      properties:
        regular_hours_worked:
          description: regular hours worked in this pay period
          type: number
        overtime_hours_worked:
          description: overtime hours worked in this pay period
          type: number
        double_overtime_hours_worked:
          description: double overtime hours worked in this pay period
          type: number
        pto_hours_used:
          description: paid time off hours used in this pay period
          type: number
        sick_hours_used:
          description: sick hours used in this pay period
          type: number
      type: object
    PayrollsSkipPayrollRequest:
      description: ""
      example:
        end_date: end_date
        payroll_type: Regular
        pay_schedule_uuid: pay_schedule_uuid
        employee_uuids:
        - employee_uuids
        - employee_uuids
        start_date: start_date
      properties:
        payroll_type:
          description: Payroll type
          enum:
          - Regular
          - Hired employee
          - Dismissed employee
          - Transition from old pay schedule
          type: string
        start_date:
          description: Pay period start date
          type: string
        end_date:
          description: Pay period end date
          type: string
        pay_schedule_uuid:
          description: The UUID of the pay schedule
          type: string
        employee_uuids:
          description: An array of employees. This field is only applicable to new
            hire payroll and termination payroll
          items:
            type: string
          type: array
      required:
      - payroll_type
      type: object
    PayrollsCalculateGrossUpRequest:
      description: ""
      example:
        net_pay: net_pay
        employee_uuid: employee_uuid
      properties:
        employee_uuid:
          description: Employee UUID
          type: string
        net_pay:
          description: Employee net earnings
          type: string
      required:
      - employee_uuid
      - net_pay
      type: object
    ContractorPaymentsCreatePaymentRequest:
      example:
        date: 2020-01-01T00:00:00.000+00:00
        hours: 40
        bonus: 500
        reimbursement: 20
        contractor_uuid: contractor_uuid
        payment_method: Direct Deposit
        wage: 5000
      properties:
        contractor_uuid:
          description: The contractor receiving the payment
          type: string
        date:
          description: The contractor receiving the payment
          example: 2020-01-01
          format: date
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-date
        payment_method:
          default: Direct Deposit
          enum:
          - Direct Deposit
          - Check
          - Historical Payment
          example: Direct Deposit
          type: string
          x-konfig-original-example: Direct Deposit
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-payment_method
        wage:
          description: "If the contractor is on a fixed wage, this is the fixed wage\
            \ payment for the contractor, regardless of hours worked"
          example: 5000
          type: number
          x-konfig-original-example: 5000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-wage
        hours:
          description: "If the contractor is on an hourly wage, this is the number\
            \ of hours that the contractor worked for the payment"
          example: 40
          type: number
          x-konfig-original-example: 40
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-hours
        bonus:
          description: "If the contractor is on an hourly wage, this is the bonus\
            \ the contractor earned"
          example: 500
          type: number
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-bonus
        reimbursement:
          description: Reimbursed wages for the contractor
          example: 20
          type: number
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-reimbursement
      required:
      - contractor_uuid
      - date
      type: object
    CompanyFormsSignFormRequest:
      description: ""
      example:
        signed_by_ip_address: signed_by_ip_address
        signature_text: signature_text
        agree: true
      properties:
        signature_text:
          description: The signature
          type: string
        agree:
          description: whether you agree to sign electronically
          type: boolean
        signed_by_ip_address:
          description: The IP address of the signatory who signed the form.
          type: string
      required:
      - agree
      - signature_text
      - signed_by_ip_address
      type: object
    EmployeeFormsSignFormRequest:
      description: ""
      example:
        signed_by_ip_address: signed_by_ip_address
        signature_text: signature_text
        agree: true
      properties:
        signature_text:
          description: The signature
          type: string
        agree:
          description: whether you agree to sign electronically
          type: boolean
        signed_by_ip_address:
          description: The IP address of the signatory who signed the form.
          type: string
      required:
      - agree
      - signature_text
      - signed_by_ip_address
      type: object
    PayrollsGeneratePrintableChecksRequest:
      example:
        printing_format: printing_format
        starting_check_number: 0
      properties:
        printing_format:
          description: "The type of check stock being printed. Check this [link](https://support.gusto.com/article/999877761000000/Pay-your-team-by-check)\
            \ for more info on check types"
          type: string
        starting_check_number:
          description: The starting check number for the checks being generated
          type: integer
      required:
      - printing_format
      type: object
    CompanyBenefitsCreateBenefitRequest:
      description: ""
      example:
        benefit_type: 0.8008281904610115
        responsible_for_employee_w2: true
        responsible_for_employer_taxes: true
        description: description
        active: true
      properties:
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          type: string
        benefit_type:
          description: The ID of the benefit to which the company benefit belongs.
          type: number
        active:
          default: true
          description: Whether this benefit is active for employee participation.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CompanyBenefitsCreateBenefitRequest-properties-active
        responsible_for_employer_taxes:
          description: Whether the employer is subject to pay employer taxes when
            an employee is on leave. Only applicable to third party sick pay benefits.
          type: boolean
        responsible_for_employee_w2:
          description: Whether the employer is subject to file W-2 forms for an employee
            on leave. Only applicable to third party sick pay benefits.
          type: boolean
      required:
      - benefit_id
      - description
      type: object
    CompanyBenefitsUpdateBenefitRequest:
      description: ""
      example:
        description: description
        active: true
        version: version
      properties:
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          description: Whether this benefit is active for employee participation.
            Company benefits may only be deactivated if no employees are actively
            participating.
          type: boolean
      required:
      - version
      type: object
    EmployeeBenefitsCreateBenefitRecordRequest:
      description: ""
      example:
        limit_option: limit_option
        employee_deduction_annual_maximum: employee_deduction_annual_maximum
        active: true
        employee_deduction: "0.00"
        company_contribution_annual_maximum: company_contribution_annual_maximum
        contribution:
          type: tiered
          value: ""
        elective: false
        deduction_reduces_taxable_income: unset
        contribute_as_percentage: false
        catch_up: false
        company_contribution: "0.00"
        deduct_as_percentage: false
        coverage_amount: coverage_amount
        coverage_salary_multiplier: "0.00"
        company_benefit_uuid: company_benefit_uuid
      properties:
        company_benefit_uuid:
          description: The UUID of the company benefit.
          type: string
        active:
          default: true
          description: Whether the employee benefit is active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-active
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-employee_deduction
        deduct_as_percentage:
          default: false
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-deduct_as_percentage
        employee_deduction_annual_maximum:
          description: The maximum employee deduction amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        contribution:
          $ref: '#/components/schemas/EmployeeBenefitsCreateBenefitRecordRequest_contribution'
        elective:
          default: false
          description: "Whether the company contribution is elective (aka \"matching\"\
            ). For `tiered`, `elective_amount`, and `elective_percentage` contribution\
            \ types this is ignored and assumed to be `true`."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-elective
        company_contribution_annual_maximum:
          description: The maximum company contribution amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        limit_option:
          description: "Some benefits require additional information to determine\
            \ their limit. For example, for an HSA benefit, the limit option should\
            \ be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit,\
            \ the limit option should be either \"Joint Filing or Single\" or \"Married\
            \ and Filing Separately\"."
          nullable: true
          type: string
        catch_up:
          default: false
          description: Whether the employee should use a benefit’s "catch up" rate.
            Only Roth 401k and 401k benefits use this value for employees over 50.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-catch_up
        coverage_amount:
          description: "The amount that the employee is insured for. Note: company\
            \ contribution cannot be present if coverage amount is set."
          nullable: true
          type: string
        coverage_salary_multiplier:
          default: "0.00"
          description: "The coverage amount as a multiple of the employee’s salary.\
            \ Only applicable for Group Term Life benefits. Note: cannot be set if\
            \ coverage amount is also set."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-coverage_salary_multiplier
        deduction_reduces_taxable_income:
          description: "Whether the employee deduction reduces taxable income or not.\
            \ Only valid for Group Term Life benefits. Note: when the value is not\
            \ \"unset\", coverage amount and coverage salary multiplier are ignored."
          enum:
          - unset
          - reduces_taxable_income
          - does_not_reduce_taxable_income
          - null
          nullable: true
          type: string
        company_contribution:
          default: "0.00"
          deprecated: true
          description: "The amount to be paid, per pay period, by the company."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-company_contribution
        contribute_as_percentage:
          default: false
          deprecated: true
          description: Whether the company contribution amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-contribute_as_percentage
      required:
      - company_benefit_uuid
      type: object
    EmployeeBenefitsUpdateBenefitRecordRequest:
      example:
        limit_option: limit_option
        employee_deduction_annual_maximum: employee_deduction_annual_maximum
        active: true
        employee_deduction: "0.00"
        version: version
        company_contribution_annual_maximum: company_contribution_annual_maximum
        contribution:
          type: amount
          value: ""
        elective: false
        deduction_reduces_taxable_income: unset
        contribute_as_percentage: false
        catch_up: false
        company_contribution: "0.00"
        deduct_as_percentage: true
        coverage_amount: coverage_amount
        coverage_salary_multiplier: "0.00"
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          description: Whether the employee benefit is active.
          type: boolean
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-employee_deduction
        deduct_as_percentage:
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          type: boolean
        employee_deduction_annual_maximum:
          description: The maximum employee deduction amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        contribution:
          $ref: '#/components/schemas/EmployeeBenefitsUpdateBenefitRecordRequest_contribution'
        elective:
          default: false
          description: "Whether the company contribution is elective (aka \"matching\"\
            ). For `tiered`, `elective_amount`, and `elective_percentage` contribution\
            \ types this is ignored and assumed to be `true`."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-elective
        company_contribution_annual_maximum:
          description: The maximum company contribution amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        limit_option:
          description: "Some benefits require additional information to determine\
            \ their limit. For example, for an HSA benefit, the limit option should\
            \ be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit,\
            \ the limit option should be either \"Joint Filing or Single\" or \"Married\
            \ and Filing Separately\"."
          nullable: true
          type: string
        catch_up:
          default: false
          description: Whether the employee should use a benefit’s "catch up" rate.
            Only Roth 401k and 401k benefits use this value for employees over 50.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-catch_up
        coverage_amount:
          description: "The amount that the employee is insured for. Note: company\
            \ contribution cannot be present if coverage amount is set."
          nullable: true
          type: string
        deduction_reduces_taxable_income:
          default: unset
          description: "Whether the employee deduction reduces taxable income or not.\
            \ Only valid for Group Term Life benefits. Note: when the value is not\
            \ \"unset\", coverage amount and coverage salary multiplier are ignored."
          enum:
          - unset
          - reduces_taxable_income
          - does_not_reduce_taxable_income
          - null
          example: unset
          nullable: true
          type: string
          x-konfig-original-example: unset
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-deduction_reduces_taxable_income
        coverage_salary_multiplier:
          default: "0.00"
          description: "The coverage amount as a multiple of the employee’s salary.\
            \ Only applicable for Group Term Life benefits. Note: cannot be set if\
            \ coverage amount is also set."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-coverage_salary_multiplier
        company_contribution:
          default: "0.00"
          deprecated: true
          description: "The amount to be paid, per pay period, by the company."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-company_contribution
        contribute_as_percentage:
          default: false
          deprecated: true
          description: Whether the company contribution amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-contribute_as_percentage
      required:
      - version
      type: object
    EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest:
      example:
        ytd_employee_deduction_amount: "0.00"
        benefit_type: 0.8008281904610115
        ytd_company_contribution_amount: "0.00"
        tax_year: 2602.1428726887334
      properties:
        benefit_type:
          description: The benefit type supported by Gusto.
          type: number
        tax_year:
          description: The tax year for which this amount applies.
          maximum: 2999
          minimum: 2000
          type: number
        ytd_employee_deduction_amount:
          default: "0.00"
          description: The year-to-date employee deduction made outside the current
            company.
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_employee_deduction_amount
        ytd_company_contribution_amount:
          default: "0.00"
          description: The year-to-date company contribution made outside the current
            company.
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_company_contribution_amount
      required:
      - benefit_id
      - tax_year
      - ytd_company_contribution_amount
      - ytd_employee_deduction_amount
      type: object
    GarnishmentsCreateGarnishmentRequest:
      description: ""
      example:
        amount: amount
        court_ordered: true
        times: 0
        pay_period_maximum: pay_period_maximum
        recurring: false
        description: description
        active: true
        deduct_as_percentage: false
        annual_maximum: annual_maximum
      properties:
        description:
          description: The description of the garnishment.
          readOnly: false
          type: string
        active:
          default: true
          description: Whether or not this garnishment is currently active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-active
        amount:
          description: "The amount of the garnishment. Either a percentage or a fixed\
            \ dollar amount. Represented as a float, e.g. \"8.00\"."
          format: float
          readOnly: false
          type: string
        court_ordered:
          description: Whether the garnishment is court ordered.
          readOnly: false
          type: boolean
        times:
          description: The number of times to apply the garnishment. Ignored if recurring
            is true.
          nullable: true
          readOnly: false
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-times
          example: null
        recurring:
          default: false
          description: Whether the garnishment should recur indefinitely.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-recurring
        annual_maximum:
          description: "The maximum deduction per annum. A null value indicates no\
            \ maximum. Represented as a float, e.g. \"200.00\"."
          format: float
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-annual_maximum
          example: null
        pay_period_maximum:
          description: "The maximum deduction per pay period. A null value indicates\
            \ no maximum. Represented as a float, e.g. \"16.00\"."
          format: float
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-pay_period_maximum
          example: null
        deduct_as_percentage:
          default: false
          description: Whether the amount should be treated as a percentage to be
            deducted per pay period.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-deduct_as_percentage
      required:
      - amount
      - court_ordered
      - description
      type: object
    GarnishmentsUpdateGarnishmentRequest:
      example:
        amount: amount
        court_ordered: true
        times: 0
        pay_period_maximum: pay_period_maximum
        recurring: false
        description: description
        active: true
        deduct_as_percentage: false
        annual_maximum: annual_maximum
        version: version
      properties:
        description:
          description: The description of the garnishment.
          readOnly: false
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          default: true
          description: Whether or not this garnishment is currently active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-active
        amount:
          description: "The amount of the garnishment. Either a percentage or a fixed\
            \ dollar amount. Represented as a float, e.g. \"8.00\"."
          format: float
          readOnly: false
          type: string
        court_ordered:
          description: Whether the garnishment is court ordered.
          readOnly: false
          type: boolean
        times:
          description: The number of times to apply the garnishment. Ignored if recurring
            is true.
          nullable: true
          readOnly: false
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-times
          example: null
        recurring:
          default: false
          description: Whether the garnishment should recur indefinitely.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-recurring
        annual_maximum:
          description: "The maximum deduction per annum. A null value indicates no\
            \ maximum. Represented as a float, e.g. \"200.00\"."
          format: float
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-annual_maximum
          example: null
        pay_period_maximum:
          description: "The maximum deduction per pay period. A null value indicates\
            \ no maximum. Represented as a float, e.g. \"16.00\"."
          format: float
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-pay_period_maximum
          example: null
        deduct_as_percentage:
          default: false
          description: Whether the amount should be treated as a percentage to be
            deducted per pay period.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-deduct_as_percentage
      required:
      - version
      type: object
    BankAccountsCreateFromPlaidTokenRequest:
      example:
        owner_id: owner_id
        processor_token: processor_token
        owner_type: Company
      properties:
        owner_type:
          description: The owner type of the bank account
          enum:
          - Company
          type: string
        owner_id:
          description: The owner uuid of the bank account
          type: string
        processor_token:
          description: The Plaid processor token
          type: string
      required:
      - owner_id
      - owner_type
      - processor_token
      type: object
    TaxRequirementsUpdateStateTaxesRequest:
      example:
        requirement_sets:
        - requirements:
          - value: value
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - value: value
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          state: GA
          effective_from: effective_from
          key: registrations
        - requirements:
          - value: value
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          - value: value
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          state: GA
          effective_from: effective_from
          key: registrations
      properties:
        requirement_sets:
          items:
            $ref: '#/components/schemas/TaxRequirementsUpdateStateTaxesRequest_requirement_sets_inner'
          type: array
      type: object
      x-examples:
        example-1:
          requirement_sets:
          - key: registrations
            state: GA
            requirements:
            - key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
              value: 1233214-AB
            - key: 6c0911ab-5860-412e-bdef-6437cd881df5
              value: 474747-22
          - key: taxrates
            effective_from: 2022-01-01
            state: GA
            requirements:
            - key: e0ac2284-8d30-4100-ae23-f85f9574868b
              value: "0.05"
          - key: depositschedules
            effective_from: 2022-01-01
            state: GA
            requirements:
            - key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
              value: Semi-weekly
    ContractorPaymentsPreviewDebitDateRequest:
      example:
        contractor_payments:
        - date: date
          hours: 1
          bonus: 0
          hourly_rate: 6
          reimbursement: 5
          contractor_uuid: contractor_uuid
          payment_method: payment_method
          wage: 5
        - date: date
          hours: 1
          bonus: 0
          hourly_rate: 6
          reimbursement: 5
          contractor_uuid: contractor_uuid
          payment_method: payment_method
          wage: 5
      properties:
        contractor_payments:
          items:
            $ref: '#/components/schemas/ContractorPaymentsPreviewDebitDateRequest_contractor_payments_inner'
          type: array
      type: object
      x-examples:
        example-1:
          contractor_payments:
          - bonus: 0
            check_date: 2022-09-2
            contractor_uuid: 5376e95b-cca0-482b-bb81-aba5e360eb04
            hours: 0
            payment_method: Check
            reimbursement: 0
            wage: 123
            hourly_rate: 0
          - bonus: 0
            check_date: 2022-09-2
            contractor_uuid: 0c984dce-de9a-47db-8bfb-5f0c823afe6f
            hours: 0
            payment_method: Check
            reimbursement: 0
            wage: 456
            hourly_rate: 0
    ContractorPaymentsPreviewDebitDateRequest1:
      properties: {}
      type: object
    TimeOffPoliciesUpdatePolicyRequest:
      example:
        accrual_rate: "120.0"
        accrual_method: per_calendar_year
        max_accrual_hours_per_year: max_accrual_hours_per_year
        paid_out_on_termination: true
        name: test policy3
        accrual_rate_unit: accrual_rate_unit
        accrual_waiting_period_days: 0
        carryover_limit_hours: carryover_limit_hours
        max_hours: max_hours
      properties:
        name:
          description: Name of the time off policy
          example: test policy3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-name
        accrual_method:
          description: Accrual method of the time off policy
          enum:
          - unlimited
          - per_pay_period
          - per_calendar_year
          - per_anniversary_year
          - per_hour_worked
          - per_hour_worked_no_overtime
          - per_hour_paid
          - per_hour_paid_no_overtime
          example: per_calendar_year
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_method
        accrual_rate:
          description: "The rate at which the time off hours will accrue for an employee\
            \ on the policy. Represented as a float, e.g. \"40.0\"."
          example: "120.0"
          format: float
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_rate
        accrual_rate_unit:
          description: "The number of hours an employee has to work or be paid for\
            \ to accrue the number of hours set in the accrual rate. Only used for\
            \ hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,\
            \ per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        paid_out_on_termination:
          description: Boolean representing if an employees accrued time off hours
            will be paid out on termination
          type: boolean
        accrual_waiting_period_days:
          description: Number of days before an employee on the policy will begin
            accruing time off hours
          type: integer
        carryover_limit_hours:
          description: The max number of hours and employee can carryover from one
            year to the next
          format: float
          type: string
        max_accrual_hours_per_year:
          description: The max number of hours and employee can accrue in a year
          format: float
          type: string
        max_hours:
          description: The max number of hours an employee can accrue
          format: float
          type: string
      type: object
      x-examples:
        example-1:
          name: test policy3
          accrual_method: per_calendar_year
          accrual_rate: "120.0"
    TimeOffPoliciesCreatePolicyRequest:
      example:
        policy_type: sick
        accrual_rate: accrual_rate
        accrual_method: unlimited
        max_accrual_hours_per_year: max_accrual_hours_per_year
        paid_out_on_termination: true
        name: test policy3
        accrual_rate_unit: accrual_rate_unit
        accrual_waiting_period_days: 0
        carryover_limit_hours: carryover_limit_hours
        max_hours: max_hours
      properties:
        name:
          description: Name of the time off policy
          example: test policy3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-name
        policy_type:
          description: Type of the time off policy. Currently only "vacation" and
            "sick" are supported
          example: sick
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-policy_type
        accrual_method:
          description: Accrual method of the time off policy
          enum:
          - unlimited
          - per_pay_period
          - per_calendar_year
          - per_anniversary_year
          - per_hour_worked
          - per_hour_worked_no_overtime
          - per_hour_paid
          - per_hour_paid_no_overtime
          type: string
        accrual_rate:
          description: "The rate at which the time off hours will accrue for an employee\
            \ on the policy. Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        accrual_rate_unit:
          description: "The number of hours an employee has to work or be paid for\
            \ to accrue the number of hours set in the accrual rate. Only used for\
            \ hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,\
            \ per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        paid_out_on_termination:
          description: Boolean representing if an employees accrued time off hours
            will be paid out on termination
          type: boolean
        accrual_waiting_period_days:
          description: Number of days before an employee on the policy will begin
            accruing time off hours
          type: integer
        carryover_limit_hours:
          description: The max number of hours and employee can carryover from one
            year to the next
          format: float
          type: string
        max_accrual_hours_per_year:
          description: The max number of hours and employee can accrue in a year
          format: float
          type: string
        max_hours:
          description: The max number of hours an employee can accrue
          format: float
          type: string
      required:
      - accrual_method
      - name
      - policy_type
      type: object
      x-examples:
        example-1:
          name: test policy3
          policy_type: sick
    TimeOffPoliciesAddEmployeesToPolicyRequest:
      example:
        employees:
        - balance: balance
          uuid: uuid
        - balance: balance
          uuid: uuid
      properties:
        employees:
          items:
            $ref: '#/components/schemas/TimeOffPoliciesAddEmployeesToPolicyRequest_employees_inner'
          type: array
      type: object
      x-examples:
        example-1:
          employees:
          - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
    TimeOffPoliciesRemoveEmployeesRequest:
      example:
        employees:
        - uuid: uuid
        - uuid: uuid
      properties:
        employees:
          items:
            $ref: '#/components/schemas/Time_Off_Policy_employees_inner'
          type: array
      type: object
      x-examples:
        example-1:
          employees:
          - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
    HolidayPayPoliciesCreateCompanyPolicyRequest:
      example:
        federal_holidays:
          memorial_day:
            selected: true
          presidents_day:
            selected: true
          independence_day:
            selected: true
          juneteenth:
            selected: true
          thanksgiving:
            selected: true
          mlk_day:
            selected: true
          new_years_day:
            selected: true
          columbus_day:
            selected: true
          labor_day:
            selected: true
          veterans_day:
            selected: true
          christmas_day:
            selected: true
      properties:
        federal_holidays:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays'
      type: object
    HolidayPayPoliciesUpdatePolicyRequest:
      example:
        federal_holidays:
          memorial_day:
            selected: true
          presidents_day:
            selected: true
          independence_day:
            selected: true
          juneteenth:
            selected: true
          thanksgiving:
            selected: true
          mlk_day:
            selected: true
          new_years_day:
            selected: true
          columbus_day:
            selected: true
          labor_day:
            selected: true
          veterans_day:
            selected: true
          christmas_day:
            selected: true
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        federal_holidays:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays'
      required:
      - version
      type: object
    HolidayPayPoliciesAddEmployeesToPolicyRequest:
      example:
        employees:
        - uuid: uuid
        - uuid: uuid
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employees:
          description: "An array of employee objects, each containing an employee_uuid."
          items:
            $ref: '#/components/schemas/Time_Off_Policy_employees_inner'
          type: array
      required:
      - version
      type: object
    HolidayPayPoliciesRemoveEmployeesRequest:
      example:
        employees:
        - uuid: uuid
        - uuid: uuid
        version: version
      properties:
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employees:
          description: "An array of employee objects, each containing an employee_uuid."
          items:
            $ref: '#/components/schemas/Time_Off_Policy_employees_inner'
          type: array
      required:
      - version
      type: object
    HolidayPayPoliciesPreviewCompanyPaidHolidaysRequest:
      example:
        year: year
      properties:
        year:
          description: "If a year is passed, paid holidays for that year will be returned.\
            \ Otherwise, paid holidays for the next three years will be returned."
          type: string
      type: object
    TimeOffPoliciesUpdateEmployeeBalanceRequest:
      example:
        employees:
        - balance: balance
          uuid: uuid
        - balance: balance
          uuid: uuid
      properties:
        employees:
          items:
            $ref: '#/components/schemas/TimeOffPoliciesAddEmployeesToPolicyRequest_employees_inner'
          type: array
      type: object
      x-examples:
        example-1:
          employees:
          - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
            balance: "40.0"
    IntrospectionGetCurrentAccessTokenInfoResponse:
      description: ""
      example:
        resource:
          type: type
          uuid: uuid
        scope: scope
      properties:
        scope:
          description: Space delimited string of accessible scopes.
          type: string
        resource:
          $ref: '#/components/schemas/IntrospectionGetCurrentAccessTokenInfoResponse_resource'
      type: object
      x-konfig-is-used-in-successful-response: true
    CompaniesCreatePartnerManagedCompanyResponse:
      description: Object returned when creating a partner managed company
      example:
        access_token: access_token
        company_uuid: company_uuid
        refresh_token: refresh_token
        expires_in: 0
      properties:
        access_token:
          description: Access token that can be used for OAuth access to the account.
            Access tokens expire 2 hours after they are issued.
          readOnly: true
          type: string
        refresh_token:
          description: Refresh token that can be exchanged for a new access token.
          readOnly: true
          type: string
        company_uuid:
          description: Gusto’s UUID for the company
          readOnly: true
          type: string
        expires_in:
          description: Time of access_token expiration in seconds
          readOnly: true
          type: integer
      type: object
      x-konfig-is-used-in-successful-response: true
    CompaniesMigrateToEmbeddedPayrollResponse:
      description: ""
      example:
        company_uuid: company_uuid
        migration_status: migration_status
      properties:
        company_uuid:
          description: The company UUID
          type: string
        migration_status:
          description: The migration status
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    CompaniesAcceptTermsOfServiceResponse:
      description: ""
      example:
        latest_terms_accepted: true
      properties:
        latest_terms_accepted:
          description: Whether the latest terms have been accepted by the user.
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    CompaniesGetTermsOfServiceStatusResponse:
      description: ""
      example:
        latest_terms_accepted: true
      properties:
        latest_terms_accepted:
          description: Whether the latest terms have been accepted by the user.
          type: boolean
      required:
      - email
      - external_user_id
      - ip_address
      type: object
      x-konfig-is-used-in-successful-response: true
    CompaniesGetAllAdminsResponse:
      items:
        $ref: '#/components/schemas/Admin'
      type: array
      x-konfig-is-used-in-successful-response: true
    SignatoriesGetCompanySignatoriesResponse:
      items:
        $ref: '#/components/schemas/Signatory'
      type: array
      x-konfig-is-used-in-successful-response: true
    CompaniesGetCustomFieldsResponse:
      example:
        custom_fields:
        - selection_options:
          - selection_options
          - selection_options
          name: name
          description: description
          type: null
          uuid: uuid
        - selection_options:
          - selection_options
          - selection_options
          name: name
          description: description
          type: null
          uuid: uuid
      properties:
        custom_fields:
          items:
            $ref: '#/components/schemas/Company-Custom-Field'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    LocationsGetCompanyLocationsResponse:
      items:
        $ref: '#/components/schemas/Location'
      type: array
      x-konfig-is-used-in-successful-response: true
    LocationsGetMinimumWagesResponse:
      items:
        $ref: '#/components/schemas/Minimum-Wage'
      type: array
      x-konfig-is-used-in-successful-response: true
    BankAccountsListCompanyBankAccountsResponse:
      items:
        $ref: '#/components/schemas/Company-Bank-Account'
      type: array
      x-konfig-is-used-in-successful-response: true
    ExternalPayrollsListForCompanyResponse:
      items:
        $ref: '#/components/schemas/External-Payroll-Basic'
      type: array
      x-konfig-is-used-in-successful-response: true
    ExternalPayrollsGetTaxSuggestionsResponse:
      items:
        $ref: '#/components/schemas/External-Payroll-Tax-Suggestions'
      type: array
      x-konfig-is-used-in-successful-response: true
    ExternalPayrollsGetTaxLiabilitiesResponse:
      items:
        $ref: '#/components/schemas/Tax-Liabilities-Selections'
      type: array
      x-konfig-is-used-in-successful-response: true
    PaySchedulesListForCompanyResponse:
      items:
        $ref: '#/components/schemas/Pay-Schedule'
      type: array
      x-konfig-is-used-in-successful-response: true
    PaySchedulesPreviewPayScheduleDatesResponse:
      description: Pay schedule preview
      example:
        holidays:
        - holidays
        - holidays
        pay_periods:
        - end_date: end_date
          check_date: check_date
          run_payroll_by: run_payroll_by
          start_date: start_date
        - end_date: end_date
          check_date: check_date
          run_payroll_by: run_payroll_by
          start_date: start_date
      properties:
        pay_periods:
          description: A list of pay periods for the previewed pay schedule
          items:
            $ref: '#/components/schemas/PaySchedulesPreviewPayScheduleDatesResponse_pay_periods_inner'
          type: array
        holidays:
          description: A list of dates for bank closures
          items:
            type: string
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PaySchedulesGetPayPeriodsResponse:
      items:
        $ref: '#/components/schemas/Pay-Period'
      type: array
      x-konfig-is-used-in-successful-response: true
    PaySchedulesGetUnprocessedTerminationPayPeriodsResponse:
      items:
        $ref: '#/components/schemas/Unprocessed-Termination-Pay-Period'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeesListCompanyEmployeesResponse:
      items:
        $ref: '#/components/schemas/Employee'
      type: array
      x-konfig-is-used-in-successful-response: true
    DepartmentsGetAllWithEmployeesResponse:
      items:
        $ref: '#/components/schemas/Department'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeEmploymentsListEmployeeTerminationsResponse:
      items:
        $ref: '#/components/schemas/Termination'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeEmploymentsGetHistoryResponse:
      items:
        $ref: '#/components/schemas/EmployeeEmploymentsGetHistoryResponse_inner'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeAddressesGetHomeAddressesResponse:
      items:
        $ref: '#/components/schemas/Employee-Address'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeAddressesListWorkAddressesResponse:
      items:
        $ref: '#/components/schemas/Employee-Work-Address'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeesGetCustomFieldsResponse:
      example:
        custom_fields:
        - selection_options:
          - selection_options
          - selection_options
          company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
          name: employee_level
          description: Employee Level
          id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          type: null
          value: "2"
        - selection_options:
          - selection_options
          - selection_options
          company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
          name: employee_level
          description: Employee Level
          id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
          type: null
          value: "2"
      properties:
        custom_fields:
          items:
            $ref: '#/components/schemas/Employee-Custom-Field'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeesGetOnboardingStatusResponse:
      properties: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    EmployeeTaxSetupGetStateTaxesResponse:
      items:
        $ref: '#/components/schemas/Employee-State-Tax'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeTaxSetupUpdateStateTaxesResponse:
      description: ""
      items:
        properties:
          state:
            type: string
          questions:
            items:
              properties:
                key:
                  type: string
                answers:
                  items:
                    properties:
                      valid_from:
                        type: string
                      valid_up_to:
                        nullable: true
                      errors:
                        items:
                          type: string
                        type: array
                    required:
                    - valid_from
                    type: object
                  type: array
                  uniqueItems: true
              required:
              - key
              type: object
            type: array
            uniqueItems: true
        required:
        - questions
        - state
        type: object
      type: array
      uniqueItems: true
      x-examples:
        example-1:
        - state: CA
          questions:
          - key: filing_status
            answers:
            - valid_from: 2010-01-01
              errors:
              - string
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    EmployeePaymentMethodListBankAccountsResponse:
      items:
        $ref: '#/components/schemas/Employee-Bank-Account'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsAndCompensationsGetEmployeeJobsResponse:
      items:
        $ref: '#/components/schemas/Job'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsAndCompensationsGetJobCompensationsResponse:
      items:
        $ref: '#/components/schemas/Compensation'
      type: array
      x-konfig-is-used-in-successful-response: true
    JobsAndCompensationsCreateCompensationResponse:
      properties: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    EarningTypesGetAllResponse:
      example:
        default:
        - name: Cash Tips
          uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
        - name: Cash Tips
          uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
        custom:
        - name: Cash Tips
          uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
        - name: Cash Tips
          uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
      properties:
        default:
          description: The default earning types for the company.
          items:
            $ref: '#/components/schemas/Earning-Type'
          type: array
        custom:
          description: The custom earning types for the company.
          items:
            $ref: '#/components/schemas/Earning-Type'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    ContractorsGetCompanyContractorsResponse:
      items:
        $ref: '#/components/schemas/Contractor'
      type: array
      x-konfig-is-used-in-successful-response: true
    ContractorPaymentMethodListBankAccountsResponse:
      items:
        $ref: '#/components/schemas/Contractor-Bank-Account'
      type: array
      x-konfig-is-used-in-successful-response: true
    ContractorPaymentMethodCreateBankAccountResponse:
      properties: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    WebhooksListSubscriptionsResponse:
      items:
        $ref: '#/components/schemas/Webhook-Subscription'
      type: array
      x-konfig-is-used-in-successful-response: true
    ContractorFormsListAllResponse:
      items:
        $ref: '#/components/schemas/Form_1099'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeFormsGenerateW2DocumentResponse:
      allOf:
      - $ref: '#/components/schemas/EmployeeFormsGenerateW2DocumentResponse_allOf'
      - $ref: '#/components/schemas/Form'
      x-konfig-is-used-in-successful-response: true
    ContractorsGetOnboardingStatusResponse:
      properties: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    PayrollsGetCompanyPayrollsResponse:
      items:
        $ref: '#/components/schemas/Payroll-Minimal'
      type: array
      x-konfig-is-used-in-successful-response: true
    TimeOffPoliciesCalculateAccruingTimeOffHoursResponse:
      items:
        $ref: '#/components/schemas/Accruing-Time-Off-Hour'
      type: array
      x-konfig-is-used-in-successful-response: true
    PayrollsGetAllPayrollBlockersResponse:
      items:
        $ref: '#/components/schemas/Payroll-Blocker'
      type: array
      x-konfig-is-used-in-successful-response: true
    PayrollsSkipPayrollResponse: {}
    PayrollsCalculateGrossUpResponse: {}
    PayrollsCalculateGrossUp422Response: {}
    PayrollsSubmitPayrollResponse: {}
    ContractorPaymentsGetWithinTimePeriodTotalsResponse: {}
    CompanyFormsGetAllFormsResponse:
      items:
        $ref: '#/components/schemas/Form'
      type: array
      x-konfig-is-used-in-successful-response: true
    PayrollsGetEmployeePayStubsResponse:
      items:
        $ref: '#/components/schemas/Employee-Pay-Stub'
      type: array
      x-konfig-is-used-in-successful-response: true
    CompanyBenefitsGetBenefitsForCompanyResponse:
      items:
        $ref: '#/components/schemas/Company-Benefit'
      type: array
      x-konfig-is-used-in-successful-response: true
    CompanyBenefitsDeleteBenefitResponse:
      properties:
        errors:
          properties:
            base:
              items:
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  full_message:
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    CompanyBenefitsListSupportedBenefitsResponse:
      items:
        $ref: '#/components/schemas/Supported-Benefit'
      type: array
      x-konfig-is-used-in-successful-response: true
    EmployeeBenefitsGetAllForEmployeeResponse:
      items:
        $ref: '#/components/schemas/Employee-Benefit'
      type: array
      x-konfig-is-used-in-successful-response: true
    GarnishmentsGetEmployeeGarnishmentsResponse:
      items:
        $ref: '#/components/schemas/Garnishment'
      type: array
      x-konfig-is-used-in-successful-response: true
    BankAccountsCreateFromPlaidTokenResponse: {}
    TaxRequirementsGetStatesResponse:
      items:
        $ref: '#/components/schemas/TaxRequirementsGetStatesResponse_inner'
      type: array
      x-examples:
        example-1:
        - state: CA
          setup_complete: true
        - state: GA
          setup_complete: false
      x-konfig-is-used-in-successful-response: true
    ContractorPaymentsPreviewDebitDateResponse:
      example:
        expected_debit_date: 2022-08-16
      properties:
        expected_debit_date:
          description: "The calculated debit date. If the payment method is Direct\
            \ Deposit, the debit date will account for the company's ACH speed. If\
            \ the payment method is Check, the debit date will be the same as the\
            \ check date."
          example: 2022-08-16
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsPreviewDebitDateResponse-properties-expected_debit_date
      type: object
      x-examples:
        example-1:
          expected_debit_date: 2022-08-16
      x-konfig-is-used-in-successful-response: true
    ContractorPaymentsPreviewDebitDate422Response:
      properties:
        errors:
          properties:
            base:
              items:
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  full_message:
                    type: string
                type: object
              type: array
            check_date:
              items:
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  full_message:
                    type: string
                type: object
              type: array
          type: object
      type: object
      x-examples:
        example-1:
          errors:
            base:
            - type: Invalid Object
              message: Please enter a contractor payment before continuing.
              full_message: Please enter a contractor payment before continuing.
            check_date:
            - type: Invalid Object
              message: Please enter a contractor payment before continuing.
              full_message: Please enter a contractor payment before continuing.
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    TimeOffPoliciesGetAllPoliciesResponse:
      items:
        $ref: '#/components/schemas/Time-Off-Policy'
      type: array
      x-konfig-is-used-in-successful-response: true
    EventsGet30DayEventsResponse:
      items:
        $ref: '#/components/schemas/Event'
      type: array
      x-konfig-is-used-in-successful-response: true
    RecoveryCasesListForCompanyResponse:
      items:
        $ref: '#/components/schemas/Recovery-Case'
      type: array
      x-konfig-is-used-in-successful-response: true
    AchTransactionsGetAllForCompanyResponse:
      items:
        $ref: '#/components/schemas/Ach-Transaction'
      type: array
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-2-schema:
      example: 2020-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-3-schema:
      example: 2020-05-08
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-1-schema:
      example: 2020-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-2-schema:
      example: 2020-12-31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-1-schema:
      example: 2022-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-2-schema:
      example: 2022-12-31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-start_date-schema:
      example: 2020-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-end_date-schema:
      example: 2020-01-31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-effective_date-schema:
      example: 2020-01-31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-parameters-invoice_period-schema:
      example: 2020-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address:
      example:
        version: 6a22da647ed391f184a212e6e83a541d
        uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
        employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
        location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
        effective_date: 2023-05-15
        active: true
        street_1: 977 Marks Viaduct
        street_2: null
        city: Pink Hill
        state: NC
        zip: "28572"
        country: USA
      properties:
        version:
          example: 6a22da647ed391f184a212e6e83a541d
          type: string
        uuid:
          example: 34925ef7-6234-440d-83b8-788a24d0d69a
          type: string
        employee_uuid:
          example: 2363b9c0-6625-4425-9261-47627fd68783
          type: string
        location_uuid:
          example: aba6d0fd-7294-4997-b1a4-bc9268c45932
          type: string
        effective_date:
          example: 2023-05-15
          type: string
        active:
          example: true
          type: boolean
        street_1:
          example: 977 Marks Viaduct
          type: string
        street_2:
          nullable: true
          type: string
          x-konfig-null-placeholder: true
        city:
          example: Pink Hill
          type: string
        state:
          example: NC
          type: string
        zip:
          example: "28572"
          type: string
        country:
          example: USA
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-version:
      example: 6a22da647ed391f184a212e6e83a541d
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-uuid:
      example: 34925ef7-6234-440d-83b8-788a24d0d69a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-effective_date:
      example: 2023-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-location_uuid:
      example: aba6d0fd-7294-4997-b1a4-bc9268c45932
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-employee_uuid:
      example: 2363b9c0-6625-4425-9261-47627fd68783
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-street_1:
      example: 977 Marks Viaduct
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-street_2:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-city:
      example: Pink Hill
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-state:
      example: NC
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-zip:
      example: "28572"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Work-Address-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Address:
      example:
        street_1: 412 Kiera Stravenue
        street_2: Suite 391
        city: San Francisco
        state: CA
        zip: "94107"
        country: USA
        active: true
      properties:
        street_1:
          example: 412 Kiera Stravenue
          type: string
        street_2:
          example: Suite 391
          type: string
        city:
          example: San Francisco
          type: string
        state:
          example: CA
          type: string
        zip:
          example: "94107"
          type: string
        country:
          example: USA
          type: string
        active:
          example: true
          type: boolean
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Address-allOf-1-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-version:
      example: 414dedaca594b77135e0b8d2f398516d
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-uuid:
      example: 9779767c-6044-48e0-bf68-aeb370b9a2e7
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-first_name:
      example: Nicole
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-middle_initial:
      example: M
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-last_name:
      example: Boehm
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-email:
      example: kory7757869450111548@barton-hermiston.io
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-company_uuid:
      example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-manager_uuid:
      example: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-department:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-terminated:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-two_percent_shareholder:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-onboarded:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-onboarding_status:
      example: onboarding_completed
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-date_of_birth:
      example: 1996-05-08
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-has_ssn:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-ssn:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-phone:
      example: "1234567890"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-preferred_first_name:
      example: Vanessa
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-payment_method:
      example: Check
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-properties-work_email:
      example: vanessa.boehm@example.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Onboarding-Status-properties-uuid:
      example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Onboarding-Status-properties-onboarding_status:
      example: admin_onboarding_incomplete
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-street_1:
      example: 412 Kiera Stravenue
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-street_2:
      example: Suite 391
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-city:
      example: San Francisco
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-zip:
      example: "94107"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Address-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-version:
      example: 7d9753112507b9dda4fb97910f39b06e
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-uuid:
      example: 064a4107-c9f4-4fad-acbf-f12cd81c0d6c
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-company_uuid:
      example: 768a1043-f6bf-4f0b-a606-98465ea01ad7
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-phone_number:
      example: "5825710808"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-street_1:
      example: 412 Kiera Stravenue
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-street_2:
      example: Suite 391
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-city:
      example: San Francisco
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-zip:
      example: "94107"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-created_at:
      example: 2023-09-12T16:42:25.000-07:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Location-properties-updated_at:
      example: 2023-09-12T16:42:25.000-07:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-name:
      example: Sick Hours
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-policy_name:
      example: Sick Policy
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-policy_uuid:
      example: 8dc8f324-3c03-4b42-8602-02476fa21c1b
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_unit:
      example: Hour
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_rate:
      example: "208.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_method:
      example: unlimited
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_period:
      example: Year
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-accrual_balance:
      example: "64.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-maximum_accrual_balance:
      example: "240.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Paid-Time-Off-properties-paid_at_termination:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-description:
      example: Company loan to employee
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-version:
      example: 52b7c567242cb7452e89ba2bc02cb476
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-uuid:
      example: 4c7841a2-1363-497e-bc0f-664703c7484f
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-employee_uuid:
      example: a6b53294-f871-4db2-bbd4-8c3d1fe56440
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-amount:
      example: "8.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-court_ordered:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-times:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-recurring:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-annual_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-pay_period_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Garnishment-properties-deduct_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-version:
      example: d487dd0b55dfcacdd920ccbdaeafa351
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-uuid:
      example: da441196-43a9-4d23-ad5d-f37ce6bb99c0
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-employee_uuid:
      example: da441196-43a9-4d23-ad5d-f37ce6bb99c0
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-cancelable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-effective_date:
      example: 2020-03-10
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Termination-properties-run_termination_payroll:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Flsa-Status-Type:
      example: Nonexempt
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-version:
      example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-uuid:
      example: 910b675b-af99-404e-b8d8-562a72b76b44
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-job_uuid:
      example: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-rate:
      example: "70.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-payment_unit:
      example: Hour
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-effective_date:
      example: 2020-12-11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Compensation-properties-adjust_for_minimum_wage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form-properties-title:
      example: Direct Deposit Authorization
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form-properties-description:
      example: We need you to sign paperwork to authorize us to debit and credit your
        bank account and file and pay your taxes.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form-properties-uuid:
      example: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form-properties-name:
      example: company_direct_deposit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form-properties-requires_signing:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-title:
      example: "Form 1099: 2020"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-description:
      example: Form 1099 records your annual income as a contractor.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-uuid:
      example: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-name:
      example: US_1099
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-draft:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-year:
      example: 2020
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-quarter:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-requires_signing:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Form_1099-properties-contractor_uuid:
      example: 123dd616-6dbc-4724-938a-403f6217a933
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Industry-properties-title:
      example: Computer Training
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Industry-properties-company_uuid:
      example: 423dd616-6dbc-4724-938a-403f6217a933
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Industry-properties-naics_code:
      example: "611420"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-title:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-version:
      example: d0e719137f89ca3dd334dd4cc248ffbb
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-uuid:
      example: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-employee_uuid:
      example: 948daac8-4355-4ece-9e2a-229898accb22
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-hire_date:
      example: 2020-01-20
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-primary:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-rate:
      example: "78000.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-payment_unit:
      example: Year
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Job-properties-current_compensation_uuid:
      example: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-uuid:
      example: c5fdae57-5483-4529-9aae-f0edceed92d4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-company_uuid:
      example: bcb305b0-2855-4025-8d22-e484a9e6b7c9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-check_date:
      example: 2022-06-03
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-payment_period_start_date:
      example: 2022-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-payment_period_end_date:
      example: 2022-05-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-status:
      example: unprocessed
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-properties-metadata-properties-deletable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook-Subscription-properties-uuid:
      example: c5fdae57-5483-4529-9aae-f0edceed92d4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook-Subscription-properties-url:
      example: https://partner-app.com/subscriber
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Webhook-Subscription-properties-status:
      example: verified
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-uuid:
      example: c5fdae57-5483-4529-9aae-f0edceed92d4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-company_uuid:
      example: bcb305b0-2855-4025-8d22-e484a9e6b7c9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-check_date:
      example: 2022-06-03
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-payment_period_start_date:
      example: 2022-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Basic-properties-payment_period_end_date:
      example: 2022-05-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-External-Payroll-Tax-Suggestions-properties-employee_uuid:
      example: d21848d5-446f-48a8-9430-30fbefeabda4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-tax_id:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-tax_name:
      example: Federal Income Tax
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Liabilities-Selections-properties-last_unpaid_external_payroll_uuid:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Admin-properties-uuid:
      example: 987058cc-23ee-46e9-81ef-5cee086cceca
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Admin-properties-email:
      example: jsmith99@gmail.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Admin-properties-first_name:
      example: John
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Admin-properties-last_name:
      example: Smith
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-ein:
      example: 00-0000001
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-entity_type:
      example: C-Corporation
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-tier:
      example: complete
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-is_suspended:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-company_status:
      example: Approved
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-name:
      example: Shoppe Studios LLC
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-trade_name:
      example: Record Shoppe
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-is_partner_managed:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-pay_schedule_type:
      example: by_department
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-compensations-properties-hourly-items-properties-name:
      example: Overtime
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-compensations-properties-hourly-items-properties-multiple:
      example: 1.5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-compensations-properties-fixed-items-properties-name:
      example: Bonus
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-compensations-properties-paid_time_off-items-properties-name:
      example: Vacation Hours
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-first_name:
      example: Alda
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-middle_initial:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-last_name:
      example: Carter
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-phone:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-email:
      example: louie.hessel7757869450111547@zemlak.biz
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-street_1:
      example: 524 Roob Divide
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-street_2:
      example: Suite 565
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-city:
      example: San Francisco
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-zip:
      example: "94107"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-first_name:
      example: Ian
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-last_name:
      example: Labadie
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-phone:
      example: 1-565-710-7559
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-email:
      example: louie.hessel7757869450111547@zemlak.biz
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-uuid:
      example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-onboarding_completed:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Onboarding-Status-properties-:
      example:
        uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
        onboarding_completed: false
        onboarding_steps:
        - title: Add Your Company's Addresses
          id: add_addresses
          required: true
          completed: true
          skippable: false
          requirements: []
        - title: Add Your Employees
          id: add_employees
          required: true
          completed: true
          skippable: true
          requirements:
          - add_addresses
        - title: Enter Your Federal Tax Information
          id: federal_tax_setup
          required: true
          completed: true
          skippable: false
          requirements:
          - add_addresses
          - add_employees
        - title: Add Your Bank Account
          id: add_bank_info
          required: true
          completed: true
          skippable: false
          requirements: []
        - title: Select a Pay Schedule
          id: payroll_schedule
          required: true
          completed: false
          skippable: false
          requirements: []
        - title: Sign Documents
          id: sign_all_forms
          required: true
          completed: false
          skippable: false
          requirements:
          - add_employees
          - federal_tax_setup
          - state_setup
          - add_bank_info
          - payroll_schedule
        - title: Verify Your Bank Account
          id: verify_bank_info
          required: true
          completed: false
          skippable: false
          requirements:
          - add_bank_info
      properties:
        uuid:
          example: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
          type: string
        onboarding_completed:
          example: false
          type: boolean
        onboarding_steps:
          items:
            properties:
              title:
                example: Add Your Company's Addresses
                type: string
              id:
                example: add_addresses
                type: string
              required:
                example: true
                type: boolean
              completed:
                example: true
                type: boolean
              skippable:
                example: false
                type: boolean
              requirements:
                items:
                  example: add_addresses
                  type: string
                type: array
            type: object
          type: array
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payment-Configs-properties-company_uuid:
      example: 423dd616-6dbc-4724-938a-403f6217a933
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payment-Configs-properties-partner_uuid:
      example: 556f05d0-48e0-4c47-bce5-db9aea923043
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payment-Configs-properties-fast_payment_limit:
      example: "5000"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payment-Configs-properties-payment_speed:
      example: 2-day
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Body-properties-type:
      example: Individual
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Body-properties-start_date:
      example: 2020-01-11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Body-properties-hourly_rate:
      example: "40.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Body-properties-self_onboarding:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Body-properties-file_new_hire_report:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-properties-is_active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-properties-hourly_rate:
      example: "50.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-properties-file_new_hire_report:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-uuid:
      example: 04552eb9-7829-4b18-ae96-6983552948df
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-bonus:
      example: "20.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-date:
      example: 2020-10-19
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-hours:
      example: "40.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-payment_method:
      example: Direct Deposit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-reimbursement:
      example: "100.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-status:
      example: Funded
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-hourly_rate:
      example: "18.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-may_cancel:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage:
      example: "0.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage_type:
      example: Hourly
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-properties-wage_total:
      example: "740.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Summary-properties-total-properties-reimbursements:
      example: "110.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Summary-properties-total-properties-wages:
      example: "1840.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Summary-By-Dates-properties-total-properties-reimbursements:
      example: "110.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Summary-By-Dates-properties-total-properties-wages:
      example: "1840.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-id:
      example: "1"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-status:
      example: approved
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee_note:
      example: Vacation at Disney World!
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-employer_note:
      example: But Universal has Harry Potter World...
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-request_type:
      example: vacation
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee-properties-id:
      example: "234567"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee-properties-full_name:
      example: Jessica Gusto
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-initiator-properties-id:
      example: "234567"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-initiator-properties-full_name:
      example: Jessica Gusto
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-approver-properties-id:
      example: "345678"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Request-properties-approver-properties-full_name:
      example: Karen Gusto
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Authentication-properties-token_type:
      example: bearer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Authentication-properties-expires_in:
      example: 7200
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-uuid:
      example: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-frequency:
      example: Twice per month
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-anchor_pay_date:
      example: 2020-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-anchor_end_of_pay_period:
      example: 2020-05-08
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-day_1:
      example: 15
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-day_2:
      example: 31
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-name:
      example: Engineering
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-custom_name:
      example: A new monthly pay schedule
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-properties-auto_pilot:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-uuid:
      example: 1263eae5-4411-48d9-bd6d-18ed93082e65
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-company_uuid:
      example: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-account_type:
      example: Checking
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-routing_number:
      example: "851070439"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-hidden_account_number:
      example: XXXX4087
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-verification_status:
      example: verified
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-verification_type:
      example: bank_deposits
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Bank-Account-properties-name:
      example: Employer Funding Account
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-description:
      example: Deductions and contributions for Medical Insurance
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-benefit_type:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-name:
      example: Medical Insurance
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-pretax:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-posttax:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-imputed:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-healthcare:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-retirement:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-yearly_limit:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Supported-Benefit-properties-category:
      example: Health
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-description:
      example: Kaiser Permanente
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-version:
      example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-uuid:
      example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-benefit_type:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-deletable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-supports_percentage_amounts:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-responsible_for_employer_taxes:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-responsible_for_employee_w2:
      example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-active
    : example: true
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-deduct_as_percentage
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-employee_deduction
    : example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-description:
      example: Kaiser Permanente
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-version:
      example: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-uuid:
      example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-benefit_type:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-deletable:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-supports_percentage_amounts:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-responsible_for_employer_taxes:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Company-Benefit-properties-responsible_for_employee_w2:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Earning-Type-properties-name:
      example: Cash Tips
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Earning-Type-properties-uuid:
      example: f5618c94-ed7d-4366-b2c4-ff05e430064f
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-version:
      example: 09j3d29jqdpj92109j9j2d90dq
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_uuid:
      example: 73274962-63ce-4e5c-b689-1df8d4df09f4
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_benefit_uuid:
      example: 54e37c27-43e6-4ae5-a5b2-e29895a133be
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-uuid:
      example: e91ca856-a915-4339-9b18-29f9cd66b031
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_deduction:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-deduct_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-employee_deduction_annual_maximum:
      example: "200.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-contribution-properties-type:
      example: amount
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-elective:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_contribution_annual_maximum:
      example: "200.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-limit_option:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-catch_up:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-retirement_loan_identifier:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-coverage_amount:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-deduction_reduces_taxable_income:
      example: unset
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-coverage_salary_multiplier:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-company_contribution:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Benefit-properties-contribute_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Check-properties-payroll_uuid:
      example: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Check-properties-printing_format:
      example: top
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Check-properties-starting_check_number:
      example: "10"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Check-properties-request_uuid:
      example: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Check-properties-status:
      example: pending
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Generated-Document-properties-request_uuid:
      example: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Generated-Document-properties-status:
      example: succeeded
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-payroll_uuid:
      example: afccb970-357e-4013-81f5-85dafc74f9b6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-company_uuid:
      example: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-name_of_sender:
      example: Torp and Sons and Sons
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-name_of_recipient:
      example: Payroll Recipients
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-recipient_notice:
      example: Payroll recipients include the employees listed below plus the tax
        agencies for the taxes listed below.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-debit_date:
      example: 2022-06-02
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-license:
      example: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more\
        \ about Gusto’s licenses and your state-specific rights to request information,\
        \ submit complaints, dispute errors, or cancel transactions, visit our license\
        \ page."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-license_uri:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-right_to_refund:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-liability_of_licensee:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-company_debit:
      example: "1080.47"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-net_pay_debit:
      example: "748.34"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-child_support_debit:
      example: "100.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-reimbursement_debit:
      example: "50.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-name:
      example: "Gusto, Zenpayroll Inc."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-address:
      example: 525 20th St
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-city:
      example: San Francisco
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-postal_code:
      example: "94107"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-phone_number:
      example: "4157778888"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-contractor_payment_uuid:
      example: afccb970-357e-4013-81f5-85dafc74f9b6
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-company_uuid:
      example: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-name_of_sender:
      example: Torp and Sons and Sons
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-name_of_recipient:
      example: Patricia Hamill
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-debit_date:
      example: 2022-05-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-license:
      example: "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more\
        \ about Gusto’s licenses and your state-specific rights to request information,\
        \ submit complaints, dispute errors, or cancel transactions, visit our license\
        \ page."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-license_uri:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-right_to_refund:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-liability_of_licensee:
      example: https://gusto.com/about/licenses
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-totals-properties-company_debit:
      example: "748.34"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-name:
      example: "Gusto, Zenpayroll Inc."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-address:
      example: 525 20th St
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-city:
      example: San Francisco
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-postal_code:
      example: "94107"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-phone_number:
      example: "4157778888"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-description:
      example: Employee Level
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-id:
      example: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-company_custom_field_id:
      example: da84500d-d05c-4e4f-bcf2-43152ca33278
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-name:
      example: employee_level
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-Custom-Field-properties-value:
      example: "2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-version:
      example: 2e930d43acbdb241f8f14a2d531fa417
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-effective_date:
      example: 2024-06-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-file_new_hire_report:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-work_location_uuid:
      example: 8cb87e2e-5b30-4c13-a4f4-bfffcbed1188
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-employment_status:
      example: seasonal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-two_percent_shareholder:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-employee_uuid:
      example: 8c290660-b6c9-4ad7-9f6e-ea146aaf79e8
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Rehire-properties-active:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Signatory-properties-home_address-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Flow-properties-url:
      example: https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Flow-properties-expires_at:
      example: 2021-12-28 04:25:48
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-properties-type:
      example: by_employee
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-properties-employee_uuid:
      example: 43b39ada-dc49-4879-9594-fe95f67ae434
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-properties-pay_schedule_uuid:
      example: 3f029a58-155d-4c30-8361-cc266b2c1f11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Department-properties-department_uuid:
      example: 43b39ada-dc49-4879-9594-fe95f67ae434
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Department-properties-pay_schedule_uuid:
      example: 3f029a58-155d-4c30-8361-cc266b2c1f11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Preview-properties-type:
      example: hourly_salaried
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-employee_uuid:
      example: 43b39ada-dc49-4879-9594-fe95f67ae434
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-first_name:
      example: Penny
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-last_name:
      example: Parker
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Employee-Change-properties-pay_frequency:
      example: Twice per month — Salaried pay schedule
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-pay_schedule_uuid:
      example: 3f029a58-155d-4c30-8361-cc266b2c1f11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-start_date:
      example: 2023-07-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-end_date:
      example: 2023-08-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Pay-Period-properties-check_date:
      example: 2023-08-02
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Transition-Pay-Period-properties-start_date:
      example: 2023-06-20
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Pay-Schedule-Assignment-Transition-Pay-Period-properties-end_date:
      example: 2023-06-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-properties-employee_uuid:
      example: 2005e601-3c78-410a-9d40-b960ae130383
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-properties-state:
      example: CA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-description:
      example: |
        The Head of Household status applies to unmarried individuals who have a relative living with them in their home. If unsure, read the <a target='_blank' data-bypass rel='noopener noreferrer' tabindex='99' href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA Filing Status explanation</a>.
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-label:
      example: Filing Status
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Question-properties-key:
      example: filing_status
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Answer-properties-value:
      example: "0.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Answer-properties-valid_from:
      example: 2010-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Employee-State-Tax-Input-Question-Format-properties-type:
      example: Select
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-properties-description:
      example: "If you have run payroll in the past in GA, find your withholding number\
        \ on notices received from the Georgia Department of Revenue, or call the\
        \ agency at (877) 423-6711. If you don’t have a number yet, you should <a\
        \ target='_blank' data-bypass href='https://gtc.dor.ga.gov/_/#1'>register\
        \ the business online</a>. The last two characters of your ID must be upper\
        \ case letters."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-properties-label:
      example: Withholding Number
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-properties-value:
      example: 1233214-AB
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-type:
      example: account_number
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-mask:
      example: '#######-^^'
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Metadata-properties-prefix:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Set-properties-label:
      example: Registrations
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirements-State-properties-company_uuid:
      example: 6c14eac3-0da2-474d-bda1-786b3602d381
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Set-Key:
      example: registrations
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Key:
      example: 71653ec0-00b5-4c66-a58b-22ecf21704c5
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Tax-Requirement-Effective-From:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-State:
      example: GA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-uuid:
      example: 3f746cd0-dd08-408f-b712-8180c7c621e9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-company_uuid:
      example: de83cff2-8e7a-448e-a28c-14258a9971c3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-name:
      example: test policy
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-policy_type:
      example: vacation
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-accrual_method:
      example: unlimited
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Policy-properties-is_active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-policy_uuid:
      example: a7838f74-4c29-4b70-9bfb-02a4e3e60709
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-time_off_type:
      example: vacation
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-policy_name:
      example: Paid Time Off
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-event_type:
      example: TimeOffEvent::AddToPolicy
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-event_description:
      example: "Added to policy: Vacation Per Hour Worked"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-effective_time:
      example: 2022-09-27T13:43:03.000-07:00
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-balance:
      example: "0.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Time-Off-Activity-properties-balance_change:
      example: "0.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Holiday-Pay-Policy-properties-version:
      example: 1b37938b017c7fd7116bada007072290
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Holiday-Pay-Policy-properties-company_uuid:
      example: b7845189-f12b-4378-918a-d2b9de3dc4ea
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-uuid:
      example: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-wage:
      example: "13.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-wage_type:
      example: Regular
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-effective_date:
      example: 2022-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-authority:
      example: State
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Minimum-Wage-properties-notes:
      example: Employers with 6 or more employees
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Notification-properties-title:
      example: "Action required: Additional information needed to process payroll"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Notification-properties-uuid:
      example: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Notification-properties-company_uuid:
      example: 88f7cca1-dcad-4d20-84db-7fb80303d69f
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Notification-properties-message:
      example: "If we do not receive this information as soon as possible, your payroll\
        \ may not be processed on time."
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Notification-properties-category:
      example: information_request
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-uuid:
      example: f7397a24-57ad-4fae-b011-d258e8232900
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-event_type:
      example: employee.bank_account.created
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-resource_type:
      example: Company
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-resource_uuid:
      example: 92a20431-9489-4bde-ad27-6feb20b969d5
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-entity_type:
      example: BankAccount
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-entity_uuid:
      example: 92a20431-9489-4bde-ad27-6feb20b969d5
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Event-properties-timestamp:
      example: 1686784995
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-uuid:
      example: e83d273e-4ae9-4b61-9c71-4030c2f73093
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-company_uuid:
      example: c5e3e3e9-732f-4762-849e-20b5cec9036f
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-status:
      example: open
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-latest_error_code:
      example: R01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-original_debit_date:
      example: 2023-10-11
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-check_date:
      example: 2023-10-13
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-payroll_uuid:
      example: 210f2034-fb4a-4059-b109-6c3b5efe499d
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-amount_outstanding:
      example: 10499.43
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Recovery-Case-properties-event_total_amount:
      example: 5912.07
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-description:
      example: PAY 380654
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-uuid:
      example: "123e4567-e89b-12d3-a456-426655440000,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-company_uuid:
      example: "456e7890-e12b-34c5-d678-901234567890,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_type:
      example: "Payroll,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_uuid:
      example: "789e0123-e45f-67ab-c890-123456789012,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-recipient_type:
      example: "Employee,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-recipient_uuid:
      example: "012e3456-f78d-90ab-12cd-345678901234,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-error_code:
      example: "null,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-transaction_type:
      example: "Credit employee pay,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_status:
      example: "submitted,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_direction:
      example: "credit,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_event_check_date:
      example: "2023-10-02,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-payment_date:
      example: "2023-10-17,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-Ach-Transaction-properties-amount:
      example: "123.00,"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-LocationsCreateCompanyLocationRequest-properties-country:
      example: USA
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_pay_date:
      example: 2020-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_end_of_pay_period:
      example: 2020-05-08
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_pay_date:
      example: 2020-05-15
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_end_of_pay_period:
      example: 2020-05-08
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorsChangeOnboardingStatusRequest-properties-onboarding_status:
      example: onboarding_completed
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-date:
      example: 2020-01-01
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-payment_method:
      example: Direct Deposit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-wage:
      example: 5000
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-hours:
      example: 40
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-bonus:
      example: 500
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-reimbursement:
      example: 20
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CompanyBenefitsCreateBenefitRequest-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-employee_deduction:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-deduct_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-elective:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-catch_up:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-coverage_salary_multiplier:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-company_contribution:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-contribute_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-employee_deduction:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-elective:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-catch_up:
      example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-deduction_reduces_taxable_income
    : example: unset
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-coverage_salary_multiplier:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-company_contribution:
      example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-contribute_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_employee_deduction_amount
    : example: "0.00"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_company_contribution_amount
    : example: "0.00"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-times:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-recurring:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-annual_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-pay_period_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-deduct_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-active:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-times:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-recurring:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-annual_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-pay_period_maximum:
      nullable: true
      type: string
      x-konfig-null-placeholder: true
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-deduct_as_percentage:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-name:
      example: test policy3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_method:
      example: per_calendar_year
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_rate:
      example: "120.0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-name:
      example: test policy3
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-policy_type:
      example: sick
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-hire_date:
      example: 2023-01-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-termination_date:
      example: 2023-03-30
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-file_new_hire_report:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-two_percent_shareholder:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-employment_status:
      example: seasonal
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ContractorPaymentsPreviewDebitDateResponse-properties-expected_debit_date:
      example: 2022-08-16
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--v1-token_info:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--oauth-token:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        client_id:
          description: Your client id
          type: string
        client_secret:
          description: Your client secret
          type: string
        redirect_uri:
          description: The redirect URI you set up via the Developer Portal
          type: string
        refresh_token:
          description: The `refresh_token` being exchanged for an access token code
          type: string
        grant_type:
          description: this should be the literal string 'refresh_token'
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      - refresh_token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        user:
          description: Information for the user who will be the primary payroll administrator
            for the new company.
          properties:
            first_name:
              description: The first name of the user who will be the primary payroll
                admin.
              type: string
            last_name:
              description: The last name of the user who will be the primary payroll
                admin.
              type: string
            email:
              description: The email of the user who will be the primary payroll admin.
              type: string
            phone:
              description: The phone number of the user who will be the primary payroll
                admin.
              type: string
          required:
          - email
          - first_name
          - last_name
          type: object
        company:
          properties:
            name:
              description: The legal name of the company.
              type: string
            trade_name:
              description: The name of the company.
              type: string
            ein:
              description: The employer identification number (EIN) of the company.
              type: string
          required:
          - name
          type: object
      required:
      - company
      - user
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-partner_managed_companies-company_uuid-migrate:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        email:
          description: "Email of the company signatory who is authorized to accept\
            \ our [Terms of Service](https://flows.gusto.com/terms) and migration\
            \ decision. You can retrieve the signatory email from the `GET /v/1/companies/{company_id}/signatories`\
            \ endpoint."
          type: string
        ip_address:
          description: The IP address of the signatory who viewed and accepted the
            Terms of Service.
          type: string
        external_user_id:
          description: The signatory's user ID on your platform.
          type: string
      required:
      - company_uuid
      - email
      - external_user_id
      - ip_address
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies-company_uuid-accept_terms_of_service:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        email:
          description: "The user's email address on Gusto. You can retrieve the user's\
            \ email via company's `/admins`, `/employees`, `/signatories`, and `/contractors`\
            \ endpoints."
          type: string
        ip_address:
          description: The IP address of the user who viewed and accepted the Terms
            of Service.
          type: string
        external_user_id:
          description: The user ID on your platform.
          type: string
      required:
      - company_uuid
      - email
      - external_user_id
      - ip_address
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-partner_managed_companies-company_uuid-retrieve_terms_of_service:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        email:
          description: "The user's email address on Gusto. You can retrieve the user's\
            \ email via company's `/admins`, `/employees`, `/signatories`, and `/contractors`\
            \ endpoints."
          type: string
      required:
      - company_uuid
      - email
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-invoices-invoice_period:
      properties:
        invoice_period:
          example: 2020-01
          type: string
          x-konfig-original-example: 2020-01
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-invoice_period-schema
        page:
          type: number
        per:
          type: number
        company_uuids:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - invoice_period
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - invoice_period
      - page
      - per
      - company_uuids
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-federal_tax_details:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-federal_tax_details:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        legal_name:
          description: The legal name of the company
          type: string
        ein:
          description: The EIN of of the company
          type: string
        tax_payer_type:
          description: What type of tax entity the company is
          enum:
          - C-Corporation
          - S-Corporation
          - Sole proprietor
          - LLC
          - LLP
          - Limited partnership
          - Co-ownership
          - Association
          - Trusteeship
          - General partnership
          - Joint venture
          - Non-Profit
          type: string
        filing_form:
          description: |-
            The form used by the company for federal tax filing. One of:
            - 941 (Quarterly federal tax return)
            - 944 (Annual federal tax return)
          type: string
        taxable_as_scorp:
          description: Whether this company should be taxed as an S-Corporation
          type: boolean
      required:
      - company_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-industry_selection:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-industry_selection:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          description: Industry title
          type: string
        naics_code:
          description: North American Industry Classification System (NAICS) is used
            to classify businesses with a six digit number based on the primary type
            of work the business performs
          type: string
        sic_codes:
          description: "A list of Standard Industrial Classification (SIC) codes,\
            \ which are four digit number that categorize the industries that companies\
            \ belong to based on their business activities. If sic_codes is not passed\
            \ in, we will perform an internal lookup with naics_code."
          items:
            type: string
          type: array
      required:
      - company_id
      - naics_code
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-admins:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-admins:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        first_name:
          description: The first name of the admin.
          type: string
        last_name:
          description: The last name of the admin.
          type: string
        email:
          description: "The email of the admin for Gusto's system. If the email matches\
            \ an existing user, this will create an admin account for them."
          type: string
      required:
      - company_id
      - email
      - first_name
      - last_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-signatories:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-signatories:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          type: string
        ssn:
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
        birthday:
          type: string
        home_address:
          description: The signatory's home address
          properties:
            street_1:
              type: string
            street_2:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
          required:
          - city
          - state
          - street_1
          - zip
          type: object
      required:
      - birthday
      - company_uuid
      - email
      - first_name
      - home_address
      - last_name
      - phone
      - ssn
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-signatories-invite:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
      required:
      - company_uuid
      - email
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-signatories-signatory_uuid:
      properties:
        company_uuid:
          type: string
        signatory_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      - signatory_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - signatory_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-signatories-signatory_uuid:
      properties:
        company_uuid:
          type: string
        signatory_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          type: string
        version:
          description: The current version of the object. See the versioning guide
            for information on how to use this field.
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        phone:
          type: string
        birthday:
          type: string
        ssn:
          type: string
        home_address:
          properties:
            street_1:
              type: string
            street_2:
              type: string
            city:
              type: string
            state:
              type: string
            zip:
              type: string
          type: object
      required:
      - company_uuid
      - signatory_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - signatory_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-onboarding_status:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-finish_onboarding:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-custom_fields:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-flows:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        flow_type:
          description: flow type
          type: string
        entity_uuid:
          description: "UUID of the target entity applicable to the flow. This field\
            \ is optional for company flows, please refer to the flow_types table\
            \ above for more details."
          type: string
        entity_type:
          description: "the type of target entity applicable to the flow. This field\
            \ is optional for company flows, please refer to the flow_types table\
            \ above for more details."
          enum:
          - Company
          - Employee
          type: string
      required:
      - company_uuid
      - flow_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-locations:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-locations:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        phone_number:
          pattern: "[0-9]{10}"
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          default: USA
          example: USA
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-LocationsCreateCompanyLocationRequest-properties-country
        mailing_address:
          description: Specify if this location is the company's mailing address.
          type: boolean
        filing_address:
          description: Specify if this location is the company's filing address.
          type: boolean
      required:
      - city
      - company_id
      - phone_number
      - state
      - street_1
      - zip
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-locations-location_id:
      properties:
        location_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - location_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - location_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-locations-location_id:
      properties:
        location_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        phone_number:
          pattern: "[0-9]{10}"
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        mailing_address:
          description: "For a company location, specify if this location is the company's\
            \ mailing address. A company has a single mailing address, so this designation\
            \ will override any previous selection."
          type: boolean
        filing_address:
          description: "For a company location, specify if this location is the company's\
            \ filing address. A company has a single filing address, so this designation\
            \ will override any previous selection."
          type: boolean
      required:
      - location_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - location_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-locations-location_uuid-minimum_wages:
      properties:
        location_uuid:
          type: string
        effective_date:
          example: 2020-01-31
          type: string
          x-konfig-original-example: 2020-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-effective_date-schema
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - location_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - location_uuid
      - effective_date
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-bank_accounts:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-bank_accounts:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        routing_number:
          description: The bank routing number
          nullable: false
          type: string
        account_number:
          description: The bank account number
          nullable: false
          type: string
        account_type:
          description: The bank account type
          enum:
          - Checking
          - Savings
          nullable: false
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-bank_accounts-bank_account_uuid-verify:
      properties:
        bank_account_uuid:
          type: string
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        deposit_1:
          description: The dollar amount of the first micro-deposit
          nullable: false
          type: number
        deposit_2:
          description: The dollar amount of the second micro-deposit
          nullable: false
          type: number
      required:
      - bank_account_uuid
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - bank_account_uuid
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-external_payrolls:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        check_date:
          description: External payroll's check date.
          type: string
        payment_period_start_date:
          description: External payroll's pay period start date.
          type: string
        payment_period_end_date:
          description: External payroll's pay period end date.
          type: string
      required:
      - check_date
      - company_uuid
      - payment_period_end_date
      - payment_period_start_date
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-external_payrolls-external_payroll_id:
      properties:
        company_uuid:
          type: string
        external_payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      - external_payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - external_payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-external_payroll_id:
      properties:
        company_uuid:
          type: string
        external_payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      - external_payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - external_payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-external_payroll_id:
      properties:
        company_uuid:
          type: string
        external_payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        replace_fields:
          description: "Patch update external payroll items when set to true, otherwise\
            \ it will overwrite the previous changes."
          type: boolean
        external_payroll_items:
          items:
            description: "Submit wages, benefits, taxes for each employee"
            properties:
              employee_uuid:
                description: The UUID of the employee.
                type: string
              earnings:
                items:
                  description: "An array of earnings for the employee. Depends on\
                    \ your company selections, earnings includes wages, hours, bonuses,\
                    \ tips, commission and more."
                  properties:
                    hours:
                      description: The hour of the compensation for the pay period.
                      type: string
                    amount:
                      description: The amount of the earning.
                      type: string
                    earning_id:
                      description: The ID of the earning.
                      type: integer
                    earning_type:
                      description: The earning type for the compensation.
                      enum:
                      - CompanyPayType
                      - CompanyEarningType
                      type: string
                  type: object
                type: array
              benefits:
                items:
                  description: "An array of benefits for the employee. Depends on\
                    \ your company selections, benefits include 401k, health insurance\
                    \ and more."
                  properties:
                    company_contribution_amount:
                      description: Company contribution amount towards the benefit
                      type: string
                    employee_deduction_amount:
                      description: Employee deduction amount towards the benefit
                      type: string
                    benefit_id:
                      description: The ID of the benefit.
                      type: integer
                  type: object
                type: array
              taxes:
                description: "An array of taxes for the employee. Depends on your\
                  \ company selections, taxes include federal income tax, social security,\
                  \ medicare, and more."
                items:
                  properties:
                    amount:
                      description: The amount of the tax.
                      type: string
                    tax_id:
                      description: The ID of the tax.
                      type: integer
                  type: object
                type: array
            type: object
          type: array
      required:
      - company_uuid
      - external_payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - external_payroll_id
      - X-Gusto-API-Version
    ? konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-external_payroll_id-calculate_taxes
    : properties:
        company_uuid:
          type: string
        external_payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      - external_payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - external_payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-external_payrolls-tax_liabilities:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-tax_liabilities:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        liability_selections:
          items:
            description: ""
            properties:
              tax_id:
                description: The ID of the tax.
                type: integer
              last_unpaid_external_payroll_uuid:
                description: The UUID of the last unpaid external payroll uuid. It
                  should be null when the full amount of tax liability has been paid.
                nullable: true
                type: string
              unpaid_liability_amount:
                description: A selection of unpaid liability amount.
                type: number
            type: object
          type: array
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-external_payrolls-tax_liabilities-finish:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-payment_configs:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-payment_configs:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        fast_payment_limit:
          description: Fast payment limit. This limit is an aggregate of all fast
            payrolls amount.
          type: string
        payment_speed:
          description: "Gusto Embedded supports three payment speeds (1-day, 2-day,\
            \ and 4-day). For next-day payments, funds are deposited in your team's\
            \ bank account by the end of the next business day. Most people will see\
            \ the funds arrive the next afternoon, but payments may arrive as late\
            \ as the end of the business day."
          enum:
          - 1-day
          - 2-day
          - 4-day
          type: string
      required:
      - company_uuid
      - fast_payment_limit
      - payment_speed
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        frequency:
          description: The frequency that employees on this pay schedule are paid
            with Gusto.
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        anchor_pay_date:
          description: The first date that employees on this pay schedule are paid
            with Gusto.
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_pay_date
        anchor_end_of_pay_period:
          description: The last date of the first pay period. This can be the same
            date as the anchor pay date.
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesCreateNewRequest-properties-anchor_end_of_pay_period
        day_1:
          description: An integer between 1 and 31 indicating the first day of the
            month that employees are paid. This field is only relevant for pay schedules
            with the “Twice per month” and “Monthly” frequencies. It will be null
            for pay schedules with other frequencies.
          nullable: true
          type: integer
        day_2:
          description: "An integer between 1 and 31 indicating the second day of the\
            \ month that employees are paid. This field is the second pay date for\
            \ pay schedules with the \"Twice per month\" frequency. For semi-monthly\
            \ pay schedules, set this field to 31. For months shorter than 31 days,\
            \ we will set the second pay date to the last day of the month. It will\
            \ be null for pay schedules with other frequencies."
          nullable: true
          type: integer
        custom_name:
          description: "A custom pay schedule name, defaults to the pay frequency\
            \ description."
          type: string
      required:
      - anchor_end_of_pay_period
      - anchor_pay_date
      - company_id
      - frequency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-preview:
      properties:
        company_id:
          type: string
        frequency:
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        anchor_pay_date:
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-2-schema
        anchor_end_of_pay_period:
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-pay_schedules-preview-get-parameters-3-schema
        day_1:
          type: integer
        day_2:
          type: integer
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - frequency
      - anchor_pay_date
      - anchor_end_of_pay_period
      - day_1
      - day_2
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-pay_schedule_id:
      properties:
        company_id:
          type: string
        pay_schedule_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - pay_schedule_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - pay_schedule_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-pay_schedules-pay_schedule_id:
      properties:
        company_id:
          type: string
        pay_schedule_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        frequency:
          description: The frequency that employees on this pay schedule are paid
            with Gusto.
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          type: string
        anchor_pay_date:
          description: The first date that employees on this pay schedule are paid
            with Gusto.
          example: 2020-05-15
          type: string
          x-konfig-original-example: 2020-05-15
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_pay_date
        anchor_end_of_pay_period:
          description: The last date of the first pay period. This can be the same
            date as the anchor pay date.
          example: 2020-05-08
          type: string
          x-konfig-original-example: 2020-05-08
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PaySchedulesUpdatePayScheduleRequest-properties-anchor_end_of_pay_period
        day_1:
          description: An integer between 1 and 31 indicating the first day of the
            month that employees are paid. This field is only relevant for pay schedules
            with the “Twice per month” and “Monthly” frequencies. It will be null
            for pay schedules with other frequencies.
          nullable: true
          type: integer
        day_2:
          description: "An integer between 1 and 31 indicating the second day of the\
            \ month that employees are paid. This field is the second pay date for\
            \ pay schedules with the \"Twice per month\" frequency. For semi-monthly\
            \ pay schedules, set this field to 31. For months shorter than 31 days,\
            \ we will set the second pay date to the last day of the month. It will\
            \ be null for pay schedules with other frequencies."
          nullable: true
          type: integer
        custom_name:
          description: A custom pay schedule name.
          type: string
        auto_pilot:
          description: "With Autopilot® enabled, payroll will run automatically one\
            \ day before your payroll deadlines."
          type: boolean
      required:
      - company_id
      - pay_schedule_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - pay_schedule_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_periods:
      properties:
        company_id:
          type: string
        start_date:
          example: 2020-01-01
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-start_date-schema
        end_date:
          example: 2020-01-31
          type: string
          x-konfig-original-example: 2020-01-31
          x-konfig-generated-schema: konfig-generated-schema-components-parameters-end_date-schema
        payroll_types:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - start_date
      - end_date
      - payroll_types
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_periods-unprocessed_termination_pay_periods:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-pay_schedules-assignments:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules-assignment_preview:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          type: string
        hourly_pay_schedule_uuid:
          description: Pay schedule for hourly employees.
          type: string
        salaried_pay_schedule_uuid:
          description: Pay schedule for salaried employees.
          type: string
        default_pay_schedule_uuid:
          description: Default pay schedule for employees.
          type: string
        employees:
          description: List of employees and their pay schedules.
          items:
            properties:
              employee_uuid:
                description: Employee UUID
                type: string
              pay_schedule_uuid:
                description: Pay schedule UUID
                type: string
            type: object
          type: array
        departments:
          description: List of departments and their pay schedules.
          items:
            properties:
              department_uuid:
                description: Department UUID
                type: string
              pay_schedule_uuid:
                description: Pay schedule UUID
                type: string
            type: object
          type: array
      required:
      - company_id
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-pay_schedules-assign:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        type:
          description: The pay schedule assignment type.
          enum:
          - single
          - hourly_salaried
          - by_employee
          - by_department
          type: string
        hourly_pay_schedule_uuid:
          description: Pay schedule for hourly employees.
          type: string
        salaried_pay_schedule_uuid:
          description: Pay schedule for salaried employees.
          type: string
        default_pay_schedule_uuid:
          description: Default pay schedule for employees.
          type: string
        employees:
          description: List of employees and their pay schedules.
          items:
            properties:
              employee_uuid:
                description: Employee UUID
                type: string
              pay_schedule_uuid:
                description: Pay schedule UUID
                type: string
            type: object
          type: array
        departments:
          description: List of departments and their pay schedules.
          items:
            properties:
              department_uuid:
                description: Department UUID
                type: string
              pay_schedule_uuid:
                description: Pay schedule UUID
                type: string
            type: object
          type: array
      required:
      - company_id
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-employees:
      properties:
        company_id:
          type: string
        terminated:
          type: boolean
        include:
          enum:
          - all_compensations
          - custom_fields
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - terminated
      - include
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-employees:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
        email:
          type: string
        ssn:
          pattern: "[0-9]{9}"
          type: string
        self_onboarding:
          description: "If true, employee is expected to self-onboard. If false, payroll\
            \ admin is expected to enter in the employee's onboarding information"
          type: boolean
      required:
      - company_id
      - first_name
      - last_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-departments:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-departments:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-departments-department_uuid:
      properties:
        department_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - department_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-departments-department_uuid:
      properties:
        department_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - department_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid:
      properties:
        department_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
      required:
      - department_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid-add:
      properties:
        department_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        employees:
          description: Array of employees to add to the department
          items:
            properties:
              uuid:
                type: string
          type: array
        contractors:
          description: Array of contractors to add to the department
          items:
            properties:
              uuid:
                type: string
          type: array
      required:
      - department_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-departments-department_uuid-remove:
      properties:
        department_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        employees:
          description: Array of employees to remove from a department
          items:
            properties:
              uuid:
                type: string
          type: array
        contractors:
          description: Array of contractors to remove from a department
          items:
            properties:
              uuid:
                type: string
          type: array
      required:
      - department_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - department_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id:
      properties:
        employee_id:
          type: string
        include:
          enum:
          - all_compensations
          - custom_fields
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - include
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        first_name:
          type: string
        middle_initial:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
        email:
          type: string
        ssn:
          pattern: "[0-9]{9}"
          type: string
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          type: boolean
      required:
      - employee_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-terminations:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-terminations:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-terminations:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        effective_date:
          description: The employee's last day of work.
          type: string
        run_termination_payroll:
          description: "If true, the employee should receive their final wages via\
            \ an off-cycle payroll. If false, they should receive their final wages\
            \ on their current pay schedule."
          type: boolean
      required:
      - effective_date
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-terminations-employee_id:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        effective_date:
          description: The employee's last day of work.
          type: string
        run_termination_payroll:
          description: "If true, the employee should receive their final wages via\
            \ an off-cycle payroll. If false, they should receive their final wages\
            \ on their current pay schedule."
          type: boolean
      required:
      - effective_date
      - employee_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-rehire:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-rehire:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-rehire:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        effective_date:
          description: The day when the employee returns to work.
          type: string
        file_new_hire_report:
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the employee.
          type: boolean
        work_location_uuid:
          description: The uuid of the employee's work location.
          type: string
        employment_status:
          description: The employee's employment status. Supplying an invalid option
            will set the employment_status to *not_set*.
          enum:
          - part_time
          - full_time
          - part_time_eligible
          - variable
          - seasonal
          - not_set
          type: string
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          type: boolean
      required:
      - effective_date
      - employee_id
      - file_new_hire_report
      - work_location_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-rehire:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        effective_date:
          description: The day when the employee returns to work.
          type: string
        file_new_hire_report:
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the employee.
          type: boolean
        work_location_uuid:
          description: The uuid of the employee's work location.
          type: string
        employment_status:
          description: The employee's employment status. Supplying an invalid option
            will set the employment_status to *not_set*.
          enum:
          - part_time
          - full_time
          - part_time_eligible
          - variable
          - seasonal
          - not_set
          type: string
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          type: boolean
      required:
      - effective_date
      - employee_id
      - file_new_hire_report
      - version
      - work_location_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-employment_history:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-home_addresses:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-home_addresses:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        effective_date:
          format: date
          type: string
        courtesy_withholding:
          type: boolean
      required:
      - employee_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-home_addresses-home_address_uuid:
      properties:
        home_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - home_address_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - home_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-home_addresses-home_address_uuid:
      properties:
        home_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - home_address_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - home_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-home_addresses-home_address_uuid:
      properties:
        home_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        effective_date:
          format: date
          type: string
        courtesy_withholding:
          type: boolean
      required:
      - home_address_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - home_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-work_addresses:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-work_addresses:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        location_uuid:
          description: Reference to a company location
          type: string
        effective_date:
          description: Date the employee began working at the company location
          format: date
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-work_addresses-work_address_uuid:
      properties:
        work_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - work_address_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - work_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-work_addresses-work_address_uuid:
      properties:
        work_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - work_address_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - work_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-work_addresses-work_address_uuid:
      properties:
        work_address_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        location_uuid:
          description: Reference to a company location
          type: string
        effective_date:
          format: date
          type: string
      required:
      - work_address_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - work_address_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-custom_fields:
      properties:
        employee_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-onboarding_status:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-onboarding_status:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        onboarding_status:
          description: The updated onboarding status for the employee
          type: string
      required:
      - employee_id
      - onboarding_status
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-finish_onboarding:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-federal_taxes:
      properties:
        employee_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_uuid-federal_taxes:
      properties:
        employee_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        filing_status:
          type: string
        extra_withholding:
          nullable: true
          type: string
        two_jobs:
          type: boolean
        dependents_amount:
          type: string
        other_income:
          type: string
        deductions:
          type: string
        w4_data_type:
          type: string
      required:
      - employee_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-state_taxes:
      properties:
        employee_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_uuid-state_taxes:
      properties:
        employee_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        states:
          items:
            properties:
              state:
                type: string
              questions:
                items:
                  properties:
                    key:
                      type: string
                    answers:
                      items:
                        properties:
                          value:
                            type: string
                          valid_from:
                            type: string
                          valid_up_to:
                            nullable: true
                        required:
                        - valid_from
                        - value
                        type: object
                      type: array
                      uniqueItems: true
                  required:
                  - key
                  type: object
                type: array
                uniqueItems: true
            required:
            - state
            type: object
          type: array
          uniqueItems: true
      required:
      - employee_uuid
      - states
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-bank_accounts:
      properties:
        employee_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-bank_accounts:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        account_type:
          enum:
          - Checking
          - Savings
          type: string
      required:
      - account_number
      - account_type
      - employee_id
      - name
      - routing_number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-employees-employee_id-bank_accounts-bank_account_uuid:
      properties:
        employee_id:
          type: string
        bank_account_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - bank_account_uuid
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - bank_account_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-payment_method:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-payment_method:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        type:
          description: "The payment method type. If type is Check, then split_by and\
            \ splits do not need to be populated. If type is Direct Deposit, split_by\
            \ and splits are required."
          enum:
          - Direct Deposit
          - Check
          type: string
        split_by:
          description: "Describes how the payment will be split. If split_by is Percentage,\
            \ then the split amounts must add up to exactly 100. If split_by is Amount,\
            \ then the last split amount must be nil to capture the remainder."
          enum:
          - Amount
          - Percentage
          type: string
        splits:
          items:
            properties:
              uuid:
                description: |
                  The bank account ID
                type: string
              name:
                description: The bank account name
                type: string
              priority:
                description: "The order of priority for each payment split, with priority\
                  \ 1 being the first bank account paid. Priority must be unique and\
                  \ sequential."
                type: integer
              split_amount:
                description: The cents amount allocated for each payment split
                nullable: true
                type: integer
            type: object
          type: array
      required:
      - employee_id
      - type
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-jobs:
      properties:
        employee_id:
          type: string
        page:
          type: number
        per:
          type: number
        include:
          enum:
          - all_compensations
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - page
      - per
      - include
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-jobs:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          description: The job title
          type: string
        hire_date:
          description: The date when the employee was hired or rehired for the job.
          type: string
        two_percent_shareholder:
          description: Whether the employee owns at least 2% of the company.
          type: boolean
        state_wc_covered:
          description: Whether this job is eligible for workers' compensation coverage
            in the state of Washington (WA).
          type: boolean
        state_wc_class_code:
          description: "The risk class code for workers' compensation in Washington\
            \ state. Please visit [Washington state's Risk Class page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)\
            \ to learn more."
          type: string
      required:
      - employee_id
      - hire_date
      - title
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_uuid-time_off_activities:
      properties:
        employee_uuid:
          type: string
        time_off_type:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_uuid
      - time_off_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_uuid
      - time_off_type
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-jobs-job_id:
      properties:
        job_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - job_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - job_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-jobs-job_id:
      properties:
        job_id:
          type: string
        include:
          enum:
          - all_compensations
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - job_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - job_id
      - include
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-jobs-job_id:
      properties:
        job_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        title:
          description: The job title
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        hire_date:
          description: The date when the employee was hired or rehired for the job.
          type: string
        two_percent_shareholder:
          description: Whether the employee owns at least 2% of the company.
          type: boolean
        state_wc_covered:
          description: Whether this job is eligible for workers' compensation coverage
            in the state of Washington (WA).
          type: boolean
        state_wc_class_code:
          description: "The risk class code for workers' compensation in Washington\
            \ state. Please visit [Washington state's Risk Class page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)\
            \ to learn more."
          type: string
      required:
      - job_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - job_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-jobs-job_id-compensations:
      properties:
        job_id:
          type: string
        page:
          type: number
        per:
          type: number
        include:
          enum:
          - all_compensations
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - job_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - job_id
      - page
      - per
      - include
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-jobs-job_id-compensations:
      properties:
        job_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        rate:
          description: The dollar amount paid per payment unit.
          type: string
        payment_unit:
          description: "The unit accompanying the compensation rate. If the employee\
            \ is an owner, rate should be 'Paycheck'."
          enum:
          - Hour
          - Week
          - Month
          - Year
          - Paycheck
          type: string
        effective_date:
          description: The date when the compensation takes effect.
          type: string
        flsa_status:
          $ref: '#/components/schemas/Flsa-Status-Type'
        adjust_for_minimum_wage:
          description: Determines whether the compensation should be adjusted for
            minimum wage. Only applies to Nonexempt employees.
          type: boolean
        minimum_wages:
          items:
            description: The minimum wage record you want to apply to the compensation
            properties:
              uuid:
                description: The UUID of the minimum wage record. Required if adjust_for_minimum_wage
                  set to true
                type: string
            type: object
          type: array
      required:
      - flsa_status
      - job_id
      - payment_unit
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - job_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-compensations-compensation_id:
      properties:
        compensation_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - compensation_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - compensation_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-compensations-compensation_id:
      properties:
        compensation_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - compensation_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - compensation_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-compensations-compensation_id:
      properties:
        compensation_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        rate:
          description: The dollar amount paid per payment unit.
          type: string
        payment_unit:
          description: "The unit accompanying the compensation rate. If the employee\
            \ is an owner, rate should be 'Paycheck'."
          enum:
          - Hour
          - Week
          - Month
          - Year
          - Paycheck
          type: string
        flsa_status:
          $ref: '#/components/schemas/Flsa-Status-Type'
        adjust_for_minimum_wage:
          description: Determines whether the compensation should be adjusted for
            minimum wage. Only applies to Nonexempt employees.
          type: boolean
        minimum_wages:
          items:
            description: The minimum wage record you want to apply to the compensation
            properties:
              uuid:
                description: The UUID of the minimum wage record. Required if adjust_for_minimum_wage
                  set to true
                type: string
            type: object
          type: array
      required:
      - compensation_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - compensation_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-earning_types:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-earning_types:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          description: The name of the custom earning type.
          type: string
      required:
      - company_id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-earning_types-earning_type_uuid:
      properties:
        company_id:
          type: string
        earning_type_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - earning_type_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - earning_type_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-earning_types-earning_type_uuid:
      properties:
        company_id:
          type: string
        earning_type_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          description: The name of the custom earning type.
          type: string
      required:
      - company_id
      - earning_type_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - earning_type_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractors:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-contractors:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        type:
          default: Individual
          description: The contractor type.
          enum:
          - Individual
          - Business
          example: Individual
          type: string
          x-konfig-original-example: Individual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-type
        wage_type:
          description: |
            The contractor’s wage type.
          enum:
          - Fixed
          - Hourly
          type: string
        start_date:
          description: |
            The day when the contractor will start working for the company.
          example: 2020-01-11
          type: string
          x-konfig-original-example: 2020-01-11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-start_date
        hourly_rate:
          description: The contractor’s hourly rate. This attribute is required if
            the wage_type is `Hourly`.
          example: "40.0"
          type: string
          x-konfig-original-example: "40.0"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-hourly_rate
        self_onboarding:
          default: false
          description: |-
            Whether the contractor or the payroll admin will complete onboarding in Gusto.
            Self-onboarding is recommended so that contractors receive Gusto accounts.
            If self_onboarding is true, then email is required.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-self_onboarding
        email:
          description: The contractor’s email address.
          type: string
        first_name:
          description: |-
            The contractor’s first name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        last_name:
          description: |-
            The contractor’s last name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        middle_initial:
          description: |-
            The contractor’s middle initial.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        file_new_hire_report:
          default: false
          description: |-
            The boolean flag indicating whether Gusto will file a new hire report for the contractor.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-file_new_hire_report
        work_state:
          description: |-
            State where the contractor will be conducting the majority of their work for the company.
            This value is used when generating the new hire report.
            This attribute is required for `Individual` contractors if `file_new_hire_report` is true and will be ignored for `Business` contractors.
          nullable: true
          type: string
        ssn:
          description: |-
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
            Social security number is needed to file the annual 1099 tax form.
          pattern: "[0-9]{9}"
          type: string
        business_name:
          description: The name of the contractor business. This attribute is required
            for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        ein:
          description: |-
            The employer identification number of the contractor business.
            This attribute is optional for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        is_active:
          description: The status of the contractor.
          type: boolean
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-contractors-contractor_id:
      properties:
        contractor_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_id:
      properties:
        contractor_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_id:
      properties:
        contractor_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        type:
          default: Individual
          description: The contractor type.
          enum:
          - Individual
          - Business
          example: Individual
          type: string
          x-konfig-original-example: Individual
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-type
        wage_type:
          description: |
            The contractor’s wage type.
          enum:
          - Fixed
          - Hourly
          type: string
        start_date:
          description: |
            The day when the contractor will start working for the company.
          example: 2020-01-11
          type: string
          x-konfig-original-example: 2020-01-11
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-start_date
        hourly_rate:
          description: The contractor’s hourly rate. This attribute is required if
            the wage_type is `Hourly`.
          example: "40.0"
          type: string
          x-konfig-original-example: "40.0"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-hourly_rate
        self_onboarding:
          default: false
          description: |-
            Whether the contractor or the payroll admin will complete onboarding in Gusto.
            Self-onboarding is recommended so that contractors receive Gusto accounts.
            If self_onboarding is true, then email is required.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-self_onboarding
        email:
          description: The contractor’s email address.
          type: string
        first_name:
          description: |-
            The contractor’s first name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        last_name:
          description: |-
            The contractor’s last name.
            This attribute is required for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        middle_initial:
          description: |-
            The contractor’s middle initial.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          type: string
        file_new_hire_report:
          default: false
          description: |-
            The boolean flag indicating whether Gusto will file a new hire report for the contractor.
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Body-properties-file_new_hire_report
        work_state:
          description: |-
            State where the contractor will be conducting the majority of their work for the company.
            This value is used when generating the new hire report.
            This attribute is required for `Individual` contractors if `file_new_hire_report` is true and will be ignored for `Business` contractors.
          nullable: true
          type: string
        ssn:
          description: |-
            This attribute is optional for `Individual` contractors and will be ignored for `Business` contractors.
            Social security number is needed to file the annual 1099 tax form.
          pattern: "[0-9]{9}"
          type: string
        business_name:
          description: The name of the contractor business. This attribute is required
            for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        ein:
          description: |-
            The employer identification number of the contractor business.
            This attribute is optional for `Business` contractors and will be ignored for `Individual` contractors.
          type: string
        is_active:
          description: The status of the contractor.
          type: boolean
      required:
      - contractor_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-bank_accounts:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-contractors-contractor_uuid-bank_accounts:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        account_type:
          enum:
          - Checking
          - Savings
          type: string
      required:
      - account_number
      - account_type
      - contractor_uuid
      - name
      - routing_number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-webhook_subscriptions:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        url:
          type: string
        subscription_types:
          items:
            enum:
            - BankAccount
            - Company
            - CompanyBenefit
            - Contractor
            - ContractorPayment
            - Employee
            - EmployeeBenefit
            - EmployeeJobCompensation
            - ExternalPayroll
            - Form
            - Location
            - Notification
            - Payroll
            - PaySchedule
            - Signatory
            type: string
          type: array
      required:
      - subscription_types
      - url
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-webhook_subscriptions-webhook_subscription_uuid:
      properties:
        webhook_subscription_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - webhook_subscription_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhook_subscription_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions-webhook_subscription_uuid:
      properties:
        webhook_subscription_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - webhook_subscription_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhook_subscription_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-webhook_subscriptions-webhook_subscription_uuid:
      properties:
        webhook_subscription_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        subscription_types:
          items:
            enum:
            - BankAccount
            - Company
            - CompanyBenefit
            - Contractor
            - ContractorPayment
            - Employee
            - EmployeeBenefit
            - EmployeeJobCompensation
            - ExternalPayroll
            - Form
            - Location
            - Notification
            - Payroll
            - PaySchedule
            - Signatory
            type: string
          type: array
      required:
      - subscription_types
      - webhook_subscription_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhook_subscription_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-webhook_subscriptions-webhook_subscription_uuid-verify:
      properties:
        webhook_subscription_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        verification_token:
          description: The token POSTed to the Subscription URL.
          type: string
      required:
      - verification_token
      - webhook_subscription_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhook_subscription_uuid
      - X-Gusto-API-Version
    ? konfig-generated-schema-single-parameter-schema-get--v1-webhook_subscriptions-webhook_subscription_uuid-request_verification_token
    : properties:
        webhook_subscription_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - webhook_subscription_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhook_subscription_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms-form_id:
      properties:
        contractor_uuid:
          type: string
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-forms-form_id-pdf:
      properties:
        contractor_uuid:
          type: string
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-sandbox-generate_1099:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        contractor_id:
          description: The contractor UUID.
          type: string
        year:
          description: |
            Must be equal to or more recent than 2015. If not specified, defaults to the previous year.
          type: integer
      required:
      - contractor_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-sandbox-generate_w2:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employee_id:
          description: The employee UUID.
          type: string
        year:
          description: |
            Must be equal to or more recent than 2015. If not specified, defaults to the previous year.
          type: integer
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-payment_method:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-payment_method:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        type:
          description: |-
            The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
            see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
          enum:
          - Direct Deposit
          - Check
          type: string
      required:
      - contractor_uuid
      - type
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-onboarding_status:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-onboarding_status:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        onboarding_status:
          default: onboarding_completed
          description: The updated onboarding status for the employee
          enum:
          - onboarding_completed
          example: onboarding_completed
          type: string
          x-konfig-original-example: onboarding_completed
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorsChangeOnboardingStatusRequest-properties-onboarding_status
      required:
      - contractor_uuid
      - onboarding_status
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractors-contractor_uuid-address:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-contractors-contractor_uuid-address:
      properties:
        contractor_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        street_1:
          type: string
        street_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      required:
      - contractor_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payrolls:
      properties:
        company_id:
          type: string
        processing_statuses:
          enum:
          - unprocessed
          - processed
          type: string
        payroll_types:
          enum:
          - regular
          - off_cycle
          - external
          type: string
        include:
          enum:
          - totals
          - payroll_status_meta
          type: string
        start_date:
          type: string
        end_date:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - processing_statuses
      - payroll_types
      - include
      - start_date
      - end_date
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-payrolls:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        off_cycle:
          description: Whether it is an off cycle payroll.
          type: boolean
        off_cycle_reason:
          description: An off cycle payroll reason. Select one from the following
            list.
          enum:
          - Bonus
          - Correction
          - Dismissed employee
          - Transition from old pay schedule
          type: string
        start_date:
          description: Pay period start date.
          type: string
        end_date:
          description: Pay period end date.
          type: string
        pay_schedule_uuid:
          description: A pay schedule is required for Transition from old pay schedule
            payroll to identify the matching transition pay period.
          type: string
        employee_uuids:
          description: A list of employee uuids to include on the payroll.
          items:
            type: string
          type: array
        check_date:
          description: Payment date.
          type: string
        withholding_pay_period:
          description: The payment schedule tax rate the payroll is based on
          enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          - Quarterly
          - Semiannually
          - Annually
          type: string
        skip_regular_deductions:
          description: Block regular deductions and contributions for this payroll.
          type: boolean
        fixed_withholding_rate:
          description: "Enable taxes to be withheld at the IRS's required rate of\
            \ 22% for federal income taxes. State income taxes will be taxed at the\
            \ state's supplemental tax rate. Otherwise, we'll sum the entirety of\
            \ the employee's wages and withhold taxes on the entire amount at the\
            \ rate for regular wages."
          type: boolean
      required:
      - company_id
      - end_date
      - off_cycle
      - off_cycle_reason
      - start_date
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payroll_reversals:
      properties:
        company_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-payrolls-payroll_id:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        async:
          type: boolean
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - async
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-payrolls-payroll_id:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        include:
          enum:
          - benefits
          - deductions
          - taxes
          - payroll_status_meta
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - include
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employee_compensations:
          items:
            description: ""
            properties:
              version:
                description: "The current version of this employee compensation from\
                  \ the prepared payroll. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
                  \ for information on how to use this field."
                type: string
              employee_uuid:
                description: The UUID of the employee.
                type: string
              excluded:
                description: This employee will be excluded from payroll calculation
                  and will not be paid for the payroll.
                type: boolean
              payment_method:
                description: The employee's compensation payment method. Invalid values
                  will be ignored.
                enum:
                - Direct Deposit
                - Check
                type: string
              memo:
                description: Custom text that will be printed as a personal note to
                  the employee on a paystub.
                type: string
              fixed_compensations:
                items:
                  description: "An array of fixed compensations for the employee.\
                    \ Fixed compensations include tips, bonuses, and one time reimbursements."
                  properties:
                    name:
                      description: "The name of the compensation. This also serves\
                        \ as the unique, immutable identifier for this compensation."
                      type: string
                    amount:
                      description: The amount of the compensation for the pay period.
                      type: string
                    job_uuid:
                      description: The UUID of the job for the compensation.
                      type: integer
                  type: object
                type: array
              hourly_compensations:
                items:
                  description: "An array of hourly compensations for the employee.\
                    \ Hourly compensations include regular, overtime, and double overtime\
                    \ hours."
                  properties:
                    name:
                      description: "The name of the compensation. This also serves\
                        \ as the unique, immutable identifier for this compensation."
                      type: string
                    hours:
                      description: The number of hours to be compensated for this
                        pay period.
                      type: string
                    job_uuid:
                      description: The UUIDs of the job for the compensation.
                      type: integer
                  type: object
                type: array
              paid_time_off:
                description: An array of all paid time off the employee is eligible
                  for this pay period. Each paid time off object can be the name or
                  the specific policy_uuid.
                items:
                  properties:
                    name:
                      description: "The name of the PTO. This also serves as the unique,\
                        \ immutable identifier for the PTO. Must pass in name or policy_uuid\
                        \ but not both."
                      type: string
                    hours:
                      description: The hours of this PTO taken during the pay period.
                      type: string
                    policy_uuid:
                      description: The uuid of the PTO policy. Must pass in name or
                        policy_uuid but not both.
                      type: string
                    final_payout_unused_hours_input:
                      description: The outstanding hours paid upon termination. This
                        field is only applicable for termination payrolls.
                      type: string
                  type: object
                type: array
            type: object
          type: array
      required:
      - company_id
      - employee_compensations
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-prepare:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-payrolls-payroll_uuid-receipt:
      properties:
        payroll_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - payroll_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payroll_uuid
      - X-Gusto-API-Version
    ? konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_id-employees-employee_id-calculate_accruing_time_off_hours
    : properties:
        payroll_id:
          type: string
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        regular_hours_worked:
          description: regular hours worked in this pay period
          type: number
        overtime_hours_worked:
          description: overtime hours worked in this pay period
          type: number
        double_overtime_hours_worked:
          description: double overtime hours worked in this pay period
          type: number
        pto_hours_used:
          description: paid time off hours used in this pay period
          type: number
        sick_hours_used:
          description: sick hours used in this pay period
          type: number
      required:
      - employee_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payroll_id
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-payrolls-blockers:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-payrolls-skip:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        payroll_type:
          description: Payroll type
          enum:
          - Regular
          - Hired employee
          - Dismissed employee
          - Transition from old pay schedule
          type: string
        start_date:
          description: Pay period start date
          type: string
        end_date:
          description: Pay period end date
          type: string
        pay_schedule_uuid:
          description: The UUID of the pay schedule
          type: string
        employee_uuids:
          description: An array of employees. This field is only applicable to new
            hire payroll and termination payroll
          items:
            type: string
          type: array
      required:
      - company_uuid
      - payroll_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_uuid-gross_up:
      properties:
        payroll_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employee_uuid:
          description: Employee UUID
          type: string
        net_pay:
          description: Employee net earnings
          type: string
      required:
      - employee_uuid
      - net_pay
      - payroll_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payroll_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-contractor_payments-contractor_payment_uuid-receipt:
      properties:
        contractor_payment_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_payment_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_payment_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-contractor_payments-contractor_payment_uuid-fund:
      properties:
        contractor_payment_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - contractor_payment_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - contractor_payment_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-calculate:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-submit:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_id-payrolls-payroll_id-cancel:
      properties:
        company_id:
          type: string
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractor_payments:
      properties:
        company_id:
          type: string
        start_date:
          example: 2020-01-01
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-1-schema
        end_date:
          example: 2020-12-31
          type: string
          x-konfig-original-example: 2020-12-31
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-companies-company_id-contractor_payments-get-parameters-2-schema
        contractor_uuid:
          type: string
        group_by_date:
          type: boolean
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - end_date
      - start_date
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - start_date
      - end_date
      - contractor_uuid
      - group_by_date
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-contractor_payments:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        contractor_uuid:
          description: The contractor receiving the payment
          type: string
        date:
          description: The contractor receiving the payment
          example: 2020-01-01
          format: date
          type: string
          x-konfig-original-example: 2020-01-01
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-date
        payment_method:
          default: Direct Deposit
          enum:
          - Direct Deposit
          - Check
          - Historical Payment
          example: Direct Deposit
          type: string
          x-konfig-original-example: Direct Deposit
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-payment_method
        wage:
          description: "If the contractor is on a fixed wage, this is the fixed wage\
            \ payment for the contractor, regardless of hours worked"
          example: 5000
          type: number
          x-konfig-original-example: 5000
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-wage
        hours:
          description: "If the contractor is on an hourly wage, this is the number\
            \ of hours that the contractor worked for the payment"
          example: 40
          type: number
          x-konfig-original-example: 40
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-hours
        bonus:
          description: "If the contractor is on an hourly wage, this is the bonus\
            \ the contractor earned"
          example: 500
          type: number
          x-konfig-original-example: 500
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-bonus
        reimbursement:
          description: Reimbursed wages for the contractor
          example: 20
          type: number
          x-konfig-original-example: 20
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ContractorPaymentsCreatePaymentRequest-properties-reimbursement
      required:
      - company_id
      - contractor_uuid
      - date
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_id-contractor_payments-contractor_payment_id:
      properties:
        company_id:
          type: string
        contractor_payment_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - contractor_payment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - contractor_payment_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-contractor_payments-contractor_payment_id:
      properties:
        company_id:
          type: string
        contractor_payment_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      - contractor_payment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - contractor_payment_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-forms:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-forms-form_id:
      properties:
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-forms-form_id-pdf:
      properties:
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-forms-form_id-sign:
      properties:
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        signature_text:
          description: The signature
          type: string
        agree:
          description: whether you agree to sign electronically
          type: boolean
        signed_by_ip_address:
          description: The IP address of the signatory who signed the form.
          type: string
      required:
      - agree
      - form_id
      - signature_text
      - signed_by_ip_address
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms-form_id:
      properties:
        employee_id:
          type: string
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-forms-form_id-pdf:
      properties:
        employee_id:
          type: string
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      - form_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employees-employee_id-forms-form_id-sign:
      properties:
        employee_id:
          type: string
        form_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        signature_text:
          description: The signature
          type: string
        agree:
          description: whether you agree to sign electronically
          type: boolean
        signed_by_ip_address:
          description: The IP address of the signatory who signed the form.
          type: string
      required:
      - agree
      - employee_id
      - form_id
      - signature_text
      - signed_by_ip_address
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - form_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-payrolls-payroll_id-employees-employee_id-pay_stub:
      properties:
        payroll_id:
          type: string
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      - payroll_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payroll_id
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-pay_stubs:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-generated_documents-document_type-request_uuid:
      properties:
        document_type:
          type: string
        request_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - document_type
      - request_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - document_type
      - request_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-payrolls-payroll_id-generated_documents-printable_payroll_checks:
      properties:
        payroll_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        printing_format:
          description: "The type of check stock being printed. Check this [link](https://support.gusto.com/article/999877761000000/Pay-your-team-by-check)\
            \ for more info on check types"
          type: string
        starting_check_number:
          description: The starting check number for the checks being generated
          type: integer
      required:
      - payroll_id
      - printing_format
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - payroll_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_id-company_benefits:
      properties:
        company_id:
          type: string
        enrollment_count:
          type: boolean
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - enrollment_count
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_id-company_benefits:
      properties:
        company_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          type: string
        benefit_type:
          description: The ID of the benefit to which the company benefit belongs.
          type: number
        active:
          default: true
          description: Whether this benefit is active for employee participation.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CompanyBenefitsCreateBenefitRequest-properties-active
        responsible_for_employer_taxes:
          description: Whether the employer is subject to pay employer taxes when
            an employee is on leave. Only applicable to third party sick pay benefits.
          type: boolean
        responsible_for_employee_w2:
          description: Whether the employer is subject to file W-2 forms for an employee
            on leave. Only applicable to third party sick pay benefits.
          type: boolean
      required:
      - benefit_id
      - company_id
      - description
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-company_benefits-company_benefit_id:
      properties:
        company_benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-company_benefits-company_benefit_id:
      properties:
        company_benefit_id:
          type: string
        with_employee_benefits:
          type: boolean
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_benefit_id
      - with_employee_benefits
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-company_benefits-company_benefit_id:
      properties:
        company_benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        description:
          description: "The description of the company benefit.For example, a company\
            \ may offer multiple benefits with an ID of 1 (for Medical Insurance).\
            \ The description would show something more specific like “Kaiser Permanente”\
            \ or “Blue Cross/ Blue Shield”."
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          description: Whether this benefit is active for employee participation.
            Company benefits may only be deactivated if no employees are actively
            participating.
          type: boolean
      required:
      - company_benefit_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-benefits:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-benefits-benefit_id:
      properties:
        benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-company_benefits-company_benefit_id-summary:
      properties:
        company_benefit_id:
          type: string
        start_date:
          example: 2022-01-01
          type: string
          x-konfig-original-example: 2022-01-01
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-1-schema
        end_date:
          example: 2022-12-31
          type: string
          x-konfig-original-example: 2022-12-31
          x-konfig-generated-schema: konfig-generated-schema-paths--v1-company_benefits-company_benefit_id-summary-get-parameters-2-schema
        detailed:
          type: boolean
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_benefit_id
      - start_date
      - end_date
      - detailed
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-benefits-benefit_id-requirements:
      properties:
        benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-employee_benefits:
      properties:
        employee_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-employee_benefits:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        company_benefit_uuid:
          description: The UUID of the company benefit.
          type: string
        active:
          default: true
          description: Whether the employee benefit is active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-active
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-employee_deduction
        deduct_as_percentage:
          default: false
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-deduct_as_percentage
        employee_deduction_annual_maximum:
          description: The maximum employee deduction amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        contribution:
          description: An object representing the company contribution type and value.
          properties:
            type:
              description: |-
                The company contribution scheme.

                `amount`: The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

                `percentage`: The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

                `tiered`: The size of the company contribution corresponds to the size of the employee deduction relative to a tiered matching scheme.
              enum:
              - tiered
              - percentage
              - amount
              type: string
            value: {}
          type: object
        elective:
          default: false
          description: "Whether the company contribution is elective (aka \"matching\"\
            ). For `tiered`, `elective_amount`, and `elective_percentage` contribution\
            \ types this is ignored and assumed to be `true`."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-elective
        company_contribution_annual_maximum:
          description: The maximum company contribution amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        limit_option:
          description: "Some benefits require additional information to determine\
            \ their limit. For example, for an HSA benefit, the limit option should\
            \ be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit,\
            \ the limit option should be either \"Joint Filing or Single\" or \"Married\
            \ and Filing Separately\"."
          nullable: true
          type: string
        catch_up:
          default: false
          description: Whether the employee should use a benefit’s "catch up" rate.
            Only Roth 401k and 401k benefits use this value for employees over 50.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-catch_up
        coverage_amount:
          description: "The amount that the employee is insured for. Note: company\
            \ contribution cannot be present if coverage amount is set."
          nullable: true
          type: string
        coverage_salary_multiplier:
          default: "0.00"
          description: "The coverage amount as a multiple of the employee’s salary.\
            \ Only applicable for Group Term Life benefits. Note: cannot be set if\
            \ coverage amount is also set."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-coverage_salary_multiplier
        deduction_reduces_taxable_income:
          description: "Whether the employee deduction reduces taxable income or not.\
            \ Only valid for Group Term Life benefits. Note: when the value is not\
            \ \"unset\", coverage amount and coverage salary multiplier are ignored."
          enum:
          - unset
          - reduces_taxable_income
          - does_not_reduce_taxable_income
          - null
          nullable: true
          type: string
        company_contribution:
          default: "0.00"
          deprecated: true
          description: "The amount to be paid, per pay period, by the company."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-company_contribution
        contribute_as_percentage:
          default: false
          deprecated: true
          description: Whether the company contribution amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateBenefitRecordRequest-properties-contribute_as_percentage
      required:
      - company_benefit_uuid
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-employee_benefits-employee_benefit_id:
      properties:
        employee_benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employee_benefits-employee_benefit_id:
      properties:
        employee_benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_benefit_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-employee_benefits-employee_benefit_id:
      properties:
        employee_benefit_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          description: Whether the employee benefit is active.
          type: boolean
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-employee_deduction
        deduct_as_percentage:
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          type: boolean
        employee_deduction_annual_maximum:
          description: The maximum employee deduction amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        contribution:
          description: An object representing the type and value of the company contribution.
          properties:
            type:
              description: |-
                The company contribution scheme.

                `amount`: The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

                `percentage`: The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

                `tiered`: The size of the company contribution corresponds to the size of the employee deduction relative to a tiered matching scheme.
              enum:
              - amount
              - percentage
              - tiered
              type: string
            value: {}
          type: object
        elective:
          default: false
          description: "Whether the company contribution is elective (aka \"matching\"\
            ). For `tiered`, `elective_amount`, and `elective_percentage` contribution\
            \ types this is ignored and assumed to be `true`."
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-elective
        company_contribution_annual_maximum:
          description: The maximum company contribution amount per year. A null value
            signifies no limit.
          nullable: true
          type: string
        limit_option:
          description: "Some benefits require additional information to determine\
            \ their limit. For example, for an HSA benefit, the limit option should\
            \ be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit,\
            \ the limit option should be either \"Joint Filing or Single\" or \"Married\
            \ and Filing Separately\"."
          nullable: true
          type: string
        catch_up:
          default: false
          description: Whether the employee should use a benefit’s "catch up" rate.
            Only Roth 401k and 401k benefits use this value for employees over 50.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-catch_up
        coverage_amount:
          description: "The amount that the employee is insured for. Note: company\
            \ contribution cannot be present if coverage amount is set."
          nullable: true
          type: string
        deduction_reduces_taxable_income:
          default: unset
          description: "Whether the employee deduction reduces taxable income or not.\
            \ Only valid for Group Term Life benefits. Note: when the value is not\
            \ \"unset\", coverage amount and coverage salary multiplier are ignored."
          enum:
          - unset
          - reduces_taxable_income
          - does_not_reduce_taxable_income
          - null
          example: unset
          nullable: true
          type: string
          x-konfig-original-example: unset
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-deduction_reduces_taxable_income
        coverage_salary_multiplier:
          default: "0.00"
          description: "The coverage amount as a multiple of the employee’s salary.\
            \ Only applicable for Group Term Life benefits. Note: cannot be set if\
            \ coverage amount is also set."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-coverage_salary_multiplier
        company_contribution:
          default: "0.00"
          deprecated: true
          description: "The amount to be paid, per pay period, by the company."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-company_contribution
        contribute_as_percentage:
          default: false
          deprecated: true
          description: Whether the company contribution amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsUpdateBenefitRecordRequest-properties-contribute_as_percentage
      required:
      - employee_benefit_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_benefit_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-ytd_benefit_amounts_from_different_company:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        benefit_type:
          description: The benefit type supported by Gusto.
          type: number
        tax_year:
          description: The tax year for which this amount applies.
          maximum: 2999
          minimum: 2000
          type: number
        ytd_employee_deduction_amount:
          default: "0.00"
          description: The year-to-date employee deduction made outside the current
            company.
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_employee_deduction_amount
        ytd_company_contribution_amount:
          default: "0.00"
          description: The year-to-date company contribution made outside the current
            company.
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeBenefitsCreateYtdBenefitAmountsFromDifferentCompanyRequest-properties-ytd_company_contribution_amount
      required:
      - benefit_id
      - employee_id
      - tax_year
      - ytd_company_contribution_amount
      - ytd_employee_deduction_amount
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-employees-employee_id-garnishments:
      properties:
        employee_id:
          type: string
        page:
          type: number
        per:
          type: number
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - page
      - per
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-employees-employee_id-garnishments:
      properties:
        employee_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        description:
          description: The description of the garnishment.
          readOnly: false
          type: string
        active:
          default: true
          description: Whether or not this garnishment is currently active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-active
        amount:
          description: "The amount of the garnishment. Either a percentage or a fixed\
            \ dollar amount. Represented as a float, e.g. \"8.00\"."
          format: float
          readOnly: false
          type: string
        court_ordered:
          description: Whether the garnishment is court ordered.
          readOnly: false
          type: boolean
        times:
          description: The number of times to apply the garnishment. Ignored if recurring
            is true.
          nullable: true
          readOnly: false
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-times
          example: null
        recurring:
          default: false
          description: Whether the garnishment should recur indefinitely.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-recurring
        annual_maximum:
          description: "The maximum deduction per annum. A null value indicates no\
            \ maximum. Represented as a float, e.g. \"200.00\"."
          format: float
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-annual_maximum
          example: null
        pay_period_maximum:
          description: "The maximum deduction per pay period. A null value indicates\
            \ no maximum. Represented as a float, e.g. \"16.00\"."
          format: float
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-pay_period_maximum
          example: null
        deduct_as_percentage:
          default: false
          description: Whether the amount should be treated as a percentage to be
            deducted per pay period.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsCreateGarnishmentRequest-properties-deduct_as_percentage
      required:
      - amount
      - court_ordered
      - description
      - employee_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - employee_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-garnishments-garnishment_id:
      properties:
        garnishment_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - garnishment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - garnishment_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-garnishments-garnishment_id:
      properties:
        garnishment_id:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        description:
          description: The description of the garnishment.
          readOnly: false
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)\
            \ for information on how to use this field."
          type: string
        active:
          default: true
          description: Whether or not this garnishment is currently active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-active
        amount:
          description: "The amount of the garnishment. Either a percentage or a fixed\
            \ dollar amount. Represented as a float, e.g. \"8.00\"."
          format: float
          readOnly: false
          type: string
        court_ordered:
          description: Whether the garnishment is court ordered.
          readOnly: false
          type: boolean
        times:
          description: The number of times to apply the garnishment. Ignored if recurring
            is true.
          nullable: true
          readOnly: false
          type: integer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-times
          example: null
        recurring:
          default: false
          description: Whether the garnishment should recur indefinitely.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-recurring
        annual_maximum:
          description: "The maximum deduction per annum. A null value indicates no\
            \ maximum. Represented as a float, e.g. \"200.00\"."
          format: float
          nullable: true
          readOnly: false
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-annual_maximum
          example: null
        pay_period_maximum:
          description: "The maximum deduction per pay period. A null value indicates\
            \ no maximum. Represented as a float, e.g. \"16.00\"."
          format: float
          nullable: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-pay_period_maximum
          example: null
        deduct_as_percentage:
          default: false
          description: Whether the amount should be treated as a percentage to be
            deducted per pay period.
          example: false
          readOnly: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GarnishmentsUpdateGarnishmentRequest-properties-deduct_as_percentage
      required:
      - garnishment_id
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - garnishment_id
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-plaid-processor_token:
      properties:
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        owner_type:
          description: The owner type of the bank account
          enum:
          - Company
          type: string
        owner_id:
          description: The owner uuid of the bank account
          type: string
        processor_token:
          description: The Plaid processor token
          type: string
      required:
      - owner_id
      - owner_type
      - processor_token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-tax_requirements-state:
      properties:
        company_uuid:
          type: string
        state:
          type: string
        scheduling:
          type: boolean
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      - state
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - state
      - scheduling
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-tax_requirements-state:
      properties:
        company_uuid:
          type: string
        state:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        requirement_sets:
          items:
            properties:
              key:
                $ref: '#/components/schemas/Tax-Requirement-Set-Key'
              effective_from:
                $ref: '#/components/schemas/Tax-Requirement-Effective-From'
              state:
                $ref: '#/components/schemas/State'
              requirements:
                items:
                  properties:
                    key:
                      $ref: '#/components/schemas/Tax-Requirement-Key'
                    value:
                      nullable: true
                      type: string
                  type: object
                type: array
            type: object
          type: array
      required:
      - company_uuid
      - state
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - state
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-tax_requirements:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-contractor_payments-preview:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        contractor_payments:
          items:
            properties:
              bonus:
                type: integer
              contractor_uuid:
                type: string
              date:
                type: string
              hourly_rate:
                type: integer
              hours:
                type: integer
              payment_method:
                type: string
              reimbursement:
                type: integer
              wage:
                type: integer
            type: object
          type: array
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-time_off_policies-time_off_policy_uuid:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          description: Name of the time off policy
          example: test policy3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-name
        accrual_method:
          description: Accrual method of the time off policy
          enum:
          - unlimited
          - per_pay_period
          - per_calendar_year
          - per_anniversary_year
          - per_hour_worked
          - per_hour_worked_no_overtime
          - per_hour_paid
          - per_hour_paid_no_overtime
          example: per_calendar_year
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_method
        accrual_rate:
          description: "The rate at which the time off hours will accrue for an employee\
            \ on the policy. Represented as a float, e.g. \"40.0\"."
          example: "120.0"
          format: float
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesUpdatePolicyRequest-properties-accrual_rate
        accrual_rate_unit:
          description: "The number of hours an employee has to work or be paid for\
            \ to accrue the number of hours set in the accrual rate. Only used for\
            \ hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,\
            \ per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        paid_out_on_termination:
          description: Boolean representing if an employees accrued time off hours
            will be paid out on termination
          type: boolean
        accrual_waiting_period_days:
          description: Number of days before an employee on the policy will begin
            accruing time off hours
          type: integer
        carryover_limit_hours:
          description: The max number of hours and employee can carryover from one
            year to the next
          format: float
          type: string
        max_accrual_hours_per_year:
          description: The max number of hours and employee can accrue in a year
          format: float
          type: string
        max_hours:
          description: The max number of hours an employee can accrue
          format: float
          type: string
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-time_off_policies:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-time_off_policies:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        name:
          description: Name of the time off policy
          example: test policy3
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-name
        policy_type:
          description: Type of the time off policy. Currently only "vacation" and
            "sick" are supported
          example: sick
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TimeOffPoliciesCreatePolicyRequest-properties-policy_type
        accrual_method:
          description: Accrual method of the time off policy
          enum:
          - unlimited
          - per_pay_period
          - per_calendar_year
          - per_anniversary_year
          - per_hour_worked
          - per_hour_worked_no_overtime
          - per_hour_paid
          - per_hour_paid_no_overtime
          type: string
        accrual_rate:
          description: "The rate at which the time off hours will accrue for an employee\
            \ on the policy. Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        accrual_rate_unit:
          description: "The number of hours an employee has to work or be paid for\
            \ to accrue the number of hours set in the accrual rate. Only used for\
            \ hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,\
            \ per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\"."
          format: float
          type: string
        paid_out_on_termination:
          description: Boolean representing if an employees accrued time off hours
            will be paid out on termination
          type: boolean
        accrual_waiting_period_days:
          description: Number of days before an employee on the policy will begin
            accruing time off hours
          type: integer
        carryover_limit_hours:
          description: The max number of hours and employee can carryover from one
            year to the next
          format: float
          type: string
        max_accrual_hours_per_year:
          description: The max number of hours and employee can accrue in a year
          format: float
          type: string
        max_hours:
          description: The max number of hours an employee can accrue
          format: float
          type: string
      required:
      - accrual_method
      - company_uuid
      - name
      - policy_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-add_employees:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employees:
          items:
            properties:
              uuid:
                type: string
              balance:
                format: float
                type: string
            type: object
          type: array
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-remove_employees:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employees:
          items:
            properties:
              uuid:
                type: string
            type: object
          type: array
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-delete--v1-companies-company_uuid-holiday_pay_policy:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-holiday_pay_policy:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-post--v1-companies-company_uuid-holiday_pay_policy:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        federal_holidays:
          description: "An object containing federal holiday objects, each containing\
            \ a boolean selected property."
          properties:
            new_years_day:
              properties:
                selected:
                  type: boolean
              type: object
            mlk_day:
              properties:
                selected:
                  type: boolean
              type: object
            presidents_day:
              properties:
                selected:
                  type: boolean
              type: object
            memorial_day:
              properties:
                selected:
                  type: boolean
              type: object
            juneteenth:
              properties:
                selected:
                  type: boolean
              type: object
            independence_day:
              properties:
                selected:
                  type: boolean
              type: object
            labor_day:
              properties:
                selected:
                  type: boolean
              type: object
            columbus_day:
              properties:
                selected:
                  type: boolean
              type: object
            veterans_day:
              properties:
                selected:
                  type: boolean
              type: object
            thanksgiving:
              properties:
                selected:
                  type: boolean
              type: object
            christmas_day:
              properties:
                selected:
                  type: boolean
              type: object
          type: object
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        federal_holidays:
          description: "An object containing federal holiday objects, each containing\
            \ a boolean selected property."
          properties:
            new_years_day:
              properties:
                selected:
                  type: boolean
              type: object
            mlk_day:
              properties:
                selected:
                  type: boolean
              type: object
            presidents_day:
              properties:
                selected:
                  type: boolean
              type: object
            memorial_day:
              properties:
                selected:
                  type: boolean
              type: object
            juneteenth:
              properties:
                selected:
                  type: boolean
              type: object
            independence_day:
              properties:
                selected:
                  type: boolean
              type: object
            labor_day:
              properties:
                selected:
                  type: boolean
              type: object
            columbus_day:
              properties:
                selected:
                  type: boolean
              type: object
            veterans_day:
              properties:
                selected:
                  type: boolean
              type: object
            thanksgiving:
              properties:
                selected:
                  type: boolean
              type: object
            christmas_day:
              properties:
                selected:
                  type: boolean
              type: object
          type: object
      required:
      - company_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy-add:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employees:
          description: "An array of employee objects, each containing an employee_uuid."
          items:
            properties:
              uuid:
                type: string
            type: object
          type: array
      required:
      - company_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-companies-company_uuid-holiday_pay_policy-remove:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        version:
          description: "The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employees:
          description: "An array of employee objects, each containing an employee_uuid."
          items:
            properties:
              uuid:
                type: string
            type: object
          type: array
      required:
      - company_uuid
      - version
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-paid_holidays:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        year:
          description: "If a year is passed, paid holidays for that year will be returned.\
            \ Otherwise, paid holidays for the next three years will be returned."
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-balance:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
        employees:
          items:
            properties:
              uuid:
                type: string
              balance:
                format: float
                type: string
            type: object
          type: array
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-time_off_policies-time_off_policy_uuid-deactivate:
      properties:
        time_off_policy_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - time_off_policy_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - time_off_policy_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-notifications-notification_uuid:
      properties:
        notification_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - notification_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - notification_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-events:
      properties:
        starting_after_uuid:
          type: string
        resource_uuid:
          type: string
        limit:
          type: string
        event_type:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - starting_after_uuid
      - resource_uuid
      - limit
      - event_type
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-recovery_cases:
      properties:
        company_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-put--v1-recovery_cases-recovery_case_uuid-redebit:
      properties:
        recovery_case_uuid:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - recovery_case_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - recovery_case_uuid
      - X-Gusto-API-Version
    konfig-generated-schema-single-parameter-schema-get--v1-companies-company_uuid-ach_transactions:
      properties:
        company_uuid:
          type: string
        contractor_payment_uuid:
          type: string
        payroll_uuid:
          type: string
        transaction_type:
          type: string
        payment_direction:
          type: string
        X-Gusto-API-Version:
          enum:
          - 2024-03-01
          type: string
      required:
      - company_uuid
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - company_uuid
      - contractor_payment_uuid
      - payroll_uuid
      - transaction_type
      - payment_direction
      - X-Gusto-API-Version
    Employee_Address_allOf:
      properties:
        uuid:
          description: The UUID of the employee address
          type: string
        employee_uuid:
          description: The UUID of the employee
          type: string
        effective_date:
          description: The date the employee started living at the address.
          format: date
          type: string
        courtesy_withholding:
          description: Determines if home taxes should be withheld and paid for employee.
          type: boolean
      type: object
      example: null
    Contractor_Address_allOf:
      properties:
        contractor_uuid:
          description: The UUID of the contractor
          type: integer
      type: object
      example: null
    Address_allOf:
      properties:
        street_1:
          readOnly: false
          type: string
        street_2:
          nullable: true
          readOnly: false
          type: string
        city:
          readOnly: false
          type: string
        state:
          readOnly: false
          type: string
        zip:
          readOnly: false
          type: string
        country:
          default: USA
          example: USA
          readOnly: false
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Address-allOf-1-properties-country
        active:
          description: "The status of the location. Inactive locations have been deleted,\
            \ but may still have historical data associated with them."
          readOnly: true
          type: boolean
      type: object
      example: null
    Department_allOf:
      properties:
        title:
          description: Name of the department
          type: string
        uuid:
          description: The UUID of the department
          type: string
        company_uuid:
          description: The UUID of the company
          type: string
        employees:
          description: Array of employees assigned to the department.
          items:
            properties:
              uuid:
                type: string
          type: array
        contractors:
          description: Array of contractors assigned to the department.
          items:
            properties:
              uuid:
                type: string
          type: array
      type: object
      example: null
    Onboarding_step:
      example:
        requirements:
        - requirements
        - requirements
        id: id
        completed: true
        title: title
        required: true
      properties:
        title:
          description: User-friendly description of the onboarding step.
          type: string
        id:
          description: String identifier for the onboarding step.
          type: string
        required:
          description: "When true, this step has been completed."
          type: boolean
        completed:
          description: "When true, this step has been completed."
          type: boolean
        requirements:
          description: A list of onboarding steps required to begin this step.
          items:
            type: string
          type: array
      title: Onboarding step
      type: object
    Pay_Schedule_Assignment_Body_employees_inner:
      properties:
        employee_uuid:
          description: Employee UUID
          type: string
        pay_schedule_uuid:
          description: Pay schedule UUID
          type: string
      type: object
    Pay_Schedule_Assignment_Body_departments_inner:
      properties:
        department_uuid:
          description: Department UUID
          type: string
        pay_schedule_uuid:
          description: Pay schedule UUID
          type: string
      type: object
    External_Payroll_external_payroll_items_inner_earnings_inner:
      example:
        amount: amount
        hours: hours
        earning_id: 0
        earning_type: earning_type
      properties:
        amount:
          format: float
          type: string
        hours:
          format: float
          type: string
        earning_type:
          type: string
        earning_id:
          type: integer
      type: object
    External_Payroll_external_payroll_items_inner_benefits_inner:
      example:
        employee_deduction_amount: employee_deduction_amount
        benefit_id: 6
        company_contribution_amount: company_contribution_amount
      properties:
        benefit_id:
          type: integer
        company_contribution_amount:
          format: float
          type: string
        employee_deduction_amount:
          format: float
          type: string
      type: object
    External_Payroll_external_payroll_items_inner_taxes_inner:
      example:
        amount: amount
        tax_id: 1
      properties:
        tax_id:
          type: integer
        amount:
          format: float
          type: string
      type: object
    External_Payroll_external_payroll_items_inner:
      example:
        benefits:
        - employee_deduction_amount: employee_deduction_amount
          benefit_id: 6
          company_contribution_amount: company_contribution_amount
        - employee_deduction_amount: employee_deduction_amount
          benefit_id: 6
          company_contribution_amount: company_contribution_amount
        earnings:
        - amount: amount
          hours: hours
          earning_id: 0
          earning_type: earning_type
        - amount: amount
          hours: hours
          earning_id: 0
          earning_type: earning_type
        employee_uuid: employee_uuid
        taxes:
        - amount: amount
          tax_id: 1
        - amount: amount
          tax_id: 1
      properties:
        employee_uuid:
          type: string
        earnings:
          items:
            $ref: '#/components/schemas/External_Payroll_external_payroll_items_inner_earnings_inner'
          type: array
        benefits:
          items:
            $ref: '#/components/schemas/External_Payroll_external_payroll_items_inner_benefits_inner'
          type: array
        taxes:
          items:
            $ref: '#/components/schemas/External_Payroll_external_payroll_items_inner_taxes_inner'
          type: array
      type: object
    External_Payroll_applicable_earnings_inner:
      example:
        earning_id: 5.962133916683182
        earning_type: earning_type
        name: name
        input_type: input_type
        category: category
      properties:
        earning_type:
          type: string
        earning_id:
          type: number
        name:
          type: string
        input_type:
          type: string
        category:
          type: string
      type: object
    External_Payroll_applicable_benefits_inner:
      example:
        description: description
        active: true
        id: 5
      properties:
        description:
          type: string
        id:
          type: integer
        active:
          type: boolean
      type: object
    External_Payroll_applicable_taxes_inner:
      example:
        name: name
        resident_tax: true
        id: 2
        employer_tax: true
      properties:
        id:
          type: integer
        name:
          type: string
        employer_tax:
          description: "Some taxes may have an amount withheld from the employee and\
            \ an amount withheld from the employer, e.g. Social Security. A `true`\
            \ value indicates this is the employer's amount."
          type: boolean
        resident_tax:
          description: Some taxes may have different rates or reporting requirements
            depending on if the employee is a resident or non-resident of the tax
            jurisdiction.
          type: boolean
      type: object
    External_Payroll_metadata:
      description: Stores metadata of the external payroll.
      example:
        deletable: true
      properties:
        deletable:
          description: Determines if the external payroll can be deleted.
          example: true
          readOnly: true
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-External-Payroll-properties-metadata-properties-deletable
      readOnly: true
      type: object
    External_Payroll_Tax_Suggestions_tax_suggestions:
      description: Possible tax liabilities selections.
      example:
        amount: amount
        tax_id: 0
      properties:
        tax_id:
          description: The ID of the tax.
          readOnly: true
          type: integer
        amount:
          description: Calculated tax amount.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Tax_Liabilities_Selections_possible_liabilities:
      description: Possible tax liabilities selections.
      example:
        payroll_check_date: payroll_check_date
        liability_amount: liability_amount
        external_payroll_uuid: external_payroll_uuid
      properties:
        liability_amount:
          description: Liability amount.
          readOnly: true
          type: string
        payroll_check_date:
          description: The external payroll check date.
          readOnly: true
          type: string
        external_payroll_uuid:
          description: The UUID of the external payroll.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Company_compensations_hourly_inner:
      example:
        name: Overtime
        multiple: 1.5
      properties:
        name:
          description: The name of the hourly compensation rate.
          example: Overtime
          readOnly: true
          type: string
          x-konfig-original-example: Overtime
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-compensations-properties-hourly-items-properties-name
        multiple:
          description: The amount multiplied by the base rate of a job to calculate
            compensation.
          example: 1.5
          readOnly: true
          type: number
          x-konfig-original-example: 1.5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-compensations-properties-hourly-items-properties-multiple
      readOnly: true
      type: object
    Company_compensations_fixed_inner:
      example:
        name: Bonus
      properties:
        name:
          description: The name of the fixed compensation.
          example: Bonus
          type: string
          x-konfig-original-example: Bonus
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-compensations-properties-fixed-items-properties-name
      readOnly: true
      type: object
    Company_compensations_paid_time_off_inner:
      example:
        name: Vacation Hours
      properties:
        name:
          description: The name of the paid time off type.
          example: Vacation Hours
          readOnly: true
          type: string
          x-konfig-original-example: Vacation Hours
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-compensations-properties-paid_time_off-items-properties-name
      readOnly: true
      type: object
    Company_compensations:
      description: The available company-wide compensation rates for the company.
      example:
        paid_time_off:
        - name: Vacation Hours
        - name: Vacation Hours
        hourly:
        - name: Overtime
          multiple: 1.5
        - name: Overtime
          multiple: 1.5
        fixed:
        - name: Bonus
        - name: Bonus
      properties:
        hourly:
          description: The available hourly compensation rates for the company.
          items:
            $ref: '#/components/schemas/Company_compensations_hourly_inner'
          readOnly: true
          type: array
          uniqueItems: true
        fixed:
          description: The available fixed compensation rates for the company.
          items:
            $ref: '#/components/schemas/Company_compensations_fixed_inner'
          readOnly: true
          type: array
          uniqueItems: true
        paid_time_off:
          description: The available types of paid time off for the company.
          items:
            $ref: '#/components/schemas/Company_compensations_paid_time_off_inner'
          readOnly: true
          type: array
          uniqueItems: true
      readOnly: true
      type: object
    Company_primary_signatory_home_address:
      example:
        zip: "94107"
        country: USA
        street_1: 524 Roob Divide
        city: San Francisco
        street_2: Suite 565
        state: CA
      properties:
        street_1:
          example: 524 Roob Divide
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-street_1
        street_2:
          example: Suite 565
          nullable: true
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-street_2
        city:
          example: San Francisco
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-city
        state:
          example: CA
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-state
        zip:
          example: "94107"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-zip
        country:
          example: USA
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-home_address-properties-country
      readOnly: true
      type: object
    Company_primary_signatory:
      description: The primary signatory of the company.
      example:
        home_address:
          zip: "94107"
          country: USA
          street_1: 524 Roob Divide
          city: San Francisco
          street_2: Suite 565
          state: CA
        phone: phone
        middle_initial: ""
        last_name: Carter
        first_name: Alda
        email: louie.hessel7757869450111547@zemlak.biz
      properties:
        first_name:
          example: Alda
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-first_name
        middle_initial:
          example: ""
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-middle_initial
        last_name:
          example: Carter
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-last_name
        phone:
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-phone
          example: null
        email:
          example: louie.hessel7757869450111547@zemlak.biz
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_signatory-properties-email
        home_address:
          $ref: '#/components/schemas/Company_primary_signatory_home_address'
      readOnly: true
      type: object
    Company_primary_payroll_admin:
      description: The primary payroll admin of the company.
      example:
        phone: 1-565-710-7559
        last_name: Labadie
        first_name: Ian
        email: louie.hessel7757869450111547@zemlak.biz
      properties:
        first_name:
          example: Ian
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-first_name
        last_name:
          example: Labadie
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-last_name
        phone:
          example: 1-565-710-7559
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-phone
        email:
          example: louie.hessel7757869450111547@zemlak.biz
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-properties-primary_payroll_admin-properties-email
      type: object
    Onboarding_step_1:
      example:
        requirements:
        - requirements
        - requirements
        id: id
        completed: true
        skippable: true
        title: title
        required: true
      properties:
        title:
          description: The display name of the onboarding step
          type: string
        id:
          description: The string identifier for each onboarding step
          type: string
        required:
          description: The boolean flag indicating whether the step is required or
            optional
          type: boolean
        completed:
          description: The boolean flag indicating whether the step is completed or
            not.
          type: boolean
        skippable:
          description: The boolean flag indicating whether the step can be skipped
            or not.
          type: boolean
        requirements:
          description: A list of onboarding step that are required to be completed
            in order to proceed with the current onboarding step.
          items:
            type: string
          type: array
      title: Onboarding step
      type: object
    Contractor_address:
      description: The contractor’s home address.
      example:
        zip: zip
        country: country
        street_1: street_1
        city: city
        street_2: street_2
        state: state
      properties:
        street_1:
          readOnly: true
          type: string
        street_2:
          nullable: true
          readOnly: true
          type: string
        city:
          readOnly: true
          type: string
        state:
          readOnly: true
          type: string
        zip:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
      readOnly: true
      type: object
    Onboarding_step_2:
      example:
        requirements:
        - requirements
        - requirements
        id: id
        completed: true
        title: title
        required: true
      properties:
        title:
          description: User-friendly description of the onboarding step.
          type: string
        id:
          description: String identifier for the onboarding step.
          type: string
        required:
          description: "When true, this step is required."
          type: boolean
        completed:
          description: "When true, this step has been completed."
          type: boolean
        requirements:
          description: A list of onboarding steps required to begin this step.
          items:
            type: string
          type: array
      title: Onboarding step
      type: object
    Contractor_Payment_Summary_total:
      description: The wage and reimbursement totals for all contractor payments within
        a given time period.
      properties:
        reimbursements:
          description: The total reimbursements for contractor payments within a given
            time period.
          example: "110.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Summary-properties-total-properties-reimbursements
        wages:
          description: The total wages for contractor payments within a given time
            period.
          example: "1840.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Summary-properties-total-properties-wages
      readOnly: true
      type: object
    Contractor_Payment_Summary_contractor_payments_inner:
      description: ""
      properties:
        contractor_uuid:
          description: The UUID of the contractor.
          readOnly: true
          type: number
        reimbursement_total:
          description: The total reimbursements for the contractor within a given
            time period.
          readOnly: true
          type: string
        wage_total:
          description: The total wages for the contractor within a given time period.
          readOnly: true
          type: string
        payments:
          description: |
            The contractor’s payments within a given time period.
          items:
            $ref: '#/components/schemas/Contractor-Payment'
          readOnly: true
          type: array
          uniqueItems: false
      readOnly: true
      type: object
    Contractor_Payment_Summary_By_Dates_total:
      description: The wage and reimbursement totals for all contractor payments within
        a given time period.
      properties:
        reimbursements:
          description: The total reimbursements for contractor payments within a given
            time period.
          example: "110.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Summary-By-Dates-properties-total-properties-reimbursements
        wages:
          description: The total wages for contractor payments within a given time
            period.
          example: "1840.0"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Summary-By-Dates-properties-total-properties-wages
      readOnly: true
      type: object
    Contractor_Payment_Summary_By_Dates_contractor_payments_inner:
      description: ""
      properties:
        contractor_uuid:
          description: The UUID of the contractor.
          readOnly: true
          type: string
        check_date:
          description: The payment check date.
          readOnly: true
          type: string
        reimbursement_total:
          description: The total reimbursements for the contractor within a given
            time period.
          readOnly: true
          type: string
        wage_total:
          description: The total wages for the contractor within a given time period.
          readOnly: true
          type: string
        payments:
          description: |
            The contractor’s payments within a given time period.
          items:
            $ref: '#/components/schemas/Contractor-Payment'
          readOnly: true
          type: array
          uniqueItems: false
      readOnly: true
      type: object
    Time_Off_Request_employee:
      description: ""
      properties:
        id:
          description: The ID of the employee the time off request is for.
          example: "234567"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee-properties-id
        full_name:
          description: The full name of the employee the time off request is for.
          example: Jessica Gusto
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-employee-properties-full_name
      readOnly: true
      type: object
    Time_Off_Request_initiator:
      description: ""
      nullable: true
      properties:
        id:
          description: The ID of the employee who initiated the time off request.
          example: "234567"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-initiator-properties-id
        full_name:
          description: The full name of the employee who initiated the time off request.
          example: Jessica Gusto
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-initiator-properties-full_name
      readOnly: true
      type: object
    Time_Off_Request_approver:
      description: This value will be null if the request has not been approved.
      nullable: true
      properties:
        id:
          description: The ID of the employee who approved the time off request.
          example: "345678"
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-approver-properties-id
        full_name:
          description: The full name of the employee who approved the time off request.
          example: Karen Gusto
          readOnly: true
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Time-Off-Request-properties-approver-properties-full_name
      readOnly: true
      type: object
    Payroll_Blockers_Error_errors_inner_metadata:
      properties:
        key:
          description: "A categorization of the payroll blocker, e.g. \"geocode_error\""
          type: string
      type: object
    Payroll_Blockers_Error_errors_inner:
      properties:
        error_key:
          description: The string "base"
          type: string
        category:
          description: The string "payroll_blocker"
          type: string
        message:
          description: Human readable description of the payroll blocker
          type: string
        metadata:
          $ref: '#/components/schemas/Payroll_Blockers_Error_errors_inner_metadata'
      type: object
    Benefit_Type_Requirements_employee_deduction_default_value:
      example:
        type: type
        value: value
      properties:
        value:
          type: string
        type:
          type: string
      type: object
    Benefit_Type_Requirements_employee_deduction:
      description: ""
      example:
        editable: true
        default_value:
          type: type
          value: value
        choices:
        - choices
        - choices
        required: true
      properties:
        required:
          type: boolean
        editable:
          type: boolean
        default_value:
          $ref: '#/components/schemas/Benefit_Type_Requirements_employee_deduction_default_value'
        choices:
          items:
            type: string
          type: array
      type: object
    Benefit_Summary_employees_payroll_benefits_pay_period:
      example:
        end_date: end_date
        start_date: start_date
      properties:
        start_date:
          type: string
        end_date:
          type: string
      type: object
    Benefit_Summary_employees_payroll_benefits:
      example:
        payroll_type: payroll_type
        payroll_uuid: payroll_uuid
        check_date: check_date
        pay_period:
          end_date: end_date
          start_date: start_date
        gross_pay: gross_pay
        company_benefit_deduction: company_benefit_deduction
        company_benefit_contribution: company_benefit_contribution
      properties:
        payroll_uuid:
          type: string
        payroll_type:
          description: Whether it is regular or bonus payroll
          type: string
        check_date:
          type: string
        gross_pay:
          type: string
        company_benefit_deduction:
          type: string
        company_benefit_contribution:
          type: string
        pay_period:
          $ref: '#/components/schemas/Benefit_Summary_employees_payroll_benefits_pay_period'
      type: object
    Benefit_Summary_employees:
      description: ""
      example:
        benefit_contribution: benefit_contribution
        payroll_benefits:
          payroll_type: payroll_type
          payroll_uuid: payroll_uuid
          check_date: check_date
          pay_period:
            end_date: end_date
            start_date: start_date
          gross_pay: gross_pay
          company_benefit_deduction: company_benefit_deduction
          company_benefit_contribution: company_benefit_contribution
        gross_pay: gross_pay
        uuid: uuid
        benefit_deduction: benefit_deduction
        company_benefit_deduction: company_benefit_deduction
        company_benefit_contribution: company_benefit_contribution
      properties:
        uuid:
          description: The UUID of the employee
          type: string
        company_benefit_deduction:
          description: The aggregate of employee deduction for all employees given
            the period of time and benefit type.
          type: string
        company_benefit_contribution:
          description: The aggregate of company contribution for all employees given
            the period of time and benefit type.
          type: string
        benefit_deduction:
          description: Sum of employee benefit deduction given the period of time
            for this specific employee.
          type: string
        benefit_contribution:
          description: Sum of company contribution given the period of time for this
            specific employee.
          type: string
        gross_pay:
          description: Gross pay of this pay check.
          type: string
        payroll_benefits:
          $ref: '#/components/schemas/Benefit_Summary_employees_payroll_benefits'
      type: object
    Company_Benefit_With_Employee_Benefits_employee_benefits_inner_contribution:
      description: An object representing the type and value of the company contribution.
      example:
        type: type
        value: ""
      properties:
        type:
          description: |-
            The company contribution scheme.

            "amount": The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

            "percentage": The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

            "tiered": The company contribution varies according to the size of the employee deduction.
          type: string
        value: {}
      type: object
    Company_Benefit_With_Employee_Benefits_employee_benefits_inner:
      example:
        contribution:
          type: type
          value: ""
        employee_uuid: employee_uuid
        active: true
        company_contribution: company_contribution
        deduct_as_percentage: false
        employee_deduction: "0.00"
        company_benefit_uuid: company_benefit_uuid
        uuid: uuid
      properties:
        employee_uuid:
          description: The UUID of the employee to which the benefit belongs.
          type: string
        company_benefit_uuid:
          description: The UUID of the company benefit.
          type: string
        active:
          default: true
          description: Whether the employee benefit is active.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-active
        deduct_as_percentage:
          default: false
          description: Whether the employee deduction amount should be treated as
            a percentage to be deducted from each payroll.
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-deduct_as_percentage
        employee_deduction:
          default: "0.00"
          description: "The amount to be deducted, per pay period, from the employee's\
            \ pay."
          example: "0.00"
          type: string
          x-konfig-original-example: "0.00"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Company-Benefit-With-Employee-Benefits-properties-employee_benefits-items-properties-employee_deduction
        company_contribution:
          description: The value of the company contribution
          type: string
        uuid:
          type: string
        contribution:
          $ref: '#/components/schemas/Company_Benefit_With_Employee_Benefits_employee_benefits_inner_contribution'
      type: object
    Employee_Benefit_contribution:
      description: An object representing the type and value of the company contribution.
      example:
        type: amount
        value: ""
      properties:
        type:
          description: |-
            The company contribution scheme.

            "amount": The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

            "percentage": The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

            "tiered": The company contribution varies according to the size of the employee deduction.
          example: amount
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Employee-Benefit-properties-contribution-properties-type
        value: {}
      type: object
    Pay_Period_payroll:
      description: Information about the payroll for the pay period.
      example:
        processed: true
        payroll_type: regular
        payroll_uuid: payroll_uuid
        check_date: check_date
        payroll_deadline: 2000-01-23T04:56:07.000+00:00
      properties:
        payroll_uuid:
          description: The UUID of the payroll for this pay period.
          readOnly: true
          type: string
        check_date:
          description: The date on which employees will be paid for the payroll if
            the payroll is submitted on time.
          readOnly: true
          type: string
        processed:
          description: "Whether or not the payroll has been successfully processed.\
            \ Note that processed payrolls cannot be updated. Additionally, a payroll\
            \ is not guaranteed to be processed just because the payroll deadline\
            \ has passed. Late payrolls are not uncommon. Conversely, users may choose\
            \ to run payroll before the payroll deadline."
          readOnly: true
          type: boolean
        payroll_deadline:
          description: "The date by which payroll should be run for employees to be\
            \ paid on time. Payroll data, such as time and attendance data, should\
            \ be submitted on or before this date."
          format: date-time
          readOnly: true
          type: string
        payroll_type:
          description: Whether it is regular pay period or transition pay period.
          enum:
          - regular
          - transition
          readOnly: true
          type: string
      readOnly: true
      type: object
    Payroll_Employee_Compensations_Type_inner_fixed_compensations_inner:
      example:
        job_uuid: job_uuid
        amount: amount
        name: name
      properties:
        name:
          description: "The name of the compensation. This also serves as the unique,\
            \ immutable identifier for this compensation."
          type: string
        amount:
          description: The amount of the compensation for the pay period.
          type: string
        job_uuid:
          description: The UUID of the job for the compensation.
          readOnly: true
          type: string
      type: object
    Payroll_Employee_Compensations_Type_inner_hourly_compensations_inner:
      example:
        job_uuid: job_uuid
        hours: hours
        amount: amount
        compensation_multiplier: 0.8008281904610115
        name: name
      properties:
        name:
          description: "The name of the compensation. This also serves as the unique,\
            \ immutable identifier for this compensation."
          type: string
        hours:
          description: The number of hours to be compensated for this pay period.
          type: string
        amount:
          description: The amount of the compensation. This field is only available
            after the payroll is calculated and cannot be used for updating hourly
            compensations.
          type: string
        job_uuid:
          description: The UUID of the job for the compensation.
          readOnly: true
          type: string
        compensation_multiplier:
          description: The amount multiplied by the base rate to calculate total compensation
            per hour worked.
          readOnly: true
          type: number
      type: object
    Payroll_Employee_Compensations_Type_inner_paid_time_off_inner:
      example:
        hours: hours
        final_payout_unused_hours_input: final_payout_unused_hours_input
        name: name
      properties:
        name:
          description: "The name of the PTO. This also serves as the unique, immutable\
            \ identifier for the PTO."
          type: string
        hours:
          description: The hours of this PTO taken during the pay period.
          type: string
        final_payout_unused_hours_input:
          description: The outstanding hours paid upon termination. This field is
            only applicable for termination payrolls.
          type: string
      type: object
    Payroll_Employee_Compensations_Type_inner_benefits_inner:
      example:
        imputed: true
        name: name
        company_contribution: company_contribution
        employee_deduction: employee_deduction
      properties:
        name:
          readOnly: true
          type: string
        employee_deduction:
          readOnly: true
          type: string
        company_contribution:
          readOnly: true
          type: string
        imputed:
          type: boolean
      readOnly: true
      type: object
    Payroll_Employee_Compensations_Type_inner_deductions_inner:
      example:
        amount: amount
        name: name
      properties:
        name:
          readOnly: true
          type: string
        amount:
          readOnly: true
          type: string
      readOnly: true
      type: object
    Payroll_Employee_Compensations_Type_inner_taxes_inner:
      example:
        amount: amount
        name: name
        employer: true
      properties:
        name:
          minLength: 1
          type: string
        employer:
          type: boolean
        amount:
          minLength: 1
          type: string
      readOnly: true
      required:
      - amount
      - employer
      - name
      type: object
    Payroll_Employee_Compensations_Type_inner:
      example:
        benefits:
        - imputed: true
          name: name
          company_contribution: company_contribution
          employee_deduction: employee_deduction
        - imputed: true
          name: name
          company_contribution: company_contribution
          employee_deduction: employee_deduction
        paid_time_off:
        - hours: hours
          final_payout_unused_hours_input: final_payout_unused_hours_input
          name: name
        - hours: hours
          final_payout_unused_hours_input: final_payout_unused_hours_input
          name: name
        memo: memo
        taxes:
        - amount: amount
          name: name
          employer: true
        - amount: amount
          name: name
          employer: true
        fixed_compensations:
        - job_uuid: job_uuid
          amount: amount
          name: name
        - job_uuid: job_uuid
          amount: amount
          name: name
        gross_pay: gross_pay
        deductions:
        - amount: amount
          name: name
        - amount: amount
          name: name
        version: version
        excluded: true
        net_pay: net_pay
        hourly_compensations:
        - job_uuid: job_uuid
          hours: hours
          amount: amount
          compensation_multiplier: 0.8008281904610115
          name: name
        - job_uuid: job_uuid
          hours: hours
          amount: amount
          compensation_multiplier: 0.8008281904610115
          name: name
        employee_uuid: employee_uuid
        check_amount: check_amount
        payment_method: Check
      properties:
        version:
          description: "The current version of this employee compensation. This field\
            \ is only available for prepared payrolls. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employee_uuid:
          description: The UUID of the employee.
          readOnly: true
          type: string
        excluded:
          description: This employee will be excluded from payroll calculation and
            will not be paid for the payroll. Cancelling a payroll would reset all
            employees' excluded back to false.
          readOnly: true
          type: boolean
        gross_pay:
          description: "The employee's gross pay, equal to regular wages + cash tips\
            \ + payroll tips + any other additional earnings, excluding imputed income.\
            \ This value is only available for processed payrolls."
          nullable: true
          readOnly: true
          type: string
        net_pay:
          description: "The employee's net pay, equal to gross_pay - employee taxes\
            \ - employee deductions or garnishments - cash tips. This value is only\
            \ available for processed payrolls."
          nullable: true
          readOnly: true
          type: string
        check_amount:
          description: "The employee's check amount, equal to net_pay + reimbursements.\
            \ This value is only available for processed payrolls."
          nullable: true
          readOnly: true
          type: string
        payment_method:
          description: The employee's compensation payment method.
          enum:
          - Check
          - Direct Deposit
          nullable: true
          type: string
        memo:
          description: Custom text that will be printed as a personal note to the
            employee on a paystub.
          nullable: true
          readOnly: true
          type: string
        fixed_compensations:
          description: "An array of fixed compensations for the employee. Fixed compensations\
            \ include tips, bonuses, and one time reimbursements. If this payroll\
            \ has been processed, only fixed compensations with a value greater than\
            \ 0.00 are returned. For an unprocessed payroll, all active fixed compensations\
            \ are returned."
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_fixed_compensations_inner'
          type: array
          uniqueItems: false
        hourly_compensations:
          description: "An array of hourly compensations for the employee. Hourly\
            \ compensations include regular, overtime, and double overtime hours.\
            \ If this payroll has been processed, only hourly compensations with a\
            \ value greater than 0.00 are returned. For an unprocessed payroll, all\
            \ active hourly compensations are returned."
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_hourly_compensations_inner'
          type: array
          uniqueItems: false
        paid_time_off:
          description: An array of all paid time off the employee is eligible for
            this pay period.
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_paid_time_off_inner'
          type: array
          uniqueItems: false
        benefits:
          description: An array of employee benefits for the pay period. Benefits
            are only included for processed payroll when the include parameter is
            present.
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_benefits_inner'
          readOnly: true
          type: array
          uniqueItems: false
        deductions:
          description: An array of employee deductions for the pay period. Deductions
            are only included for processed payroll when the include parameter is
            present.
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_deductions_inner'
          readOnly: true
          type: array
          uniqueItems: false
        taxes:
          description: An array of employer and employee taxes for the pay period.
            Only included for processed or calculated payrolls when `taxes` is present
            in the `include` parameter.
          items:
            $ref: '#/components/schemas/Payroll_Employee_Compensations_Type_inner_taxes_inner'
          readOnly: true
          type: array
          uniqueItems: false
      type: object
    Payroll_Company_Taxes_Type_inner:
      example:
        amount: amount
        name: name
        employer: true
      properties:
        name:
          description: The tax name
          type: string
        employer:
          description: Whether this tax is an employer or employee tax
          type: boolean
        amount:
          description: The amount of this tax for the payroll
          type: string
      type: object
    Payroll_Fixed_Compensation_Types_Type_inner:
      example:
        name: name
      properties:
        name:
          description: The name of an available type of fixed compensation.
          readOnly: true
          type: string
      readOnly: true
      type: object
    Payroll_Receipt_totals:
      description: The subtotals for the payroll.
      example:
        reimbursement_debit: "50.0"
        net_pay_debit: "748.34"
        tax_debit: tax_debit
        child_support_debit: "100.0"
        company_debit: "1080.47"
      properties:
        company_debit:
          description: The total company debit for the payroll.
          example: "1080.47"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-company_debit
        net_pay_debit:
          description: The total company net pay for the payroll.
          example: "748.34"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-net_pay_debit
        child_support_debit:
          description: The total child support debit for the payroll.
          example: "100.0"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-child_support_debit
        reimbursement_debit:
          description: The total reimbursements for the payroll.
          example: "50.0"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-totals-properties-reimbursement_debit
        tax_debit:
          description: The total tax debit for the payroll.
          type: string
      type: object
    Payroll_Receipt_taxes_inner:
      example:
        amount: amount
        name: name
      properties:
        name:
          description: The amount paid for this tax.
          type: string
        amount:
          description: The total amount paid by both employer and employee for this
            tax.
          type: string
      type: object
    Payroll_Receipt_employee_compensations_inner:
      example:
        net_pay: net_pay
        total_garnishments: total_garnishments
        employee_uuid: employee_uuid
        child_support_garnishment: child_support_garnishment
        employee_last_name: employee_last_name
        total_reimbursement: total_reimbursement
        total_tax: total_tax
        employee_first_name: employee_first_name
        payment_method: payment_method
      properties:
        employee_uuid:
          description: The UUID of the employee.
          type: string
        employee_first_name:
          description: The first name of the employee.
          type: string
        employee_last_name:
          description: The last name of the employee.
          type: string
        payment_method:
          description: The employee's compensation payment method.\n\n`Check` `Direct
            Deposit`
          type: string
        net_pay:
          description: "The employee's net pay. Net pay paid by check is available\
            \ for reference but is not included in the `[\"totals\"][\"net_pay_debit\"\
            ]` amount."
          type: string
        total_tax:
          description: The total of employer and employee taxes for the pay period.
          type: string
        total_garnishments:
          description: The total garnishments for the pay period.
          type: string
        child_support_garnishment:
          description: The total child support garnishment for the pay period.
          type: string
        total_reimbursement:
          description: The total reimbursement for the pay period.
          type: string
      type: object
    Payroll_Receipt_licensee:
      description: The licensed payroll processor
      example:
        address: 525 20th St
        city: San Francisco
        name: "Gusto, Zenpayroll Inc."
        phone_number: "4157778888"
        state: CA
        postal_code: "94107"
      properties:
        name:
          description: "Always the fixed string \"Gusto, Zenpayroll Inc.\""
          example: "Gusto, Zenpayroll Inc."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-name
        address:
          description: Always the fixed string "525 20th St"
          example: 525 20th St
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-address
        city:
          description: Always the fixed string "San Francisco"
          example: San Francisco
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-city
        state:
          description: Always the fixed string "CA"
          example: CA
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-state
        postal_code:
          description: Always the fixed string "94107"
          example: "94107"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-postal_code
        phone_number:
          description: Always the fixed string "4157778888"
          example: "4157778888"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Payroll-Receipt-properties-licensee-properties-phone_number
      type: object
    Contractor_Payment_Receipt_totals:
      description: The subtotals for the contractor payment.
      example:
        company_debit: "748.34"
      properties:
        company_debit:
          description: The total company debit for the contractor payment.
          example: "748.34"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-totals-properties-company_debit
      type: object
    Contractor_Payment_Receipt_contractor_payments_inner:
      example:
        contractor_business_name: contractor_business_name
        bonus: bonus
        reimbursement: reimbursement
        contractor_first_name: contractor_first_name
        contractor_type: contractor_type
        contractor_uuid: contractor_uuid
        contractor_last_name: contractor_last_name
        payment_method: payment_method
        wage: wage
      properties:
        contractor_uuid:
          description: The UUID of the contractor.
          type: string
        contractor_first_name:
          description: The first name of the contractor. Applies when `contractor_type`
            is `Individual`.
          type: string
        contractor_last_name:
          description: The last name of the contractor.  Applies when `contractor_type`
            is `Individual`.
          type: string
        contractor_business_name:
          description: The business name of the employee. Applies when `contractor_type`
            is `Business`.
          type: string
        contractor_type:
          description: |-
            The type of contractor.

            `Individual` `Business`
          type: string
        payment_method:
          description: |-
            The payment method.

            `Direct Deposit` `Check` `Historical Payment` `Correction Payment`
          type: string
        wage:
          description: "The fixed wage of the payment, regardless of hours worked."
          type: string
        bonus:
          description: The bonus amount in the payment.
          type: string
        reimbursement:
          description: The reimbursement amount in the payment.
          type: string
      type: object
    Contractor_Payment_Receipt_licensee:
      description: The licensed payroll processor
      example:
        address: 525 20th St
        city: San Francisco
        name: "Gusto, Zenpayroll Inc."
        phone_number: "4157778888"
        state: CA
        postal_code: "94107"
      properties:
        name:
          description: "Always the fixed string \"Gusto, Zenpayroll Inc.\""
          example: "Gusto, Zenpayroll Inc."
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-name
        address:
          description: Always the fixed string "525 20th St"
          example: 525 20th St
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-address
        city:
          description: Always the fixed string "San Francisco"
          example: San Francisco
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-city
        state:
          description: Always the fixed string "CA"
          example: CA
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-state
        postal_code:
          description: Always the fixed string "94107"
          example: "94107"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-postal_code
        phone_number:
          description: Always the fixed string "4157778888"
          example: "4157778888"
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Contractor-Payment-Receipt-properties-licensee-properties-phone_number
      type: object
    Signatory_home_address:
      example:
        zip: zip
        country: USA
        street_1: street_1
        city: city
        street_2: street_2
        state: state
      nullable: true
      properties:
        street_1:
          type: string
        street_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          default: USA
          example: USA
          type: string
          x-konfig-original-example: USA
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Signatory-properties-home_address-properties-country
      type: object
    Employee_State_Tax_Input_Question_Format_options_inner:
      example:
        label: label
        value: value
      properties:
        value:
          description: An allowed value to answer the question
          type: string
        label:
          description: A display label that corresponds to the answer value
          type: string
      required:
      - label
      type: object
    Tax_Requirement_applicable_if_inner:
      example:
        value: ""
        key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
      properties:
        key:
          description: An identifier for an individual requirement. Uniqueness is
            guaranteed within a requirement set.
          example: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          title: Tax-Requirement-Key
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Key
        value: {}
      type: object
    Tax_Requirement_Metadata_options_inner:
      example:
        short_label: short_label
        label: label
        value: value
      properties:
        label:
          description: A customer facing label for the answer
          type: string
        value:
          description: The actual value to be submitted
          type: string
        short_label:
          description: A less verbose label that may sometimes be available
          type: string
      required:
      - label
      - value
      type: object
    Tax_Requirement_Metadata_validation:
      description: "[for `tax_rate`] Describes the validation required for the tax\
        \ rate"
      example:
        min: min
        max: max
        rates:
        - rates
        - rates
        type: one_of
      properties:
        type:
          description: Describes the type of tax_rate validation rule
          enum:
          - one_of
          - min_max
          type: string
        min:
          description: "[for `min_max`] The inclusive lower bound of the tax rate"
          type: string
        max:
          description: "[for `min_max`] The inclusive upper bound of the tax rate"
          type: string
        rates:
          description: |
            [for `one_of`] The possible, unformatted tax rates for selection.
            - e.g. ["0.0", "0.001"] representing 0% and 0.1%
          items:
            type: string
          type: array
      required:
      - type
      type: object
    Time_Off_Policy_employees_inner:
      example:
        uuid: uuid
      properties:
        uuid:
          type: string
      type: object
    Holiday_Pay_Policy_federal_holidays_inner_new_years_day:
      example:
        date: date
        name: name
        selected: true
      properties:
        selected:
          type: boolean
        name:
          type: string
        date:
          type: string
      type: object
    Holiday_Pay_Policy_federal_holidays_inner:
      example:
        memorial_day:
          date: date
          name: name
          selected: true
        presidents_day:
          date: date
          name: name
          selected: true
        independence_day:
          date: date
          name: name
          selected: true
        juneteenth:
          date: date
          name: name
          selected: true
        thanksgiving:
          date: date
          name: name
          selected: true
        mlk_day:
          date: date
          name: name
          selected: true
        new_years_day:
          date: date
          name: name
          selected: true
        columbus_day:
          date: date
          name: name
          selected: true
        labor_day:
          date: date
          name: name
          selected: true
        veterans_day:
          date: date
          name: name
          selected: true
      properties:
        new_years_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        mlk_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        presidents_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        memorial_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        juneteenth:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        independence_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        labor_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        columbus_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        veterans_day:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
        thanksgiving:
          $ref: '#/components/schemas/Holiday_Pay_Policy_federal_holidays_inner_new_years_day'
      type: object
    Paid_Holidays_schema:
      example:
        end_date: end_date
        holiday_key: holiday_key
        holiday_name: holiday_name
        start_date: start_date
      properties:
        holiday_key:
          description: the holiday's identifier
          type: string
        holiday_name:
          description: the holiday's official name
          type: string
        start_date:
          description: the holiday's start date (YYYY-MM-DD)
          type: string
        end_date:
          description: the holiday's end date (YYYY-MM-DD)
          type: string
      type: object
    Notification_resources_inner:
      example:
        entity_uuid: entity_uuid
        entity_type: entity_type
        reference_type: reference_type
        reference_uuid: reference_uuid
      properties:
        entity_type:
          description: "The type of entity being described, could be “Contractor”\
            , “Employee”, “BankAccount”, “Payroll”, “ContractorPayment”, “RecoveryCase”\
            , or “Signatory”"
          type: string
        entity_uuid:
          description: Unique identifier of the entity
          type: string
        reference_type:
          description: "Optional. The type of a resource that is related to the one\
            \ described by entity_type and entity_uuid. For instance, if the entity_type\
            \ is “BankAccount”, the reference_type could be the “Employee” or “Contractor”\
            \ to whom the bank account belongs."
          type: string
        reference_uuid:
          description: Optional. Unique identifier of the reference.
          type: string
      required:
      - entity_type
      - entity_uuid
      type: object
    Invoice_Data_active_companies_inner:
      example:
        company_uuid: company_uuid
        active_contractors: 6
        active_employees: 0
        initial_invoice_period: initial_invoice_period
      properties:
        company_uuid:
          description: unique identifier for the company associated with the invoice
            data
          type: string
        active_employees:
          description: The number of active employees the company was or will be invoiced
            for that invoice period. Active employees are calculated as the count
            of onboarded employees hired before the end of the invoice period and
            not terminated before the start of the invoice period.
          type: integer
        active_contractors:
          description: The number of active contractors the company was or will be
            invoiced for that invoice period. Active contractors are calculated as
            any contractor with an active contractor payment during the invoice period.
          type: integer
        initial_invoice_period:
          description: "The first invoice period for the company. This will either\
            \ be the invoice period of the first invoice-able event (first payroll\
            \ or contractor payment) or the date they migrated to embedded, whichever\
            \ is later."
          type: string
      type: object
    CompaniesCreatePartnerManagedCompanyRequest_user:
      description: Information for the user who will be the primary payroll administrator
        for the new company.
      example:
        phone: phone
        last_name: last_name
        first_name: first_name
        email: email
      properties:
        first_name:
          description: The first name of the user who will be the primary payroll
            admin.
          type: string
        last_name:
          description: The last name of the user who will be the primary payroll admin.
          type: string
        email:
          description: The email of the user who will be the primary payroll admin.
          type: string
        phone:
          description: The phone number of the user who will be the primary payroll
            admin.
          type: string
      required:
      - email
      - first_name
      - last_name
      type: object
    CompaniesCreatePartnerManagedCompanyRequest_company:
      example:
        name: name
        ein: ein
        trade_name: trade_name
      properties:
        name:
          description: The legal name of the company.
          type: string
        trade_name:
          description: The name of the company.
          type: string
        ein:
          description: The employer identification number (EIN) of the company.
          type: string
      required:
      - name
      type: object
    SignatoriesCreateSignatoryWithCompleteInformationRequest_home_address:
      description: The signatory's home address
      example:
        zip: zip
        street_1: street_1
        city: city
        street_2: street_2
        state: state
      properties:
        street_1:
          type: string
        street_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      required:
      - city
      - state
      - street_1
      - zip
      type: object
    SignatoriesUpdateRequest_home_address:
      example:
        zip: zip
        street_1: street_1
        city: city
        street_2: street_2
        state: state
      properties:
        street_1:
          type: string
        street_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      type: object
    LocationsUpdateLocationRequest_allOf:
      description: ""
      properties:
        phone_number:
          pattern: "[0-9]{10}"
          type: string
        street_1:
          type: string
        street_2:
          nullable: true
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        mailing_address:
          description: "For a company location, specify if this location is the company's\
            \ mailing address. A company has a single mailing address, so this designation\
            \ will override any previous selection."
          type: boolean
        filing_address:
          description: "For a company location, specify if this location is the company's\
            \ filing address. A company has a single filing address, so this designation\
            \ will override any previous selection."
          type: boolean
      type: object
      example: null
    ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_earnings_inner:
      description: "An array of earnings for the employee. Depends on your company\
        \ selections, earnings includes wages, hours, bonuses, tips, commission and\
        \ more."
      example:
        hours: hours
        amount: amount
        earning_id: 0
        earning_type: CompanyPayType
      properties:
        hours:
          description: The hour of the compensation for the pay period.
          type: string
        amount:
          description: The amount of the earning.
          type: string
        earning_id:
          description: The ID of the earning.
          type: integer
        earning_type:
          description: The earning type for the compensation.
          enum:
          - CompanyPayType
          - CompanyEarningType
          type: string
      type: object
    ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_benefits_inner:
      description: "An array of benefits for the employee. Depends on your company\
        \ selections, benefits include 401k, health insurance and more."
      example:
        employee_deduction_amount: employee_deduction_amount
        benefit_id: 6
        company_contribution_amount: company_contribution_amount
      properties:
        company_contribution_amount:
          description: Company contribution amount towards the benefit
          type: string
        employee_deduction_amount:
          description: Employee deduction amount towards the benefit
          type: string
        benefit_id:
          description: The ID of the benefit.
          type: integer
      type: object
    ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_taxes_inner:
      example:
        amount: amount
        tax_id: 1
      properties:
        amount:
          description: The amount of the tax.
          type: string
        tax_id:
          description: The ID of the tax.
          type: integer
      type: object
    ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner:
      description: "Submit wages, benefits, taxes for each employee"
      example:
        benefits:
        - employee_deduction_amount: employee_deduction_amount
          benefit_id: 6
          company_contribution_amount: company_contribution_amount
        - employee_deduction_amount: employee_deduction_amount
          benefit_id: 6
          company_contribution_amount: company_contribution_amount
        earnings:
        - hours: hours
          amount: amount
          earning_id: 0
          earning_type: CompanyPayType
        - hours: hours
          amount: amount
          earning_id: 0
          earning_type: CompanyPayType
        employee_uuid: employee_uuid
        taxes:
        - amount: amount
          tax_id: 1
        - amount: amount
          tax_id: 1
      properties:
        employee_uuid:
          description: The UUID of the employee.
          type: string
        earnings:
          items:
            $ref: '#/components/schemas/ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_earnings_inner'
          type: array
        benefits:
          items:
            $ref: '#/components/schemas/ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_benefits_inner'
          type: array
        taxes:
          description: "An array of taxes for the employee. Depends on your company\
            \ selections, taxes include federal income tax, social security, medicare,\
            \ and more."
          items:
            $ref: '#/components/schemas/ExternalPayrollsUpdatePayrollItemsRequest_external_payroll_items_inner_taxes_inner'
          type: array
      type: object
    ExternalPayrollsUpdateTaxLiabilitiesRequest_liability_selections_inner:
      description: ""
      example:
        unpaid_liability_amount: 6.027456183070403
        last_unpaid_external_payroll_uuid: last_unpaid_external_payroll_uuid
        tax_id: 0
      properties:
        tax_id:
          description: The ID of the tax.
          type: integer
        last_unpaid_external_payroll_uuid:
          description: The UUID of the last unpaid external payroll uuid. It should
            be null when the full amount of tax liability has been paid.
          nullable: true
          type: string
        unpaid_liability_amount:
          description: A selection of unpaid liability amount.
          type: number
      type: object
    DepartmentsAddPeopleToDepartmentRequest_employees_inner:
      example:
        uuid: uuid
      properties:
        uuid:
          type: string
    EmployeeEmploymentsUpdateTerminationRequest_allOf:
      description: ""
      properties:
        effective_date:
          description: The employee's last day of work.
          type: string
        run_termination_payroll:
          description: "If true, the employee should receive their final wages via\
            \ an off-cycle payroll. If false, they should receive their final wages\
            \ on their current pay schedule."
          type: boolean
      required:
      - effective_date
      type: object
      example: null
    EmployeeTaxSetupUpdateStateTaxesRequest_states_inner_questions_inner_answers_inner:
      example:
        valid_up_to: ""
        valid_from: valid_from
        value: value
      properties:
        value:
          type: string
        valid_from:
          type: string
        valid_up_to:
          nullable: true
      required:
      - valid_from
      - value
      type: object
    EmployeeTaxSetupUpdateStateTaxesRequest_states_inner_questions_inner:
      example:
        answers:
        - valid_up_to: ""
          valid_from: valid_from
          value: value
        - valid_up_to: ""
          valid_from: valid_from
          value: value
        key: key
      properties:
        key:
          type: string
        answers:
          items:
            $ref: '#/components/schemas/EmployeeTaxSetupUpdateStateTaxesRequest_states_inner_questions_inner_answers_inner'
          type: array
          uniqueItems: true
      required:
      - key
      type: object
    EmployeeTaxSetupUpdateStateTaxesRequest_states_inner:
      example:
        questions:
        - answers:
          - valid_up_to: ""
            valid_from: valid_from
            value: value
          - valid_up_to: ""
            valid_from: valid_from
            value: value
          key: key
        - answers:
          - valid_up_to: ""
            valid_from: valid_from
            value: value
          - valid_up_to: ""
            valid_from: valid_from
            value: value
          key: key
        state: state
      properties:
        state:
          type: string
        questions:
          items:
            $ref: '#/components/schemas/EmployeeTaxSetupUpdateStateTaxesRequest_states_inner_questions_inner'
          type: array
          uniqueItems: true
      required:
      - state
      type: object
    EmployeePaymentMethodUpdatePaymentMethodRequest_splits_inner:
      example:
        split_amount: 6
        name: name
        priority: 0
        uuid: uuid
      properties:
        uuid:
          description: |
            The bank account ID
          type: string
        name:
          description: The bank account name
          type: string
        priority:
          description: "The order of priority for each payment split, with priority\
            \ 1 being the first bank account paid. Priority must be unique and sequential."
          type: integer
        split_amount:
          description: The cents amount allocated for each payment split
          nullable: true
          type: integer
      type: object
    JobsAndCompensationsCreateCompensationRequest_minimum_wages_inner:
      description: The minimum wage record you want to apply to the compensation
      example:
        uuid: uuid
      properties:
        uuid:
          description: The UUID of the minimum wage record. Required if adjust_for_minimum_wage
            set to true
          type: string
      type: object
    ContractorPaymentMethodUpdateBankAccountRequest_allOf:
      properties:
        type:
          description: |-
            The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
            see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
          enum:
          - Direct Deposit
          - Check
          type: string
      required:
      - type
      type: object
      example: null
    ContractorsUpdateAddressRequest_allOf:
      properties:
        street_1:
          type: string
        street_2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      type: object
      example: null
    PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_fixed_compensations_inner:
      description: "An array of fixed compensations for the employee. Fixed compensations\
        \ include tips, bonuses, and one time reimbursements."
      example:
        job_uuid: 0
        amount: amount
        name: name
      properties:
        name:
          description: "The name of the compensation. This also serves as the unique,\
            \ immutable identifier for this compensation."
          type: string
        amount:
          description: The amount of the compensation for the pay period.
          type: string
        job_uuid:
          description: The UUID of the job for the compensation.
          type: integer
      type: object
    PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_hourly_compensations_inner:
      description: "An array of hourly compensations for the employee. Hourly compensations\
        \ include regular, overtime, and double overtime hours."
      example:
        job_uuid: 6
        hours: hours
        name: name
      properties:
        name:
          description: "The name of the compensation. This also serves as the unique,\
            \ immutable identifier for this compensation."
          type: string
        hours:
          description: The number of hours to be compensated for this pay period.
          type: string
        job_uuid:
          description: The UUIDs of the job for the compensation.
          type: integer
      type: object
    PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_paid_time_off_inner:
      example:
        hours: hours
        final_payout_unused_hours_input: final_payout_unused_hours_input
        name: name
        policy_uuid: policy_uuid
      properties:
        name:
          description: "The name of the PTO. This also serves as the unique, immutable\
            \ identifier for the PTO. Must pass in name or policy_uuid but not both."
          type: string
        hours:
          description: The hours of this PTO taken during the pay period.
          type: string
        policy_uuid:
          description: The uuid of the PTO policy. Must pass in name or policy_uuid
            but not both.
          type: string
        final_payout_unused_hours_input:
          description: The outstanding hours paid upon termination. This field is
            only applicable for termination payrolls.
          type: string
      type: object
    PayrollsUpdatePayrollByIdRequest_employee_compensations_inner:
      description: ""
      example:
        excluded: true
        hourly_compensations:
        - job_uuid: 6
          hours: hours
          name: name
        - job_uuid: 6
          hours: hours
          name: name
        employee_uuid: employee_uuid
        paid_time_off:
        - hours: hours
          final_payout_unused_hours_input: final_payout_unused_hours_input
          name: name
          policy_uuid: policy_uuid
        - hours: hours
          final_payout_unused_hours_input: final_payout_unused_hours_input
          name: name
          policy_uuid: policy_uuid
        memo: memo
        fixed_compensations:
        - job_uuid: 0
          amount: amount
          name: name
        - job_uuid: 0
          amount: amount
          name: name
        version: version
        payment_method: Direct Deposit
      properties:
        version:
          description: "The current version of this employee compensation from the\
            \ prepared payroll. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)\
            \ for information on how to use this field."
          type: string
        employee_uuid:
          description: The UUID of the employee.
          type: string
        excluded:
          description: This employee will be excluded from payroll calculation and
            will not be paid for the payroll.
          type: boolean
        payment_method:
          description: The employee's compensation payment method. Invalid values
            will be ignored.
          enum:
          - Direct Deposit
          - Check
          type: string
        memo:
          description: Custom text that will be printed as a personal note to the
            employee on a paystub.
          type: string
        fixed_compensations:
          items:
            $ref: '#/components/schemas/PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_fixed_compensations_inner'
          type: array
        hourly_compensations:
          items:
            $ref: '#/components/schemas/PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_hourly_compensations_inner'
          type: array
        paid_time_off:
          description: An array of all paid time off the employee is eligible for
            this pay period. Each paid time off object can be the name or the specific
            policy_uuid.
          items:
            $ref: '#/components/schemas/PayrollsUpdatePayrollByIdRequest_employee_compensations_inner_paid_time_off_inner'
          type: array
      type: object
    EmployeeBenefitsCreateBenefitRecordRequest_contribution:
      description: An object representing the company contribution type and value.
      example:
        type: tiered
        value: ""
      properties:
        type:
          description: |-
            The company contribution scheme.

            `amount`: The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

            `percentage`: The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

            `tiered`: The size of the company contribution corresponds to the size of the employee deduction relative to a tiered matching scheme.
          enum:
          - tiered
          - percentage
          - amount
          type: string
        value: {}
      type: object
    EmployeeBenefitsUpdateBenefitRecordRequest_contribution:
      description: An object representing the type and value of the company contribution.
      example:
        type: amount
        value: ""
      properties:
        type:
          description: |-
            The company contribution scheme.

            `amount`: The company contributes a fixed amount per payroll. If elective is true, the contribution is matching, dollar-for-dollar.

            `percentage`: The company contributes a percentage of the payroll amount per payroll period. If elective is true, the contribution is matching, dollar-for-dollar.

            `tiered`: The size of the company contribution corresponds to the size of the employee deduction relative to a tiered matching scheme.
          enum:
          - amount
          - percentage
          - tiered
          type: string
        value: {}
      type: object
    TaxRequirementsUpdateStateTaxesRequest_requirement_sets_inner_requirements_inner:
      example:
        value: value
        key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
      properties:
        key:
          description: An identifier for an individual requirement. Uniqueness is
            guaranteed within a requirement set.
          example: 71653ec0-00b5-4c66-a58b-22ecf21704c5
          title: Tax-Requirement-Key
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Key
        value:
          nullable: true
          type: string
      type: object
    TaxRequirementsUpdateStateTaxesRequest_requirement_sets_inner:
      example:
        requirements:
        - value: value
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        - value: value
          key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
        state: GA
        effective_from: effective_from
        key: registrations
      properties:
        key:
          description: An identifier for a set of requirements. A list of requirement
            sets can contain multiple sets with the same `key` and different `effective_from`
            values.
          example: registrations
          title: Tax-Requirement-Set-Key
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Set-Key
        effective_from:
          description: "An ISO 8601 formatted date representing the date values became\
            \ effective. Some requirement sets are effective dated, while others are\
            \ not. Multiple requirement sets for the same state/key can/will exist\
            \ with unique effective dates. If a requirement set is has an `effective_from`\
            \ value, all requirement sets with the same key will also have an `effective_from`\
            \ value."
          nullable: true
          title: Tax-Requirement-Effective-From
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-Tax-Requirement-Effective-From
          example: null
        state:
          description: One of the two-letter state abbreviations for the fifty United
            States and the District of Columbia (DC)
          example: GA
          title: State
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-State
        requirements:
          items:
            $ref: '#/components/schemas/TaxRequirementsUpdateStateTaxesRequest_requirement_sets_inner_requirements_inner'
          type: array
      type: object
    ContractorPaymentsPreviewDebitDateRequest_contractor_payments_inner:
      example:
        date: date
        hours: 1
        bonus: 0
        hourly_rate: 6
        reimbursement: 5
        contractor_uuid: contractor_uuid
        payment_method: payment_method
        wage: 5
      properties:
        bonus:
          type: integer
        contractor_uuid:
          type: string
        date:
          type: string
        hourly_rate:
          type: integer
        hours:
          type: integer
        payment_method:
          type: string
        reimbursement:
          type: integer
        wage:
          type: integer
      type: object
    TimeOffPoliciesAddEmployeesToPolicyRequest_employees_inner:
      example:
        balance: balance
        uuid: uuid
      properties:
        uuid:
          type: string
        balance:
          format: float
          type: string
      type: object
    HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day:
      example:
        selected: true
      properties:
        selected:
          type: boolean
      type: object
    HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays:
      description: "An object containing federal holiday objects, each containing\
        \ a boolean selected property."
      example:
        memorial_day:
          selected: true
        presidents_day:
          selected: true
        independence_day:
          selected: true
        juneteenth:
          selected: true
        thanksgiving:
          selected: true
        mlk_day:
          selected: true
        new_years_day:
          selected: true
        columbus_day:
          selected: true
        labor_day:
          selected: true
        veterans_day:
          selected: true
        christmas_day:
          selected: true
      properties:
        new_years_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        mlk_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        presidents_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        memorial_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        juneteenth:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        independence_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        labor_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        columbus_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        veterans_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        thanksgiving:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
        christmas_day:
          $ref: '#/components/schemas/HolidayPayPoliciesCreateCompanyPolicyRequest_federal_holidays_new_years_day'
      type: object
    IntrospectionGetCurrentAccessTokenInfoResponse_resource:
      description: Information about the token resource.
      example:
        type: type
        uuid: uuid
      properties:
        type:
          description: Type of object
          type: string
        uuid:
          description: UUID of object
          type: string
      type: object
    PaySchedulesPreviewPayScheduleDatesResponse_pay_periods_inner:
      example:
        end_date: end_date
        check_date: check_date
        run_payroll_by: run_payroll_by
        start_date: start_date
      properties:
        check_date:
          description: "The payment date, \"Check date\", for the pay period"
          type: string
        run_payroll_by:
          description: The deadline to run payroll for direct deposit on the check
            date
          type: string
        start_date:
          description: The first day of the pay period
          type: string
        end_date:
          description: The last day of the pay period
          type: string
      type: object
    EmployeeEmploymentsGetHistoryResponse_inner:
      example:
        file_new_hire_report: false
        termination_date: 2023-03-30
        two_percent_shareholder: false
        hire_date: 2023-01-30
        employment_status: seasonal
      properties:
        hire_date:
          description: The employee's start day of work for an employment.
          example: 2023-01-30
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-hire_date
        termination_date:
          description: The employee's last day of work for an employment.
          example: 2023-03-30
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-termination_date
        file_new_hire_report:
          description: The boolean flag indicating whether Gusto will file a new hire
            report for the employee.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-file_new_hire_report
        two_percent_shareholder:
          description: Whether the employee is a two percent shareholder of the company.
            This field only applies to companies with an S-Corp entity type.
          example: false
          type: boolean
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-two_percent_shareholder
        employment_status:
          description: The employee's employment status. Supplying an invalid option
            will set the employment_status to *not_set*.
          enum:
          - part_time
          - full_time
          - part_time_eligible
          - variable
          - seasonal
          - not_set
          example: seasonal
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-EmployeeEmploymentsGetHistoryResponse-items-properties-employment_status
      type: object
      x-examples:
        example-1:
          hire_date: 2023-01-30
          termination_date: 2023-03-30
          file_new_hire_report: false
          two_percent_shareholder: false
          employment_status: seasonal
    EmployeeFormsGenerateW2DocumentResponse_allOf:
      properties:
        employee_uuid:
          description: The UUID of the employee
          readOnly: true
          type: string
      example: null
    TaxRequirementsGetStatesResponse_inner:
      example:
        setup_complete: true
        state: GA
      properties:
        state:
          description: One of the two-letter state abbreviations for the fifty United
            States and the District of Columbia (DC)
          example: GA
          title: State
          type: string
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-State
        setup_complete:
          description: |-
            If all requirements for the state have been satisfied such that the company can complete
            onboarding, the company is `setup_complete` in the state. A company must be `setup_complete` in
            all relevant states to complete the `state_setup` company onboarding step.
          type: boolean
      type: object
  securitySchemes:
    Authorization:
      description: The access token
      scheme: bearer
      type: http
      x-konfig-globally-required-security: true
    ApiKeyAuth:
      description: Enter your token in the format **Token <API key>**
      in: header
      name: Authorization
      type: apiKey
      x-konfig-globally-required-security: false
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

