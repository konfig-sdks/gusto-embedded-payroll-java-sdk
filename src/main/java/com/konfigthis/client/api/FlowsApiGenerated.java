/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.Flow;
import com.konfigthis.client.model.FlowsGenerateLinkRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class FlowsApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public FlowsApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public FlowsApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call generateLinkCall(String companyUuid, String xGustoAPIVersion, FlowsGenerateLinkRequest flowsGenerateLinkRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = flowsGenerateLinkRequest;

        // create path and map variables
        String localVarPath = "/v1/companies/{company_uuid}/flows"
            .replace("{" + "company_uuid" + "}", localVarApiClient.escapeString(companyUuid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xGustoAPIVersion != null) {
            localVarHeaderParams.put("X-Gusto-API-Version", localVarApiClient.parameterToString(xGustoAPIVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateLinkValidateBeforeCall(String companyUuid, String xGustoAPIVersion, FlowsGenerateLinkRequest flowsGenerateLinkRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'companyUuid' is set
        if (companyUuid == null) {
            throw new ApiException("Missing the required parameter 'companyUuid' when calling generateLink(Async)");
        }

        return generateLinkCall(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest, _callback);

    }


    private ApiResponse<Flow> generateLinkWithHttpInfo(String companyUuid, String xGustoAPIVersion, FlowsGenerateLinkRequest flowsGenerateLinkRequest) throws ApiException {
        okhttp3.Call localVarCall = generateLinkValidateBeforeCall(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest, null);
        Type localVarReturnType = new TypeToken<Flow>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call generateLinkAsync(String companyUuid, String xGustoAPIVersion, FlowsGenerateLinkRequest flowsGenerateLinkRequest, final ApiCallback<Flow> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateLinkValidateBeforeCall(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest, _callback);
        Type localVarReturnType = new TypeToken<Flow>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GenerateLinkRequestBuilder {
        private final String flowType;
        private final String companyUuid;
        private String entityUuid;
        private String entityType;
        private String xGustoAPIVersion;

        private GenerateLinkRequestBuilder(String flowType, String companyUuid) {
            this.flowType = flowType;
            this.companyUuid = companyUuid;
        }

        /**
         * Set entityUuid
         * @param entityUuid UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details. (optional)
         * @return GenerateLinkRequestBuilder
         */
        public GenerateLinkRequestBuilder entityUuid(String entityUuid) {
            this.entityUuid = entityUuid;
            return this;
        }
        
        /**
         * Set entityType
         * @param entityType the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details. (optional)
         * @return GenerateLinkRequestBuilder
         */
        public GenerateLinkRequestBuilder entityType(String entityType) {
            this.entityType = entityType;
            return this;
        }
        
        /**
         * Set xGustoAPIVersion
         * @param xGustoAPIVersion Determines the date-based API version associated with your API call. If none is provided, your application&#39;s [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used. (optional)
         * @return GenerateLinkRequestBuilder
         */
        public GenerateLinkRequestBuilder xGustoAPIVersion(String xGustoAPIVersion) {
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        /**
         * Build call for generateLink
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            FlowsGenerateLinkRequest flowsGenerateLinkRequest = buildBodyParams();
            return generateLinkCall(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest, _callback);
        }

        private FlowsGenerateLinkRequest buildBodyParams() {
            FlowsGenerateLinkRequest flowsGenerateLinkRequest = new FlowsGenerateLinkRequest();
            flowsGenerateLinkRequest.flowType(this.flowType);
            flowsGenerateLinkRequest.entityUuid(this.entityUuid);
            if (this.entityType != null)
            flowsGenerateLinkRequest.entityType(FlowsGenerateLinkRequest.EntityTypeEnum.fromValue(this.entityType));
            return flowsGenerateLinkRequest;
        }

        /**
         * Execute generateLink request
         * @return Flow
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public Flow execute() throws ApiException {
            FlowsGenerateLinkRequest flowsGenerateLinkRequest = buildBodyParams();
            ApiResponse<Flow> localVarResp = generateLinkWithHttpInfo(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute generateLink request with HTTP info returned
         * @return ApiResponse&lt;Flow&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Flow> executeWithHttpInfo() throws ApiException {
            FlowsGenerateLinkRequest flowsGenerateLinkRequest = buildBodyParams();
            return generateLinkWithHttpInfo(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest);
        }

        /**
         * Execute generateLink request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Flow> _callback) throws ApiException {
            FlowsGenerateLinkRequest flowsGenerateLinkRequest = buildBodyParams();
            return generateLinkAsync(companyUuid, xGustoAPIVersion, flowsGenerateLinkRequest, _callback);
        }
    }

    /**
     * Create a flow
     * Generate a link to access a pre-built workflow in Gusto white-label UI. For security, all generated flows will expire within 1 hour of inactivity or 24 hours from creation time, whichever comes first.  scope: &#x60;flows:write&#x60;
     * @param companyUuid The UUID of the company (required)
     * @return GenerateLinkRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Example response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
     </table>
     */
    public GenerateLinkRequestBuilder generateLink(String flowType, String companyUuid) throws IllegalArgumentException {
        if (flowType == null) throw new IllegalArgumentException("\"flowType\" is required but got null");
            

        if (companyUuid == null) throw new IllegalArgumentException("\"companyUuid\" is required but got null");
            

        return new GenerateLinkRequestBuilder(flowType, companyUuid);
    }
}
