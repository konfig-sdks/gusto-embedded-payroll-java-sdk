/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.Industry;
import com.konfigthis.client.model.IndustrySelectionUpdateCompanyIndustrySelectionRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class IndustrySelectionApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public IndustrySelectionApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public IndustrySelectionApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call getCompanyIndustrySelectionCall(String companyId, String xGustoAPIVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/companies/{company_id}/industry_selection"
            .replace("{" + "company_id" + "}", localVarApiClient.escapeString(companyId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xGustoAPIVersion != null) {
            localVarHeaderParams.put("X-Gusto-API-Version", localVarApiClient.parameterToString(xGustoAPIVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCompanyIndustrySelectionValidateBeforeCall(String companyId, String xGustoAPIVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'companyId' is set
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId' when calling getCompanyIndustrySelection(Async)");
        }

        return getCompanyIndustrySelectionCall(companyId, xGustoAPIVersion, _callback);

    }


    private ApiResponse<Industry> getCompanyIndustrySelectionWithHttpInfo(String companyId, String xGustoAPIVersion) throws ApiException {
        okhttp3.Call localVarCall = getCompanyIndustrySelectionValidateBeforeCall(companyId, xGustoAPIVersion, null);
        Type localVarReturnType = new TypeToken<Industry>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCompanyIndustrySelectionAsync(String companyId, String xGustoAPIVersion, final ApiCallback<Industry> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCompanyIndustrySelectionValidateBeforeCall(companyId, xGustoAPIVersion, _callback);
        Type localVarReturnType = new TypeToken<Industry>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCompanyIndustrySelectionRequestBuilder {
        private final String companyId;
        private String xGustoAPIVersion;

        private GetCompanyIndustrySelectionRequestBuilder(String companyId) {
            this.companyId = companyId;
        }

        /**
         * Set xGustoAPIVersion
         * @param xGustoAPIVersion Determines the date-based API version associated with your API call. If none is provided, your application&#39;s [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used. (optional)
         * @return GetCompanyIndustrySelectionRequestBuilder
         */
        public GetCompanyIndustrySelectionRequestBuilder xGustoAPIVersion(String xGustoAPIVersion) {
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        /**
         * Build call for getCompanyIndustrySelection
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCompanyIndustrySelectionCall(companyId, xGustoAPIVersion, _callback);
        }


        /**
         * Execute getCompanyIndustrySelection request
         * @return Industry
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public Industry execute() throws ApiException {
            ApiResponse<Industry> localVarResp = getCompanyIndustrySelectionWithHttpInfo(companyId, xGustoAPIVersion);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCompanyIndustrySelection request with HTTP info returned
         * @return ApiResponse&lt;Industry&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Industry> executeWithHttpInfo() throws ApiException {
            return getCompanyIndustrySelectionWithHttpInfo(companyId, xGustoAPIVersion);
        }

        /**
         * Execute getCompanyIndustrySelection request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Industry> _callback) throws ApiException {
            return getCompanyIndustrySelectionAsync(companyId, xGustoAPIVersion, _callback);
        }
    }

    /**
     * Get a company industry selection
     * Get industry selection for the company.  scope: &#x60;companies:read&#x60;
     * @param companyId The UUID of the company (required)
     * @return GetCompanyIndustrySelectionRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
     </table>
     */
    public GetCompanyIndustrySelectionRequestBuilder getCompanyIndustrySelection(String companyId) throws IllegalArgumentException {
        if (companyId == null) throw new IllegalArgumentException("\"companyId\" is required but got null");
            

        return new GetCompanyIndustrySelectionRequestBuilder(companyId);
    }
    private okhttp3.Call updateCompanyIndustrySelectionCall(String companyId, String xGustoAPIVersion, IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = industrySelectionUpdateCompanyIndustrySelectionRequest;

        // create path and map variables
        String localVarPath = "/v1/companies/{company_id}/industry_selection"
            .replace("{" + "company_id" + "}", localVarApiClient.escapeString(companyId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xGustoAPIVersion != null) {
            localVarHeaderParams.put("X-Gusto-API-Version", localVarApiClient.parameterToString(xGustoAPIVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCompanyIndustrySelectionValidateBeforeCall(String companyId, String xGustoAPIVersion, IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'companyId' is set
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId' when calling updateCompanyIndustrySelection(Async)");
        }

        return updateCompanyIndustrySelectionCall(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest, _callback);

    }


    private ApiResponse<Industry> updateCompanyIndustrySelectionWithHttpInfo(String companyId, String xGustoAPIVersion, IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest) throws ApiException {
        okhttp3.Call localVarCall = updateCompanyIndustrySelectionValidateBeforeCall(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest, null);
        Type localVarReturnType = new TypeToken<Industry>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateCompanyIndustrySelectionAsync(String companyId, String xGustoAPIVersion, IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest, final ApiCallback<Industry> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCompanyIndustrySelectionValidateBeforeCall(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest, _callback);
        Type localVarReturnType = new TypeToken<Industry>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateCompanyIndustrySelectionRequestBuilder {
        private final String title;
        private final String naicsCode;
        private final String companyId;
        private List<String> sicCodes;
        private String xGustoAPIVersion;

        private UpdateCompanyIndustrySelectionRequestBuilder(String title, String naicsCode, String companyId) {
            this.title = title;
            this.naicsCode = naicsCode;
            this.companyId = companyId;
        }

        /**
         * Set sicCodes
         * @param sicCodes A list of Standard Industrial Classification (SIC) codes, which are four digit number that categorize the industries that companies belong to based on their business activities. If sic_codes is not passed in, we will perform an internal lookup with naics_code. (optional)
         * @return UpdateCompanyIndustrySelectionRequestBuilder
         */
        public UpdateCompanyIndustrySelectionRequestBuilder sicCodes(List<String> sicCodes) {
            this.sicCodes = sicCodes;
            return this;
        }
        
        /**
         * Set xGustoAPIVersion
         * @param xGustoAPIVersion Determines the date-based API version associated with your API call. If none is provided, your application&#39;s [minimum API version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version) is used. (optional)
         * @return UpdateCompanyIndustrySelectionRequestBuilder
         */
        public UpdateCompanyIndustrySelectionRequestBuilder xGustoAPIVersion(String xGustoAPIVersion) {
            this.xGustoAPIVersion = xGustoAPIVersion;
            return this;
        }
        
        /**
         * Build call for updateCompanyIndustrySelection
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest = buildBodyParams();
            return updateCompanyIndustrySelectionCall(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest, _callback);
        }

        private IndustrySelectionUpdateCompanyIndustrySelectionRequest buildBodyParams() {
            IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest = new IndustrySelectionUpdateCompanyIndustrySelectionRequest();
            industrySelectionUpdateCompanyIndustrySelectionRequest.title(this.title);
            industrySelectionUpdateCompanyIndustrySelectionRequest.naicsCode(this.naicsCode);
            industrySelectionUpdateCompanyIndustrySelectionRequest.sicCodes(this.sicCodes);
            return industrySelectionUpdateCompanyIndustrySelectionRequest;
        }

        /**
         * Execute updateCompanyIndustrySelection request
         * @return Industry
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public Industry execute() throws ApiException {
            IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest = buildBodyParams();
            ApiResponse<Industry> localVarResp = updateCompanyIndustrySelectionWithHttpInfo(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateCompanyIndustrySelection request with HTTP info returned
         * @return ApiResponse&lt;Industry&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Industry> executeWithHttpInfo() throws ApiException {
            IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest = buildBodyParams();
            return updateCompanyIndustrySelectionWithHttpInfo(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest);
        }

        /**
         * Execute updateCompanyIndustrySelection request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Industry> _callback) throws ApiException {
            IndustrySelectionUpdateCompanyIndustrySelectionRequest industrySelectionUpdateCompanyIndustrySelectionRequest = buildBodyParams();
            return updateCompanyIndustrySelectionAsync(companyId, xGustoAPIVersion, industrySelectionUpdateCompanyIndustrySelectionRequest, _callback);
        }
    }

    /**
     * Update a company industry selection
     * Update the company industry selection by passing in industry classification codes: [NAICS code](https://www.naics.com), [SICS code](https://siccode.com/) and industry title. Our UI is leveraging [Middesk API](https://docs.middesk.com/reference/introduction) to determine industry classification codes.  scope: &#x60;companies:write&#x60;
     * @param companyId The UUID of the company (required)
     * @return UpdateCompanyIndustrySelectionRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Example response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found     The requested resource does not exist. Make sure the provided ID/UUID is valid.  </td><td>  -  </td></tr>
     </table>
     */
    public UpdateCompanyIndustrySelectionRequestBuilder updateCompanyIndustrySelection(String title, String naicsCode, String companyId) throws IllegalArgumentException {
        if (title == null) throw new IllegalArgumentException("\"title\" is required but got null");
            

        if (naicsCode == null) throw new IllegalArgumentException("\"naicsCode\" is required but got null");
            

        if (companyId == null) throw new IllegalArgumentException("\"companyId\" is required but got null");
            

        return new UpdateCompanyIndustrySelectionRequestBuilder(title, naicsCode, companyId);
    }
}
