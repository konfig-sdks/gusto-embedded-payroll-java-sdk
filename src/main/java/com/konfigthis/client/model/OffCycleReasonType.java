/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The off-cycle reason. Only included for off-cycle payrolls.
 */
@JsonAdapter(OffCycleReasonType.Adapter.class)public enum OffCycleReasonType {
  
  BENEFIT_REVERSAL("Benefit reversal"),
  
  BONUS("Bonus"),
  
  CORRECTION("Correction"),
  
  DISMISSED_EMPLOYEE("Dismissed employee"),
  
  HIRED_EMPLOYEE("Hired employee"),
  
  WAGE_CORRECTION("Wage correction"),
  
  TAX_RECONCILIATION("Tax reconciliation"),
  
  REVERSAL("Reversal"),
  
  DISABILITY_INSURANCE_DISTRIBUTION("Disability insurance distribution"),
  
  TRANSITION_FROM_OLD_PAY_SCHEDULE("Transition from old pay schedule");

  private String value;

  OffCycleReasonType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OffCycleReasonType fromValue(String value) {
    for (OffCycleReasonType b : OffCycleReasonType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<OffCycleReasonType> {
    @Override
    public void write(final JsonWriter jsonWriter, final OffCycleReasonType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OffCycleReasonType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OffCycleReasonType.fromValue(value);
    }
  }
}

