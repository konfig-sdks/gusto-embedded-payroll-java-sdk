/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Input type for the custom field.
 */
@JsonAdapter(CustomFieldType.Adapter.class)public enum CustomFieldType {
  
  TEXT("text"),
  
  CURRENCY("currency"),
  
  NUMBER("number"),
  
  DATE("date"),
  
  RADIO("radio");

  private String value;

  CustomFieldType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CustomFieldType fromValue(String value) {
    for (CustomFieldType b : CustomFieldType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CustomFieldType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CustomFieldType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CustomFieldType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CustomFieldType.fromValue(value);
    }
  }
}

