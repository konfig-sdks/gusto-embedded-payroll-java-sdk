/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmployeeBankAccount;
import com.konfigthis.client.model.EmployeePaymentMethod;
import com.konfigthis.client.model.EmployeePaymentMethodCreateBankAccountRequest;
import com.konfigthis.client.model.EmployeePaymentMethodUpdatePaymentMethodRequest;
import com.konfigthis.client.model.EmployeePaymentMethodUpdatePaymentMethodRequestSplitsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmployeePaymentMethodApi
 */
@Disabled
public class EmployeePaymentMethodApiTest {

    private static EmployeePaymentMethodApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmployeePaymentMethodApi(apiClient);
    }

    /**
     * Create an employee bank account
     *
     * Creates an employee bank account. An employee can have multiple bank accounts. Note that creating an employee bank account will also update the employee&#39;s payment method.  scope: &#x60;employee_payment_methods:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBankAccountTest() throws ApiException {
        String name = null;
        String routingNumber = null;
        String accountNumber = null;
        String accountType = null;
        String employeeId = null;
        String xGustoAPIVersion = null;
        EmployeeBankAccount response = api.createBankAccount(name, routingNumber, accountNumber, accountType, employeeId)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete an employee bank account
     *
     * Deletes an employee bank account. To update an employee&#39;s bank account details, delete the bank account first and create a new one.  scope: &#x60;employee_payment_methods:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBankAccountTest() throws ApiException {
        String employeeId = null;
        String bankAccountUuid = null;
        String xGustoAPIVersion = null;
        api.deleteBankAccount(employeeId, bankAccountUuid)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an employee&#39;s payment method
     *
     * Fetches an employee&#39;s payment method. An employee payment method describes how the payment should be split across the employee&#39;s associated bank accounts.  scope: &#x60;employee_payment_methods:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBankAccountsTest() throws ApiException {
        String employeeId = null;
        String xGustoAPIVersion = null;
        EmployeePaymentMethod response = api.getBankAccounts(employeeId)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all employee bank accounts
     *
     * Returns all employee bank accounts.  scope: &#x60;employee_payment_methods:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBankAccountsTest() throws ApiException {
        String employeeId = null;
        Double page = null;
        Double per = null;
        String xGustoAPIVersion = null;
        List<EmployeeBankAccount> response = api.listBankAccounts(employeeId)
                .page(page)
                .per(per)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an employee&#39;s payment method
     *
     * Updates an employee&#39;s payment method. Note that creating an employee bank account will also update the employee&#39;s payment method.  scope: &#x60;employee_payment_methods:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePaymentMethodTest() throws ApiException {
        String version = null;
        String type = null;
        String employeeId = null;
        String splitBy = null;
        List<EmployeePaymentMethodUpdatePaymentMethodRequestSplitsInner> splits = null;
        String xGustoAPIVersion = null;
        EmployeePaymentMethod response = api.updatePaymentMethod(version, type, employeeId)
                .splitBy(splitBy)
                .splits(splits)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

}
