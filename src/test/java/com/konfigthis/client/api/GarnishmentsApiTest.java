/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Garnishment;
import com.konfigthis.client.model.GarnishmentsCreateGarnishmentRequest;
import com.konfigthis.client.model.GarnishmentsUpdateGarnishmentRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GarnishmentsApi
 */
@Disabled
public class GarnishmentsApiTest {

    private static GarnishmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new GarnishmentsApi(apiClient);
    }

    /**
     * Create a garnishment
     *
     * Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.  scope: &#x60;garnishments:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGarnishmentTest() throws ApiException {
        String description = null;
        Float amount = null;
        Boolean courtOrdered = null;
        String employeeId = null;
        Boolean active = null;
        Integer times = null;
        Boolean recurring = null;
        Float annualMaximum = null;
        Float payPeriodMaximum = null;
        Boolean deductAsPercentage = null;
        String xGustoAPIVersion = null;
        Garnishment response = api.createGarnishment(description, amount, courtOrdered, employeeId)
                .active(active)
                .times(times)
                .recurring(recurring)
                .annualMaximum(annualMaximum)
                .payPeriodMaximum(payPeriodMaximum)
                .deductAsPercentage(deductAsPercentage)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get garnishments for an employee
     *
     * Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.  scope: &#x60;garnishments:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmployeeGarnishmentsTest() throws ApiException {
        String employeeId = null;
        Double page = null;
        Double per = null;
        String xGustoAPIVersion = null;
        List<Garnishment> response = api.getEmployeeGarnishments(employeeId)
                .page(page)
                .per(per)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a garnishment
     *
     * Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.  scope: &#x60;garnishments:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGarnishmentTest() throws ApiException {
        String garnishmentId = null;
        String xGustoAPIVersion = null;
        Garnishment response = api.getGarnishment(garnishmentId)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a garnishment
     *
     * Garnishments, or employee deductions, are fixed amounts or percentages deducted from an employee’s pay. They can be deducted a specific number of times or on a recurring basis. Garnishments can also have maximum deductions on a yearly or per-pay-period bases. Common uses for garnishments are court-ordered payments for child support or back taxes. Some companies provide loans to their employees that are repaid via garnishments.  scope: &#x60;garnishments:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGarnishmentTest() throws ApiException {
        String version = null;
        String garnishmentId = null;
        String description = null;
        Boolean active = null;
        Float amount = null;
        Boolean courtOrdered = null;
        Integer times = null;
        Boolean recurring = null;
        Float annualMaximum = null;
        Float payPeriodMaximum = null;
        Boolean deductAsPercentage = null;
        String xGustoAPIVersion = null;
        Garnishment response = api.updateGarnishment(version, garnishmentId)
                .description(description)
                .active(active)
                .amount(amount)
                .courtOrdered(courtOrdered)
                .times(times)
                .recurring(recurring)
                .annualMaximum(annualMaximum)
                .payPeriodMaximum(payPeriodMaximum)
                .deductAsPercentage(deductAsPercentage)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

}
