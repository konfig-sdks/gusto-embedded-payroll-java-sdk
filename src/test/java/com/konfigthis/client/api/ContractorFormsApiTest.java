/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ContractorFormsCreate1099FormRequest;
import com.konfigthis.client.model.Form1099;
import com.konfigthis.client.model.FormPdf;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractorFormsApi
 */
@Disabled
public class ContractorFormsApiTest {

    private static ContractorFormsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContractorFormsApi(apiClient);
    }

    /**
     * Generate a 1099 form [DEMO]
     *
     * &gt; ðŸš§ Demo action &gt; &gt; This action is only available in the Demo environment  Generates a 1099 document for testing purposes.  scope: &#x60;contractors:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void create1099FormTest() throws ApiException {
        String contractorId = null;
        Integer year = null;
        String xGustoAPIVersion = null;
        Form1099 response = api.create1099Form(contractorId)
                .year(year)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a contractor form
     *
     * Get a contractor form  scope: &#x60;contractor_forms:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdFormTest() throws ApiException {
        String contractorUuid = null;
        String formId = null;
        String xGustoAPIVersion = null;
        Form1099 response = api.getByIdForm(contractorUuid, formId)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the contractor form pdf
     *
     * Get the link to the form PDF  scope: &#x60;contractor_forms:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPdfLinkTest() throws ApiException {
        String contractorUuid = null;
        String formId = null;
        String xGustoAPIVersion = null;
        FormPdf response = api.getPdfLink(contractorUuid, formId)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all contractor forms
     *
     * Get a list of all contractor&#39;s forms  scope: &#x60;contractor_forms:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        String contractorUuid = null;
        String xGustoAPIVersion = null;
        List<Form1099> response = api.listAll(contractorUuid)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

}
