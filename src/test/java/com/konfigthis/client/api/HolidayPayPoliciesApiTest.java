/*
 * Gusto API
 * Welcome to Gusto's Embedded Payroll API documentation!
 *
 * The version of the OpenAPI document: 2024-03-01
 * Contact: developer@gusto.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.HolidayPayPoliciesAddEmployeesToPolicyRequest;
import com.konfigthis.client.model.HolidayPayPoliciesCreateCompanyPolicyRequest;
import com.konfigthis.client.model.HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidays;
import com.konfigthis.client.model.HolidayPayPoliciesPreviewCompanyPaidHolidaysRequest;
import com.konfigthis.client.model.HolidayPayPoliciesRemoveEmployeesRequest;
import com.konfigthis.client.model.HolidayPayPoliciesUpdatePolicyRequest;
import com.konfigthis.client.model.HolidayPayPolicy;
import com.konfigthis.client.model.PaidHolidays;
import com.konfigthis.client.model.TimeOffPolicyEmployeesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HolidayPayPoliciesApi
 */
@Disabled
public class HolidayPayPoliciesApiTest {

    private static HolidayPayPoliciesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new HolidayPayPoliciesApi(apiClient);
    }

    /**
     * Add employees to a company&#39;s holiday pay policy
     *
     * Add employees to a company&#39;s holiday pay policy  scope: &#x60;holiday_pay_policies:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addEmployeesToPolicyTest() throws ApiException {
        String version = null;
        String companyUuid = null;
        List<TimeOffPolicyEmployeesInner> employees = null;
        String xGustoAPIVersion = null;
        HolidayPayPolicy response = api.addEmployeesToPolicy(version, companyUuid)
                .employees(employees)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a holiday pay policy for a company
     *
     * Create a holiday pay policy for a company  scope: &#x60;holiday_pay_policies:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCompanyPolicyTest() throws ApiException {
        String companyUuid = null;
        HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidays federalHolidays = null;
        String xGustoAPIVersion = null;
        HolidayPayPolicy response = api.createCompanyPolicy(companyUuid)
                .federalHolidays(federalHolidays)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a company&#39;s holiday pay policy
     *
     * Delete a company&#39;s holiday pay policy  scope: &#x60;holiday_pay_policies:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePolicyTest() throws ApiException {
        String companyUuid = null;
        String xGustoAPIVersion = null;
        api.deletePolicy(companyUuid)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a company&#39;s holiday pay policy
     *
     * Get a company&#39;s holiday pay policy  scope: &#x60;holiday_pay_policies:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompanyPolicyTest() throws ApiException {
        String companyUuid = null;
        String xGustoAPIVersion = null;
        HolidayPayPolicy response = api.getCompanyPolicy(companyUuid)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Preview a company&#39;s paid holidays
     *
     * Preview a company&#39;s paid holidays  scope: &#x60;holiday_pay_policies:read&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void previewCompanyPaidHolidaysTest() throws ApiException {
        String companyUuid = null;
        String year = null;
        String xGustoAPIVersion = null;
        PaidHolidays response = api.previewCompanyPaidHolidays(companyUuid)
                .year(year)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove employees from a company&#39;s holiday pay policy
     *
     * Remove employees from a company&#39;s holiday pay policy  scope: &#x60;holiday_pay_policies:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeEmployeesTest() throws ApiException {
        String version = null;
        String companyUuid = null;
        List<TimeOffPolicyEmployeesInner> employees = null;
        String xGustoAPIVersion = null;
        HolidayPayPolicy response = api.removeEmployees(version, companyUuid)
                .employees(employees)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a company&#39;s holiday pay policy
     *
     * Update a company&#39;s holiday pay policy  scope: &#x60;holiday_pay_policies:write&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePolicyTest() throws ApiException {
        String version = null;
        String companyUuid = null;
        HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidays federalHolidays = null;
        String xGustoAPIVersion = null;
        HolidayPayPolicy response = api.updatePolicy(version, companyUuid)
                .federalHolidays(federalHolidays)
                .xGustoAPIVersion(xGustoAPIVersion)
                .execute();
        // TODO: test validations
    }

}
